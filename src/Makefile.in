# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@EMBEDDED_LEVELDB_TRUE@am__append_1 = -I$(srcdir)/leveldb/include \
@EMBEDDED_LEVELDB_TRUE@	-I$(srcdir)/leveldb/helpers/memenv
@EMBEDDED_LEVELDB_TRUE@am__append_2 = $(builddir)/leveldb/libleveldb.a
@EMBEDDED_LEVELDB_TRUE@am__append_3 = $(builddir)/leveldb/libmemenv.a
@HAVE_OPENMP_TRUE@am__append_4 = MULTICORE=1
@TARGET_DARWIN_TRUE@am__append_5 = PLATFORM=darwin
@ENABLE_WALLET_TRUE@am__append_6 = $(BDB_CPPFLAGS)
@ENABLE_WALLET_TRUE@am__append_7 = $(LIBBITCOIN_WALLET)
@ENABLE_ZMQ_TRUE@am__append_8 = $(LIBBITCOIN_ZMQ)
@ENABLE_PROTON_TRUE@am__append_9 = $(LIBBITCOIN_PROTON)
bin_PROGRAMS = komodod$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	$(am__EXEEXT_3)
noinst_PROGRAMS =
TESTS = $(am__EXEEXT_3)
#endif
@BUILD_BITCOIN_UTILS_TRUE@am__append_10 = komodo-cli komodo-tx
@ENABLE_WALLET_TRUE@am__append_11 = wallet-utility
@ENABLE_MINING_TRUE@am__append_12 = \
@ENABLE_MINING_TRUE@	-DEQUIHASH_TROMP_ATOMIC

@ENABLE_MINING_TRUE@am__append_13 = \
@ENABLE_MINING_TRUE@	${EQUIHASH_TROMP_SOURCES}

@GLIBC_BACK_COMPAT_TRUE@am__append_14 = compat/glibc_compat.cpp
@ENABLE_TESTS_TRUE@am__append_15 = rpc/testtransactions.cpp
@TARGET_WINDOWS_TRUE@am__append_16 = bitcoind-res.rc
@ENABLE_WALLET_TRUE@am__append_17 = $(LIBBITCOIN_WALLET)
@TARGET_DARWIN_TRUE@am__append_18 = libcc.dylib $(LIBSECP256K1)
@TARGET_WINDOWS_TRUE@am__append_19 = libcc.dll $(LIBSECP256K1)
@TARGET_LINUX_TRUE@am__append_20 = libcc.so $(LIBSECP256K1)
@ENABLE_PROTON_TRUE@am__append_21 = $(LIBBITCOIN_PROTON) $(PROTON_LIBS)

# [+] Decker: use static linking for libstdc++.6.dylib, libgomp.1.dylib, libgcc_s.1.dylib
@TARGET_DARWIN_TRUE@am__append_22 = -static-libgcc
@TARGET_DARWIN_TRUE@am__append_23 = -static-libgcc
@TARGET_WINDOWS_TRUE@am__append_24 = bitcoin-cli-res.rc
@TARGET_WINDOWS_TRUE@am__append_25 = bitcoin-tx-res.rc
@BUILD_BITCOIN_LIBS_TRUE@@GLIBC_BACK_COMPAT_TRUE@am__append_26 = compat/glibc_compat.cpp
@ENABLE_TESTS_TRUE@am__append_27 = komodo-test
@ENABLE_TESTS_TRUE@am__append_28 = komodo-test
subdir = src
SUBDIRS =
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/build-aux/m4/ax_openmp.m4 \
	$(top_srcdir)/build-aux/m4/ax_pthread.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_find_bdb.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_subdir_to_include.m4 \
	$(top_srcdir)/build-aux/m4/l_atomic.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__include_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config/bitcoin-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
_lcurl_AR = $(AR) $(ARFLAGS)
_lcurl_LIBADD =
_lcurl_SOURCES = -lcurl.c
_lcurl_OBJECTS = -lcurl.$(OBJEXT)
crypto_libbitcoin_crypto_a_AR = $(AR) $(ARFLAGS)
crypto_libbitcoin_crypto_a_LIBADD =
am__crypto_libbitcoin_crypto_a_SOURCES_DIST = crypto/common.h \
	crypto/equihash.cpp crypto/equihash.h crypto/equihash.tcc \
	crypto/hmac_sha256.cpp crypto/hmac_sha256.h \
	crypto/hmac_sha512.cpp crypto/hmac_sha512.h \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h crypto/haraka.h \
	crypto/haraka_portable.h crypto/verus_hash.h \
	crypto/verus_hash.cpp pow/tromp/equi_miner.h pow/tromp/equi.h \
	pow/tromp/osx_barrier.h
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 =
@ENABLE_MINING_TRUE@am__objects_2 = $(am__objects_1)
am_crypto_libbitcoin_crypto_a_OBJECTS =  \
	crypto/crypto_libbitcoin_crypto_a-equihash.$(OBJEXT) \
	crypto/crypto_libbitcoin_crypto_a-hmac_sha256.$(OBJEXT) \
	crypto/crypto_libbitcoin_crypto_a-hmac_sha512.$(OBJEXT) \
	crypto/crypto_libbitcoin_crypto_a-ripemd160.$(OBJEXT) \
	crypto/crypto_libbitcoin_crypto_a-sha1.$(OBJEXT) \
	crypto/crypto_libbitcoin_crypto_a-sha256.$(OBJEXT) \
	crypto/crypto_libbitcoin_crypto_a-sha512.$(OBJEXT) \
	crypto/crypto_libbitcoin_crypto_a-verus_hash.$(OBJEXT) \
	$(am__objects_2)
crypto_libbitcoin_crypto_a_OBJECTS =  \
	$(am_crypto_libbitcoin_crypto_a_OBJECTS)
crypto_libverus_crypto_a_AR = $(AR) $(ARFLAGS)
crypto_libverus_crypto_a_LIBADD =
am_crypto_libverus_crypto_a_OBJECTS =  \
	crypto/crypto_libverus_crypto_a-haraka.$(OBJEXT)
crypto_libverus_crypto_a_OBJECTS =  \
	$(am_crypto_libverus_crypto_a_OBJECTS)
crypto_libverus_portable_crypto_a_AR = $(AR) $(ARFLAGS)
crypto_libverus_portable_crypto_a_LIBADD =
am_crypto_libverus_portable_crypto_a_OBJECTS = crypto/crypto_libverus_portable_crypto_a-haraka_portable.$(OBJEXT)
crypto_libverus_portable_crypto_a_OBJECTS =  \
	$(am_crypto_libverus_portable_crypto_a_OBJECTS)
libbitcoin_cli_a_AR = $(AR) $(ARFLAGS)
libbitcoin_cli_a_LIBADD =
am_libbitcoin_cli_a_OBJECTS = rpc/libbitcoin_cli_a-client.$(OBJEXT) \
	$(am__objects_1) $(am__objects_1)
libbitcoin_cli_a_OBJECTS = $(am_libbitcoin_cli_a_OBJECTS)
libbitcoin_common_a_AR = $(AR) $(ARFLAGS)
libbitcoin_common_a_LIBADD =
am_libbitcoin_common_a_OBJECTS = libbitcoin_common_a-amount.$(OBJEXT) \
	libbitcoin_common_a-arith_uint256.$(OBJEXT) \
	libbitcoin_common_a-base58.$(OBJEXT) \
	libbitcoin_common_a-bech32.$(OBJEXT) \
	libbitcoin_common_a-chainparams.$(OBJEXT) \
	libbitcoin_common_a-coins.$(OBJEXT) \
	libbitcoin_common_a-compressor.$(OBJEXT) \
	consensus/libbitcoin_common_a-upgrades.$(OBJEXT) \
	libbitcoin_common_a-core_read.$(OBJEXT) \
	libbitcoin_common_a-core_write.$(OBJEXT) \
	crypto/libbitcoin_common_a-verus_hash.$(OBJEXT) \
	libbitcoin_common_a-hash.$(OBJEXT) \
	libbitcoin_common_a-importcoin.$(OBJEXT) \
	libbitcoin_common_a-key.$(OBJEXT) \
	libbitcoin_common_a-key_io.$(OBJEXT) \
	libbitcoin_common_a-keystore.$(OBJEXT) \
	libbitcoin_common_a-netbase.$(OBJEXT) \
	libbitcoin_common_a-metrics.$(OBJEXT) \
	primitives/libbitcoin_common_a-block.$(OBJEXT) \
	primitives/libbitcoin_common_a-transaction.$(OBJEXT) \
	primitives/libbitcoin_common_a-nonce.$(OBJEXT) \
	libbitcoin_common_a-protocol.$(OBJEXT) \
	libbitcoin_common_a-pubkey.$(OBJEXT) \
	libbitcoin_common_a-scheduler.$(OBJEXT) \
	script/libbitcoin_common_a-cc.$(OBJEXT) \
	script/libbitcoin_common_a-interpreter.$(OBJEXT) \
	script/libbitcoin_common_a-script.$(OBJEXT) \
	script/libbitcoin_common_a-script_ext.$(OBJEXT) \
	script/libbitcoin_common_a-script_error.$(OBJEXT) \
	script/libbitcoin_common_a-sign.$(OBJEXT) \
	script/libbitcoin_common_a-standard.$(OBJEXT) \
	libbitcoin_common_a-transaction_builder.$(OBJEXT) \
	cc/libbitcoin_common_a-CCtokenutils.$(OBJEXT) \
	cc/libbitcoin_common_a-CCutilbits.$(OBJEXT) $(am__objects_1) \
	$(am__objects_1)
libbitcoin_common_a_OBJECTS = $(am_libbitcoin_common_a_OBJECTS)
libbitcoin_proton_a_AR = $(AR) $(ARFLAGS)
libbitcoin_proton_a_LIBADD =
am__libbitcoin_proton_a_SOURCES_DIST = amqp/amqpabstractnotifier.cpp \
	amqp/amqpnotificationinterface.cpp \
	amqp/amqppublishnotifier.cpp
@ENABLE_PROTON_TRUE@am_libbitcoin_proton_a_OBJECTS = amqp/libbitcoin_proton_a-amqpabstractnotifier.$(OBJEXT) \
@ENABLE_PROTON_TRUE@	amqp/libbitcoin_proton_a-amqpnotificationinterface.$(OBJEXT) \
@ENABLE_PROTON_TRUE@	amqp/libbitcoin_proton_a-amqppublishnotifier.$(OBJEXT)
libbitcoin_proton_a_OBJECTS = $(am_libbitcoin_proton_a_OBJECTS)
libbitcoin_server_a_AR = $(AR) $(ARFLAGS)
libbitcoin_server_a_LIBADD =
am__libbitcoin_server_a_SOURCES_DIST = sendalert.cpp addrman.cpp \
	alert.cpp alertkeys.h asyncrpcoperation.cpp asyncrpcqueue.cpp \
	bloom.cpp cc/eval.cpp cc/import.cpp cc/importgateway.cpp \
	cc/CCassetsCore.cpp cc/CCcustom.cpp cc/CCtx.cpp cc/CCutils.cpp \
	cc/CCtokens.cpp cc/assets.cpp cc/faucet.cpp cc/rewards.cpp \
	cc/dice.cpp cc/lotto.cpp cc/fsm.cpp cc/heir.cpp cc/oracles.cpp \
	cc/prices.cpp cc/pegs.cpp cc/marmara.cpp cc/payments.cpp \
	cc/gateways.cpp cc/channels.cpp cc/auction.cpp \
	cc/betprotocol.cpp chain.cpp checkpoints.cpp crosschain.cpp \
	crosschain_authority.cpp crypto/haraka.h \
	crypto/haraka_portable.h crypto/verus_hash.h \
	crypto/verus_hash.cpp deprecation.cpp httprpc.cpp \
	httpserver.cpp init.cpp dbwrapper.cpp main.cpp merkleblock.cpp \
	metrics.h miner.cpp net.cpp notaries_staked.cpp noui.cpp \
	notarisationdb.cpp paymentdisclosure.cpp \
	paymentdisclosuredb.cpp policy/fees.cpp pow.cpp rest.cpp \
	rpc/blockchain.cpp rpc/crosschain.cpp rpc/mining.cpp \
	rpc/misc.cpp rpc/net.cpp rpc/rawtransaction.cpp rpc/server.cpp \
	script/serverchecker.cpp script/sigcache.cpp timedata.cpp \
	torcontrol.cpp txdb.cpp txmempool.cpp validationinterface.cpp \
	addressindex.h spentindex.h addrman.h alert.h amount.h \
	amqp/amqpabstractnotifier.h amqp/amqpconfig.h \
	amqp/amqpnotificationinterface.h amqp/amqppublishnotifier.h \
	amqp/amqpsender.h arith_uint256.h asyncrpcoperation.h \
	asyncrpcqueue.h base58.h bech32.h bloom.h cc/eval.h chain.h \
	chainparams.h chainparamsbase.h chainparamsseeds.h \
	checkpoints.h checkqueue.h clientversion.h coincontrol.h \
	coins.h compat.h compat/byteswap.h compat/endian.h \
	compat/sanity.h compressor.h consensus/consensus.h \
	consensus/params.h consensus/upgrades.h consensus/validation.h \
	core_io.h core_memusage.h deprecation.h hash.h httprpc.h \
	httpserver.h init.h key.h key_io.h keystore.h dbwrapper.h \
	limitedmap.h main.h memusage.h merkleblock.h miner.h mruset.h \
	net.h netbase.h notaries_staked.h noui.h paymentdisclosure.h \
	paymentdisclosuredb.h policy/fees.h pow.h prevector.h \
	primitives/block.h primitives/transaction.h primitives/nonce.h \
	protocol.h pubkey.h random.h reverselock.h rpc/client.h \
	rpc/protocol.h rpc/server.h rpc/register.h scheduler.h \
	script/interpreter.h script/script.h script/script_error.h \
	script/serverchecker.h script/sign.h script/standard.h \
	serialize.h streams.h support/allocators/secure.h \
	support/allocators/zeroafterfree.h support/cleanse.h \
	support/events.h support/pagelocker.h sync.h threadsafety.h \
	timedata.h tinyformat.h torcontrol.h transaction_builder.h \
	txdb.h txmempool.h ui_interface.h uint256.h uint252.h undo.h \
	util.h utilmoneystr.h utilstrencodings.h utiltime.h \
	validationinterface.h version.h \
	wallet/asyncrpcoperation_mergetoaddress.h \
	wallet/asyncrpcoperation_sendmany.h \
	wallet/asyncrpcoperation_shieldcoinbase.h wallet/crypter.h \
	wallet/db.h wallet/rpcwallet.h wallet/wallet.h \
	wallet/wallet_ismine.h wallet/walletdb.h \
	zmq/zmqabstractnotifier.h zmq/zmqconfig.h \
	zmq/zmqnotificationinterface.h zmq/zmqpublishnotifier.h \
	zcash/IncrementalMerkleTree.hpp zcash/NoteEncryption.hpp \
	zcash/Address.hpp zcash/JoinSplit.hpp zcash/Note.hpp \
	zcash/prf.h zcash/Proof.hpp zcash/util.h zcash/Zcash.h \
	zcash/zip32.h rpc/testtransactions.cpp
@ENABLE_TESTS_TRUE@am__objects_3 = rpc/libbitcoin_server_a-testtransactions.$(OBJEXT)
am_libbitcoin_server_a_OBJECTS =  \
	libbitcoin_server_a-sendalert.$(OBJEXT) \
	libbitcoin_server_a-addrman.$(OBJEXT) \
	libbitcoin_server_a-alert.$(OBJEXT) \
	libbitcoin_server_a-asyncrpcoperation.$(OBJEXT) \
	libbitcoin_server_a-asyncrpcqueue.$(OBJEXT) \
	libbitcoin_server_a-bloom.$(OBJEXT) \
	cc/libbitcoin_server_a-eval.$(OBJEXT) \
	cc/libbitcoin_server_a-import.$(OBJEXT) \
	cc/libbitcoin_server_a-importgateway.$(OBJEXT) \
	cc/libbitcoin_server_a-CCassetsCore.$(OBJEXT) \
	cc/libbitcoin_server_a-CCcustom.$(OBJEXT) \
	cc/libbitcoin_server_a-CCtx.$(OBJEXT) \
	cc/libbitcoin_server_a-CCutils.$(OBJEXT) \
	cc/libbitcoin_server_a-CCtokens.$(OBJEXT) \
	cc/libbitcoin_server_a-assets.$(OBJEXT) \
	cc/libbitcoin_server_a-faucet.$(OBJEXT) \
	cc/libbitcoin_server_a-rewards.$(OBJEXT) \
	cc/libbitcoin_server_a-dice.$(OBJEXT) \
	cc/libbitcoin_server_a-lotto.$(OBJEXT) \
	cc/libbitcoin_server_a-fsm.$(OBJEXT) \
	cc/libbitcoin_server_a-heir.$(OBJEXT) \
	cc/libbitcoin_server_a-oracles.$(OBJEXT) \
	cc/libbitcoin_server_a-prices.$(OBJEXT) \
	cc/libbitcoin_server_a-pegs.$(OBJEXT) \
	cc/libbitcoin_server_a-marmara.$(OBJEXT) \
	cc/libbitcoin_server_a-payments.$(OBJEXT) \
	cc/libbitcoin_server_a-gateways.$(OBJEXT) \
	cc/libbitcoin_server_a-channels.$(OBJEXT) \
	cc/libbitcoin_server_a-auction.$(OBJEXT) \
	cc/libbitcoin_server_a-betprotocol.$(OBJEXT) \
	libbitcoin_server_a-chain.$(OBJEXT) \
	libbitcoin_server_a-checkpoints.$(OBJEXT) \
	libbitcoin_server_a-crosschain.$(OBJEXT) \
	libbitcoin_server_a-crosschain_authority.$(OBJEXT) \
	crypto/libbitcoin_server_a-verus_hash.$(OBJEXT) \
	libbitcoin_server_a-deprecation.$(OBJEXT) \
	libbitcoin_server_a-httprpc.$(OBJEXT) \
	libbitcoin_server_a-httpserver.$(OBJEXT) \
	libbitcoin_server_a-init.$(OBJEXT) \
	libbitcoin_server_a-dbwrapper.$(OBJEXT) \
	libbitcoin_server_a-main.$(OBJEXT) \
	libbitcoin_server_a-merkleblock.$(OBJEXT) \
	libbitcoin_server_a-miner.$(OBJEXT) \
	libbitcoin_server_a-net.$(OBJEXT) \
	libbitcoin_server_a-notaries_staked.$(OBJEXT) \
	libbitcoin_server_a-noui.$(OBJEXT) \
	libbitcoin_server_a-notarisationdb.$(OBJEXT) \
	libbitcoin_server_a-paymentdisclosure.$(OBJEXT) \
	libbitcoin_server_a-paymentdisclosuredb.$(OBJEXT) \
	policy/libbitcoin_server_a-fees.$(OBJEXT) \
	libbitcoin_server_a-pow.$(OBJEXT) \
	libbitcoin_server_a-rest.$(OBJEXT) \
	rpc/libbitcoin_server_a-blockchain.$(OBJEXT) \
	rpc/libbitcoin_server_a-crosschain.$(OBJEXT) \
	rpc/libbitcoin_server_a-mining.$(OBJEXT) \
	rpc/libbitcoin_server_a-misc.$(OBJEXT) \
	rpc/libbitcoin_server_a-net.$(OBJEXT) \
	rpc/libbitcoin_server_a-rawtransaction.$(OBJEXT) \
	rpc/libbitcoin_server_a-server.$(OBJEXT) \
	script/libbitcoin_server_a-serverchecker.$(OBJEXT) \
	script/libbitcoin_server_a-sigcache.$(OBJEXT) \
	libbitcoin_server_a-timedata.$(OBJEXT) \
	libbitcoin_server_a-torcontrol.$(OBJEXT) \
	libbitcoin_server_a-txdb.$(OBJEXT) \
	libbitcoin_server_a-txmempool.$(OBJEXT) \
	libbitcoin_server_a-validationinterface.$(OBJEXT) \
	$(am__objects_1) $(am__objects_1) $(am__objects_3)
libbitcoin_server_a_OBJECTS = $(am_libbitcoin_server_a_OBJECTS)
libbitcoin_util_a_AR = $(AR) $(ARFLAGS)
libbitcoin_util_a_LIBADD =
am__libbitcoin_util_a_SOURCES_DIST = support/pagelocker.cpp \
	chainparamsbase.cpp clientversion.cpp compat/glibc_sanity.cpp \
	compat/glibcxx_sanity.cpp compat/strnlen.cpp random.cpp \
	rpc/protocol.cpp support/cleanse.cpp sync.cpp uint256.cpp \
	util.cpp utilmoneystr.cpp utilstrencodings.cpp utiltime.cpp \
	addressindex.h spentindex.h addrman.h alert.h amount.h \
	amqp/amqpabstractnotifier.h amqp/amqpconfig.h \
	amqp/amqpnotificationinterface.h amqp/amqppublishnotifier.h \
	amqp/amqpsender.h arith_uint256.h asyncrpcoperation.h \
	asyncrpcqueue.h base58.h bech32.h bloom.h cc/eval.h chain.h \
	chainparams.h chainparamsbase.h chainparamsseeds.h \
	checkpoints.h checkqueue.h clientversion.h coincontrol.h \
	coins.h compat.h compat/byteswap.h compat/endian.h \
	compat/sanity.h compressor.h consensus/consensus.h \
	consensus/params.h consensus/upgrades.h consensus/validation.h \
	core_io.h core_memusage.h crypto/haraka.h \
	crypto/haraka_portable.h crypto/verus_hash.h deprecation.h \
	hash.h httprpc.h httpserver.h init.h key.h key_io.h keystore.h \
	dbwrapper.h limitedmap.h main.h memusage.h merkleblock.h \
	metrics.h miner.h mruset.h net.h netbase.h notaries_staked.h \
	noui.h paymentdisclosure.h paymentdisclosuredb.h policy/fees.h \
	pow.h prevector.h primitives/block.h primitives/transaction.h \
	primitives/nonce.h protocol.h pubkey.h random.h reverselock.h \
	rpc/client.h rpc/protocol.h rpc/server.h rpc/register.h \
	scheduler.h script/interpreter.h script/script.h \
	script/script_error.h script/serverchecker.h script/sign.h \
	script/standard.h serialize.h streams.h \
	support/allocators/secure.h support/allocators/zeroafterfree.h \
	support/cleanse.h support/events.h support/pagelocker.h sync.h \
	threadsafety.h timedata.h tinyformat.h torcontrol.h \
	transaction_builder.h txdb.h txmempool.h ui_interface.h \
	uint256.h uint252.h undo.h util.h utilmoneystr.h \
	utilstrencodings.h utiltime.h validationinterface.h version.h \
	wallet/asyncrpcoperation_mergetoaddress.h \
	wallet/asyncrpcoperation_sendmany.h \
	wallet/asyncrpcoperation_shieldcoinbase.h wallet/crypter.h \
	wallet/db.h wallet/rpcwallet.h wallet/wallet.h \
	wallet/wallet_ismine.h wallet/walletdb.h \
	zmq/zmqabstractnotifier.h zmq/zmqconfig.h \
	zmq/zmqnotificationinterface.h zmq/zmqpublishnotifier.h \
	zcash/IncrementalMerkleTree.hpp zcash/NoteEncryption.hpp \
	zcash/Address.hpp zcash/JoinSplit.hpp zcash/Note.hpp \
	zcash/prf.h zcash/Proof.hpp zcash/util.h zcash/Zcash.h \
	zcash/zip32.h compat/glibc_compat.cpp
@GLIBC_BACK_COMPAT_TRUE@am__objects_4 = compat/libbitcoin_util_a-glibc_compat.$(OBJEXT)
am_libbitcoin_util_a_OBJECTS =  \
	support/libbitcoin_util_a-pagelocker.$(OBJEXT) \
	libbitcoin_util_a-chainparamsbase.$(OBJEXT) \
	libbitcoin_util_a-clientversion.$(OBJEXT) \
	compat/libbitcoin_util_a-glibc_sanity.$(OBJEXT) \
	compat/libbitcoin_util_a-glibcxx_sanity.$(OBJEXT) \
	compat/libbitcoin_util_a-strnlen.$(OBJEXT) \
	libbitcoin_util_a-random.$(OBJEXT) \
	rpc/libbitcoin_util_a-protocol.$(OBJEXT) \
	support/libbitcoin_util_a-cleanse.$(OBJEXT) \
	libbitcoin_util_a-sync.$(OBJEXT) \
	libbitcoin_util_a-uint256.$(OBJEXT) \
	libbitcoin_util_a-util.$(OBJEXT) \
	libbitcoin_util_a-utilmoneystr.$(OBJEXT) \
	libbitcoin_util_a-utilstrencodings.$(OBJEXT) \
	libbitcoin_util_a-utiltime.$(OBJEXT) $(am__objects_1) \
	$(am__objects_1) $(am__objects_4)
nodist_libbitcoin_util_a_OBJECTS =
libbitcoin_util_a_OBJECTS = $(am_libbitcoin_util_a_OBJECTS) \
	$(nodist_libbitcoin_util_a_OBJECTS)
libbitcoin_wallet_a_AR = $(AR) $(ARFLAGS)
libbitcoin_wallet_a_LIBADD =
am_libbitcoin_wallet_a_OBJECTS =  \
	libbitcoin_wallet_a-utiltest.$(OBJEXT) \
	libbitcoin_wallet_a-zcbenchmarks.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-crypter.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-db.$(OBJEXT) \
	libbitcoin_wallet_a-paymentdisclosure.$(OBJEXT) \
	libbitcoin_wallet_a-paymentdisclosuredb.$(OBJEXT) \
	libbitcoin_wallet_a-transaction_builder.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-rpcdisclosure.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-rpcdump.$(OBJEXT) \
	cc/libbitcoin_wallet_a-CCtokens.$(OBJEXT) \
	cc/libbitcoin_wallet_a-CCassetsCore.$(OBJEXT) \
	cc/libbitcoin_wallet_a-CCassetstx.$(OBJEXT) \
	cc/libbitcoin_wallet_a-CCtx.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-rpcwallet.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-wallet.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-wallet_ismine.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-walletdb.$(OBJEXT) \
	zcash/libbitcoin_wallet_a-zip32.$(OBJEXT) $(am__objects_1) \
	$(am__objects_1)
libbitcoin_wallet_a_OBJECTS = $(am_libbitcoin_wallet_a_OBJECTS)
libbitcoin_zmq_a_AR = $(AR) $(ARFLAGS)
libbitcoin_zmq_a_LIBADD =
am__libbitcoin_zmq_a_SOURCES_DIST = zmq/zmqabstractnotifier.cpp \
	zmq/zmqnotificationinterface.cpp zmq/zmqpublishnotifier.cpp
@ENABLE_ZMQ_TRUE@am_libbitcoin_zmq_a_OBJECTS = zmq/libbitcoin_zmq_a-zmqabstractnotifier.$(OBJEXT) \
@ENABLE_ZMQ_TRUE@	zmq/libbitcoin_zmq_a-zmqnotificationinterface.$(OBJEXT) \
@ENABLE_ZMQ_TRUE@	zmq/libbitcoin_zmq_a-zmqpublishnotifier.$(OBJEXT)
libbitcoin_zmq_a_OBJECTS = $(am_libbitcoin_zmq_a_OBJECTS)
libzcash_a_AR = $(AR) $(ARFLAGS)
libzcash_a_LIBADD =
am_libzcash_a_OBJECTS =  \
	zcash/libzcash_a-IncrementalMerkleTree.$(OBJEXT) \
	zcash/libzcash_a-NoteEncryption.$(OBJEXT) \
	zcash/libzcash_a-Address.$(OBJEXT) \
	zcash/libzcash_a-JoinSplit.$(OBJEXT) \
	zcash/libzcash_a-Proof.$(OBJEXT) \
	zcash/libzcash_a-Note.$(OBJEXT) zcash/libzcash_a-prf.$(OBJEXT) \
	zcash/libzcash_a-util.$(OBJEXT) \
	zcash/libzcash_a-zip32.$(OBJEXT)
libzcash_a_OBJECTS = $(am_libzcash_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
@BUILD_BITCOIN_LIBS_TRUE@libzcashconsensus_la_DEPENDENCIES =  \
@BUILD_BITCOIN_LIBS_TRUE@	$(LIBSECP256K1)
am__libzcashconsensus_la_SOURCES_DIST = crypto/equihash.cpp \
	crypto/hmac_sha512.cpp crypto/ripemd160.cpp crypto/sha1.cpp \
	crypto/sha256.cpp crypto/sha512.cpp hash.cpp \
	primitives/transaction.cpp primitives/nonce.cpp pubkey.cpp \
	script/zcashconsensus.cpp script/interpreter.cpp \
	script/script.cpp uint256.cpp utilstrencodings.cpp \
	compat/glibc_compat.cpp
@BUILD_BITCOIN_LIBS_TRUE@@GLIBC_BACK_COMPAT_TRUE@am__objects_5 = compat/libzcashconsensus_la-glibc_compat.lo
@BUILD_BITCOIN_LIBS_TRUE@am_libzcashconsensus_la_OBJECTS = crypto/libzcashconsensus_la-equihash.lo \
@BUILD_BITCOIN_LIBS_TRUE@	crypto/libzcashconsensus_la-hmac_sha512.lo \
@BUILD_BITCOIN_LIBS_TRUE@	crypto/libzcashconsensus_la-ripemd160.lo \
@BUILD_BITCOIN_LIBS_TRUE@	crypto/libzcashconsensus_la-sha1.lo \
@BUILD_BITCOIN_LIBS_TRUE@	crypto/libzcashconsensus_la-sha256.lo \
@BUILD_BITCOIN_LIBS_TRUE@	crypto/libzcashconsensus_la-sha512.lo \
@BUILD_BITCOIN_LIBS_TRUE@	libzcashconsensus_la-hash.lo \
@BUILD_BITCOIN_LIBS_TRUE@	primitives/libzcashconsensus_la-transaction.lo \
@BUILD_BITCOIN_LIBS_TRUE@	primitives/libzcashconsensus_la-nonce.lo \
@BUILD_BITCOIN_LIBS_TRUE@	libzcashconsensus_la-pubkey.lo \
@BUILD_BITCOIN_LIBS_TRUE@	script/libzcashconsensus_la-zcashconsensus.lo \
@BUILD_BITCOIN_LIBS_TRUE@	script/libzcashconsensus_la-interpreter.lo \
@BUILD_BITCOIN_LIBS_TRUE@	script/libzcashconsensus_la-script.lo \
@BUILD_BITCOIN_LIBS_TRUE@	libzcashconsensus_la-uint256.lo \
@BUILD_BITCOIN_LIBS_TRUE@	libzcashconsensus_la-utilstrencodings.lo \
@BUILD_BITCOIN_LIBS_TRUE@	$(am__objects_5)
libzcashconsensus_la_OBJECTS = $(am_libzcashconsensus_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libzcashconsensus_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) \
	$(libzcashconsensus_la_LDFLAGS) $(LDFLAGS) -o $@
@BUILD_BITCOIN_LIBS_TRUE@am_libzcashconsensus_la_rpath = -rpath \
@BUILD_BITCOIN_LIBS_TRUE@	$(libdir)
@BUILD_BITCOIN_UTILS_TRUE@am__EXEEXT_1 = komodo-cli$(EXEEXT) \
@BUILD_BITCOIN_UTILS_TRUE@	komodo-tx$(EXEEXT)
@ENABLE_WALLET_TRUE@am__EXEEXT_2 = wallet-utility$(EXEEXT)
@ENABLE_TESTS_TRUE@am__EXEEXT_3 = komodo-test$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__komodo_cli_SOURCES_DIST = bitcoin-cli.cpp bitcoin-cli-res.rc
@TARGET_WINDOWS_TRUE@am__objects_6 = bitcoin-cli-res.$(OBJEXT)
am_komodo_cli_OBJECTS = komodo_cli-bitcoin-cli.$(OBJEXT) \
	$(am__objects_6)
komodo_cli_OBJECTS = $(am_komodo_cli_OBJECTS)
am__DEPENDENCIES_1 =
komodo_cli_DEPENDENCIES = $(LIBBITCOIN_CLI) $(LIBUNIVALUE) \
	$(LIBBITCOIN_UTIL) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) $(LIBZCASH) \
	$(LIBBITCOIN_CRYPTO) $(LIBVERUS_CRYPTO) \
	$(LIBVERUS_PORTABLE_CRYPTO) $(am__DEPENDENCIES_1)
komodo_cli_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(komodo_cli_CXXFLAGS) \
	$(CXXFLAGS) $(komodo_cli_LDFLAGS) $(LDFLAGS) -o $@
am__komodo_test_SOURCES_DIST = test-komodo/main.cpp \
	test-komodo/testutils.cpp \
	test-komodo/test_cryptoconditions.cpp \
	test-komodo/test_coinimport.cpp test-komodo/test_eval_bet.cpp \
	test-komodo/test_eval_notarisation.cpp \
	test-komodo/test_parse_notarisation.cpp
@ENABLE_TESTS_TRUE@am_komodo_test_OBJECTS =  \
@ENABLE_TESTS_TRUE@	test-komodo/komodo_test-main.$(OBJEXT) \
@ENABLE_TESTS_TRUE@	test-komodo/komodo_test-testutils.$(OBJEXT) \
@ENABLE_TESTS_TRUE@	test-komodo/komodo_test-test_cryptoconditions.$(OBJEXT) \
@ENABLE_TESTS_TRUE@	test-komodo/komodo_test-test_coinimport.$(OBJEXT) \
@ENABLE_TESTS_TRUE@	test-komodo/komodo_test-test_eval_bet.$(OBJEXT) \
@ENABLE_TESTS_TRUE@	test-komodo/komodo_test-test_eval_notarisation.$(OBJEXT) \
@ENABLE_TESTS_TRUE@	test-komodo/komodo_test-test_parse_notarisation.$(OBJEXT)
komodo_test_OBJECTS = $(am_komodo_test_OBJECTS)
@TARGET_DARWIN_FALSE@@TARGET_LINUX_FALSE@@TARGET_WINDOWS_TRUE@am__DEPENDENCIES_2 = libbitcoin_server.a
@TARGET_DARWIN_FALSE@@TARGET_LINUX_TRUE@am__DEPENDENCIES_2 =  \
@TARGET_DARWIN_FALSE@@TARGET_LINUX_TRUE@	libbitcoin_server.a
@TARGET_DARWIN_TRUE@am__DEPENDENCIES_2 = libbitcoin_server.a
am__DEPENDENCIES_3 = $(am__append_2)
am__DEPENDENCIES_4 = $(am__append_3)
@ENABLE_PROTON_TRUE@am__DEPENDENCIES_5 = $(LIBBITCOIN_PROTON) \
@ENABLE_PROTON_TRUE@	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_6 = $(am__DEPENDENCIES_2) $(LIBBITCOIN_COMMON) \
	$(LIBUNIVALUE) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_ZMQ) \
	$(LIBBITCOIN_PROTON) $(LIBBITCOIN_CRYPTO) $(LIBVERUS_CRYPTO) \
	$(LIBVERUS_PORTABLE_CRYPTO) $(LIBZCASH) $(LIBSNARK) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) $(LIBSECP256K1) \
	$(LIBCRYPTOCONDITIONS) $(am__append_17) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(LIBBITCOIN_CRYPTO) $(LIBVERUS_CRYPTO) \
	$(LIBVERUS_PORTABLE_CRYPTO) $(am__DEPENDENCIES_1) \
	$(am__append_18) $(am__append_19) $(am__append_20) \
	$(am__DEPENDENCIES_5)
@ENABLE_TESTS_TRUE@komodo_test_DEPENDENCIES = $(am__DEPENDENCIES_6)
komodo_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(komodo_test_LDFLAGS) $(LDFLAGS) -o $@
am__komodo_tx_SOURCES_DIST = komodo-tx.cpp bitcoin-tx-res.rc
@TARGET_WINDOWS_TRUE@am__objects_7 = bitcoin-tx-res.$(OBJEXT)
am_komodo_tx_OBJECTS = komodo_tx-komodo-tx.$(OBJEXT) $(am__objects_7)
komodo_tx_OBJECTS = $(am_komodo_tx_OBJECTS)
komodo_tx_DEPENDENCIES = $(LIBUNIVALUE) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBSECP256K1) $(LIBZCASH) $(LIBSNARK) \
	$(LIBBITCOIN_CRYPTO) $(LIBVERUS_CRYPTO) \
	$(LIBVERUS_PORTABLE_CRYPTO) $(am__DEPENDENCIES_1) \
	$(LIBCRYPTOCONDITIONS) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
komodo_tx_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(komodo_tx_CXXFLAGS) \
	$(CXXFLAGS) $(komodo_tx_LDFLAGS) $(LDFLAGS) -o $@
am__komodod_SOURCES_DIST = bitcoind.cpp bitcoind-res.rc
@TARGET_WINDOWS_TRUE@am__objects_8 = bitcoind-res.$(OBJEXT)
am_komodod_OBJECTS = komodod-bitcoind.$(OBJEXT) $(am__objects_8)
komodod_OBJECTS = $(am_komodod_OBJECTS)
komodod_DEPENDENCIES = $(am__DEPENDENCIES_2) $(LIBBITCOIN_COMMON) \
	$(LIBUNIVALUE) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_ZMQ) \
	$(LIBBITCOIN_PROTON) $(LIBBITCOIN_CRYPTO) $(LIBVERUS_CRYPTO) \
	$(LIBVERUS_PORTABLE_CRYPTO) $(LIBZCASH) $(LIBSNARK) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) $(LIBSECP256K1) \
	$(LIBCRYPTOCONDITIONS) $(am__append_17) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(LIBBITCOIN_CRYPTO) $(LIBVERUS_CRYPTO) \
	$(LIBVERUS_PORTABLE_CRYPTO) $(am__DEPENDENCIES_1) \
	$(am__append_18) $(am__append_19) $(am__append_20) \
	$(am__DEPENDENCIES_5)
komodod_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(komodod_CXXFLAGS) \
	$(CXXFLAGS) $(komodod_LDFLAGS) $(LDFLAGS) -o $@
am__wallet_utility_SOURCES_DIST = wallet-utility.cpp
@ENABLE_WALLET_TRUE@am_wallet_utility_OBJECTS =  \
@ENABLE_WALLET_TRUE@	wallet_utility-wallet-utility.$(OBJEXT)
wallet_utility_OBJECTS = $(am_wallet_utility_OBJECTS)
@ENABLE_WALLET_TRUE@wallet_utility_DEPENDENCIES = libbitcoin_wallet.a \
@ENABLE_WALLET_TRUE@	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_CRYPTO) \
@ENABLE_WALLET_TRUE@	$(LIBVERUS_CRYPTO) \
@ENABLE_WALLET_TRUE@	$(LIBVERUS_PORTABLE_CRYPTO) \
@ENABLE_WALLET_TRUE@	$(LIBSECP256K1) $(LIBBITCOIN_UTIL) \
@ENABLE_WALLET_TRUE@	$(am__DEPENDENCIES_1) \
@ENABLE_WALLET_TRUE@	$(am__DEPENDENCIES_1) \
@ENABLE_WALLET_TRUE@	$(am__DEPENDENCIES_1) $(LIBZCASH) \
@ENABLE_WALLET_TRUE@	$(LIBSNARK) $(am__DEPENDENCIES_1) \
@ENABLE_WALLET_TRUE@	$(LIBCRYPTOCONDITIONS)
wallet_utility_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(wallet_utility_CXXFLAGS) $(CXXFLAGS) \
	$(wallet_utility_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src/config
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = -lcurl.c $(crypto_libbitcoin_crypto_a_SOURCES) \
	$(crypto_libverus_crypto_a_SOURCES) \
	$(crypto_libverus_portable_crypto_a_SOURCES) \
	$(libbitcoin_cli_a_SOURCES) $(libbitcoin_common_a_SOURCES) \
	$(libbitcoin_proton_a_SOURCES) $(libbitcoin_server_a_SOURCES) \
	$(libbitcoin_util_a_SOURCES) \
	$(nodist_libbitcoin_util_a_SOURCES) \
	$(libbitcoin_wallet_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) \
	$(libzcash_a_SOURCES) $(libzcashconsensus_la_SOURCES) \
	$(komodo_cli_SOURCES) $(komodo_test_SOURCES) \
	$(komodo_tx_SOURCES) $(komodod_SOURCES) \
	$(wallet_utility_SOURCES)
DIST_SOURCES = -lcurl.c $(am__crypto_libbitcoin_crypto_a_SOURCES_DIST) \
	$(crypto_libverus_crypto_a_SOURCES) \
	$(crypto_libverus_portable_crypto_a_SOURCES) \
	$(libbitcoin_cli_a_SOURCES) $(libbitcoin_common_a_SOURCES) \
	$(am__libbitcoin_proton_a_SOURCES_DIST) \
	$(am__libbitcoin_server_a_SOURCES_DIST) \
	$(am__libbitcoin_util_a_SOURCES_DIST) \
	$(libbitcoin_wallet_a_SOURCES) \
	$(am__libbitcoin_zmq_a_SOURCES_DIST) $(libzcash_a_SOURCES) \
	$(am__libzcashconsensus_la_SOURCES_DIST) \
	$(am__komodo_cli_SOURCES_DIST) $(am__komodo_test_SOURCES_DIST) \
	$(am__komodo_tx_SOURCES_DIST) $(am__komodod_SOURCES_DIST) \
	$(am__wallet_utility_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__include_HEADERS_DIST = script/zcashconsensus.h
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.ktest.include \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARFLAGS = @ARFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BDB_CPPFLAGS = @BDB_CPPFLAGS@
BDB_LIBS = @BDB_LIBS@
BITCOIN_CLI_NAME = @BITCOIN_CLI_NAME@
BITCOIN_DAEMON_NAME = @BITCOIN_DAEMON_NAME@
BITCOIN_TX_NAME = @BITCOIN_TX_NAME@
BOOST_CHRONO_LIB = @BOOST_CHRONO_LIB@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_LIBS = @BOOST_LIBS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_UNIT_TEST_FRAMEWORK_LIB = @BOOST_UNIT_TEST_FRAMEWORK_LIB@
CC = @CC@
CCACHE = @CCACHE@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLIENT_VERSION_BUILD = @CLIENT_VERSION_BUILD@
CLIENT_VERSION_IS_RELEASE = @CLIENT_VERSION_IS_RELEASE@
CLIENT_VERSION_MAJOR = @CLIENT_VERSION_MAJOR@
CLIENT_VERSION_MINOR = @CLIENT_VERSION_MINOR@
CLIENT_VERSION_REVISION = @CLIENT_VERSION_REVISION@
COPYRIGHT_YEAR = @COPYRIGHT_YEAR@
CPP = @CPP@
CPPFILT = @CPPFILT@
CPPFLAGS = @CPPFLAGS@
CRYPTO_CFLAGS = @CRYPTO_CFLAGS@
CRYPTO_LIBS = @CRYPTO_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ERROR_CXXFLAGS = @ERROR_CXXFLAGS@
EVENT_CFLAGS = @EVENT_CFLAGS@
EVENT_LIBS = @EVENT_LIBS@
EVENT_PTHREADS_CFLAGS = @EVENT_PTHREADS_CFLAGS@
EVENT_PTHREADS_LIBS = @EVENT_PTHREADS_LIBS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GCOV = @GCOV@
GENHTML = @GENHTML@
GENISOIMAGE = @GENISOIMAGE@
GIT = @GIT@
GMPXX_LIBS = @GMPXX_LIBS@
GMP_LIBS = @GMP_LIBS@
GREP = @GREP@
HARDENED_CPPFLAGS = @HARDENED_CPPFLAGS@
HARDENED_CXXFLAGS = @HARDENED_CXXFLAGS@
HARDENED_LDFLAGS = @HARDENED_LDFLAGS@
HAVE_CXX11 = @HAVE_CXX11@
HEXDUMP = @HEXDUMP@
INSTALL = @INSTALL@
INSTALLNAMETOOL = @INSTALLNAMETOOL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LCOV = @LCOV@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEVELDB_CPPFLAGS = @LEVELDB_CPPFLAGS@ $(am__append_1)
LEVELDB_TARGET_FLAGS = @LEVELDB_TARGET_FLAGS@
LIBLEVELDB = @LIBLEVELDB@ $(am__append_2)
LIBMEMENV = @LIBMEMENV@ $(am__append_3)
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBSNARK_DEPINST = @LIBSNARK_DEPINST@
LIBTOOL = @LIBTOOL@
LIBTOOL_APP_LDFLAGS = @LIBTOOL_APP_LDFLAGS@
LIBZCASH_LIBS = @LIBZCASH_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MAKENSIS = @MAKENSIS@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJCXX = @OBJCXX@
OBJCXXDEPMODE = @OBJCXXDEPMODE@
OBJCXXFLAGS = @OBJCXXFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PIC_FLAGS = @PIC_FLAGS@
PIE_FLAGS = @PIE_FLAGS@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PORT = @PORT@
PROTON_LIBS = @PROTON_LIBS@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
READELF = @READELF@
RELDFLAGS = @RELDFLAGS@
SAN_CXXFLAGS = @SAN_CXXFLAGS@
SAN_LDFLAGS = @SAN_LDFLAGS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSL_CFLAGS = @SSL_CFLAGS@
SSL_LIBS = @SSL_LIBS@
STRIP = @STRIP@
TESTDEFS = @TESTDEFS@
VERSION = @VERSION@
WINDOWS_BITS = @WINDOWS_BITS@
WINDRES = @WINDRES@
XGETTEXT = @XGETTEXT@
ZMQ_CFLAGS = @ZMQ_CFLAGS@
ZMQ_LIBS = @ZMQ_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_OBJCXX = @ac_ct_OBJCXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
DIST_SUBDIRS = secp256k1 univalue cryptoconditions
AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(SAN_LDFLAGS) $(HARDENED_LDFLAGS)
AM_CXXFLAGS = $(SAN_CXXFLAGS) $(HARDENED_CXXFLAGS) $(ERROR_CXXFLAGS)
AM_CPPFLAGS = $(HARDENED_CPPFLAGS)

# Make is not made aware of per-object dependencies to avoid limiting building parallelization
# But to build the less dependent modules first, we manually select their order here:
EXTRA_LIBRARIES = $(LIBBITCOIN_CRYPTO) $(LIBVERUS_CRYPTO) \
	$(LIBVERUS_PORTABLE_CRYPTO) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) \
	libzcash.a $(am__append_7) $(am__append_8) $(am__append_9)
BITCOIN_CONFIG_INCLUDES = -I$(builddir)/config
BITCOIN_INCLUDES = -I$(builddir) -I$(builddir)/obj $(BDB_CPPFLAGS) \
	$(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) \
	$(SSL_CFLAGS) -I$(srcdir)/secp256k1/include \
	-I$(srcdir)/cryptoconditions/include \
	-I$(srcdir)/cryptoconditions/src \
	-I$(srcdir)/cryptoconditions/src/asn -I$(srcdir)/snark \
	-I$(srcdir)/snark/libsnark -I$(srcdir)/univalue/include \
	$(am__append_6)
@TARGET_DARWIN_TRUE@LIBBITCOIN_SERVER = libbitcoin_server.a -lcurl
@TARGET_LINUX_TRUE@LIBBITCOIN_SERVER = libbitcoin_server.a -lcurl
@TARGET_WINDOWS_TRUE@LIBBITCOIN_SERVER = libbitcoin_server.a -lcurl
@ENABLE_WALLET_TRUE@LIBBITCOIN_WALLET = libbitcoin_wallet.a
LIBBITCOIN_WALLET = libbitcoin_wallet.a
LIBBITCOIN_COMMON = libbitcoin_common.a
LIBBITCOIN_CLI = libbitcoin_cli.a
LIBBITCOIN_UTIL = libbitcoin_util.a
LIBBITCOIN_CRYPTO = crypto/libbitcoin_crypto.a
LIBVERUS_CRYPTO = crypto/libverus_crypto.a
LIBVERUS_PORTABLE_CRYPTO = crypto/libverus_portable_crypto.a
LIBSECP256K1 = secp256k1/libsecp256k1.la
LIBCRYPTOCONDITIONS = cryptoconditions/libcryptoconditions_core.la
LIBSNARK = snark/libsnark.a
LIBUNIVALUE = univalue/libunivalue.la
LIBZCASH = libzcash.a
@ENABLE_ZMQ_TRUE@LIBBITCOIN_ZMQ = libbitcoin_zmq.a
@ENABLE_PROTON_TRUE@LIBBITCOIN_PROTON = libbitcoin_proton.a
@BUILD_BITCOIN_LIBS_TRUE@LIBZCASH_CONSENSUS = libzcashconsensus.la
LIBSNARK_CXXFLAGS = $(AM_CXXFLAGS) $(PIC_FLAGS) -DBINARY_OUTPUT -DNO_PT_COMPRESSION=1 -fstack-protector-all
LIBSNARK_CONFIG_FLAGS = CURVE=ALT_BN128 NO_PROCPS=1 NO_DOCS=1 STATIC=1 \
	NO_SUPERCOP=1 FEATUREFLAGS=-DMONTGOMERY_OUTPUT \
	NO_COPY_DEPINST=1 NO_COMPILE_LIBGTEST=1 $(am__append_4) \
	$(am__append_5)
lib_LTLIBRARIES = $(LIBZCASH_CONSENSUS)
LIBZCASH_H = \
  zcash/IncrementalMerkleTree.hpp \
  zcash/NoteEncryption.hpp \
  zcash/Address.hpp \
  zcash/JoinSplit.hpp \
  zcash/Note.hpp \
  zcash/prf.h \
  zcash/Proof.hpp \
  zcash/util.h \
  zcash/Zcash.h \
  zcash/zip32.h

# bitcoin core #
BITCOIN_CORE_H = \
  addressindex.h \
  spentindex.h \
  addrman.h \
  alert.h \
  amount.h \
  amqp/amqpabstractnotifier.h \
  amqp/amqpconfig.h \
  amqp/amqpnotificationinterface.h \
  amqp/amqppublishnotifier.h \
  amqp/amqpsender.h \
  arith_uint256.h \
  asyncrpcoperation.h \
  asyncrpcqueue.h \
  base58.h \
  bech32.h \
  bloom.h \
  cc/eval.h \
  chain.h \
  chainparams.h \
  chainparamsbase.h \
  chainparamsseeds.h \
  checkpoints.h \
  checkqueue.h \
  clientversion.h \
  coincontrol.h \
  coins.h \
  compat.h \
  compat/byteswap.h \
  compat/endian.h \
  compat/sanity.h \
  compressor.h \
  consensus/consensus.h \
  consensus/params.h \
  consensus/upgrades.h \
  consensus/validation.h \
  core_io.h \
  core_memusage.h \
  crypto/haraka.h \
  crypto/haraka_portable.h \
  crypto/verus_hash.h \
  deprecation.h \
  hash.h \
  httprpc.h \
  httpserver.h \
  init.h \
  key.h \
  key_io.h \
  keystore.h \
  dbwrapper.h \
  limitedmap.h \
  main.h \
  memusage.h \
  merkleblock.h \
  metrics.h \
  miner.h \
  mruset.h \
  net.h \
  netbase.h \
  notaries_staked.h \
  noui.h \
  paymentdisclosure.h \
  paymentdisclosuredb.h \
  policy/fees.h \
  pow.h \
  prevector.h \
  primitives/block.h \
  primitives/transaction.h \
  primitives/nonce.h \
  protocol.h \
  pubkey.h \
  random.h \
  reverselock.h \
  rpc/client.h \
  rpc/protocol.h \
  rpc/server.h \
  rpc/register.h \
  scheduler.h \
  script/interpreter.h \
  script/script.h \
  script/script_error.h \
  script/serverchecker.h \
  script/sign.h \
  script/standard.h \
  serialize.h \
  streams.h \
  support/allocators/secure.h \
  support/allocators/zeroafterfree.h \
  support/cleanse.h \
  support/events.h \
  support/pagelocker.h \
  sync.h \
  threadsafety.h \
  timedata.h \
  tinyformat.h \
  torcontrol.h \
  transaction_builder.h \
  txdb.h \
  txmempool.h \
  ui_interface.h \
  uint256.h \
  uint252.h \
  undo.h \
  util.h \
  utilmoneystr.h \
  utilstrencodings.h \
  utiltime.h \
  validationinterface.h \
  version.h \
  wallet/asyncrpcoperation_mergetoaddress.h \
  wallet/asyncrpcoperation_sendmany.h \
  wallet/asyncrpcoperation_shieldcoinbase.h \
  wallet/crypter.h \
  wallet/db.h \
  wallet/rpcwallet.h \
  wallet/wallet.h \
  wallet/wallet_ismine.h \
  wallet/walletdb.h \
  zmq/zmqabstractnotifier.h \
  zmq/zmqconfig.h\
  zmq/zmqnotificationinterface.h \
  zmq/zmqpublishnotifier.h


# server: zcashd
libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)
libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_server_a_SOURCES = sendalert.cpp addrman.cpp alert.cpp \
	alertkeys.h asyncrpcoperation.cpp asyncrpcqueue.cpp bloom.cpp \
	cc/eval.cpp cc/import.cpp cc/importgateway.cpp \
	cc/CCassetsCore.cpp cc/CCcustom.cpp cc/CCtx.cpp cc/CCutils.cpp \
	cc/CCtokens.cpp cc/assets.cpp cc/faucet.cpp cc/rewards.cpp \
	cc/dice.cpp cc/lotto.cpp cc/fsm.cpp cc/heir.cpp cc/oracles.cpp \
	cc/prices.cpp cc/pegs.cpp cc/marmara.cpp cc/payments.cpp \
	cc/gateways.cpp cc/channels.cpp cc/auction.cpp \
	cc/betprotocol.cpp chain.cpp checkpoints.cpp crosschain.cpp \
	crosschain_authority.cpp crypto/haraka.h \
	crypto/haraka_portable.h crypto/verus_hash.h \
	crypto/verus_hash.cpp deprecation.cpp httprpc.cpp \
	httpserver.cpp init.cpp dbwrapper.cpp main.cpp merkleblock.cpp \
	metrics.h miner.cpp net.cpp notaries_staked.cpp noui.cpp \
	notarisationdb.cpp paymentdisclosure.cpp \
	paymentdisclosuredb.cpp policy/fees.cpp pow.cpp rest.cpp \
	rpc/blockchain.cpp rpc/crosschain.cpp rpc/mining.cpp \
	rpc/misc.cpp rpc/net.cpp rpc/rawtransaction.cpp rpc/server.cpp \
	script/serverchecker.cpp script/sigcache.cpp timedata.cpp \
	torcontrol.cpp txdb.cpp txmempool.cpp validationinterface.cpp \
	$(BITCOIN_CORE_H) $(LIBZCASH_H) $(am__append_15)
@ENABLE_ZMQ_TRUE@libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(ZMQ_CFLAGS)
@ENABLE_ZMQ_TRUE@libbitcoin_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
@ENABLE_ZMQ_TRUE@libbitcoin_zmq_a_SOURCES = \
@ENABLE_ZMQ_TRUE@	zmq/zmqabstractnotifier.cpp \
@ENABLE_ZMQ_TRUE@	zmq/zmqnotificationinterface.cpp \
@ENABLE_ZMQ_TRUE@	zmq/zmqpublishnotifier.cpp

@ENABLE_PROTON_TRUE@libbitcoin_proton_a_CPPFLAGS = $(BITCOIN_INCLUDES)
@ENABLE_PROTON_TRUE@libbitcoin_proton_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
@ENABLE_PROTON_TRUE@libbitcoin_proton_a_SOURCES = \
@ENABLE_PROTON_TRUE@  amqp/amqpabstractnotifier.cpp \
@ENABLE_PROTON_TRUE@  amqp/amqpnotificationinterface.cpp \
@ENABLE_PROTON_TRUE@  amqp/amqppublishnotifier.cpp


# wallet: zcashd, but only linked when wallet enabled
libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_wallet_a_SOURCES = \
  utiltest.cpp \
  utiltest.h \
  zcbenchmarks.cpp \
  zcbenchmarks.h \
  wallet/asyncrpcoperation_mergetoaddress.cpp \
  wallet/asyncrpcoperation_sendmany.cpp \
  wallet/asyncrpcoperation_shieldcoinbase.cpp \
  wallet/crypter.cpp \
  wallet/db.cpp \
  paymentdisclosure.cpp \
  paymentdisclosuredb.cpp \
  transaction_builder.cpp \
  wallet/rpcdisclosure.cpp \
  wallet/rpcdump.cpp \
  cc/CCtokens.cpp \
  cc/CCassetsCore.cpp \
  cc/CCassetstx.cpp \
  cc/CCtx.cpp \
  wallet/rpcwallet.cpp \
  wallet/wallet.cpp \
  wallet/wallet_ismine.cpp \
  wallet/walletdb.cpp \
  zcash/zip32.cpp \
  $(BITCOIN_CORE_H) \
  $(LIBZCASH_H)


# crypto primitives library
crypto_libbitcoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS) \
	$(BITCOIN_CONFIG_INCLUDES) $(am__append_12)
crypto_libbitcoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
crypto_libbitcoin_crypto_a_SOURCES = crypto/common.h \
	crypto/equihash.cpp crypto/equihash.h crypto/equihash.tcc \
	crypto/hmac_sha256.cpp crypto/hmac_sha256.h \
	crypto/hmac_sha512.cpp crypto/hmac_sha512.h \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h crypto/haraka.h \
	crypto/haraka_portable.h crypto/verus_hash.h \
	crypto/verus_hash.cpp $(am__append_13)
@ENABLE_MINING_TRUE@EQUIHASH_TROMP_SOURCES = \
@ENABLE_MINING_TRUE@	pow/tromp/equi_miner.h \
@ENABLE_MINING_TRUE@	pow/tromp/equi.h \
@ENABLE_MINING_TRUE@	pow/tromp/osx_barrier.h


# Verus hash specific library - optimized
crypto_libverus_crypto_a_CPPFLAGS = -O3 -Wint-conversion -march=x86-64 -msse4 -msse4.1 -msse4.2 -mssse3 -mavx -maes -g -funroll-loops -fomit-frame-pointer -fPIC $(AM_CPPFLAGS)
crypto_libverus_crypto_a_CXXFLAGS = -O3 -Wint-conversion -march=x86-64 -msse4 -msse4.1 -msse4.2 -mssse3 -mavx -maes -g -funroll-loops -fomit-frame-pointer -fPIC $(AM_CXXFLAGS)
crypto_libverus_crypto_a_SOURCES = \
  crypto/haraka.h \
  crypto/haraka.c


# Verus hash specific library - portable
crypto_libverus_portable_crypto_a_CPPFLAGS = -O3 -Wint-conversion -march=x86-64 -g -funroll-loops -fomit-frame-pointer -fPIC $(AM_CPPFLAGS)
crypto_libverus_portable_crypto_a_CXXFLAGS = -O3 -Wint-conversion -march=x86-64 -g -funroll-loops -fomit-frame-pointer -fPIC $(AM_CXXFLAGS)
crypto_libverus_portable_crypto_a_SOURCES = \
  crypto/haraka_portable.h \
  crypto/haraka_portable.c


# common: shared between zcashd and non-server tools
libbitcoin_common_a_CPPFLAGS = -fPIC $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_common_a_CXXFLAGS = -fPIC $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_common_a_SOURCES = \
  amount.cpp \
  arith_uint256.cpp \
  base58.cpp \
  bech32.cpp \
  chainparams.cpp \
  coins.cpp \
  compressor.cpp \
  consensus/upgrades.cpp \
  core_read.cpp \
  core_write.cpp \
  crypto/haraka.h \
  crypto/haraka_portable.h \
  crypto/verus_hash.h \
  crypto/verus_hash.cpp \
  hash.cpp \
  importcoin.cpp \
  key.cpp \
  key_io.cpp \
  keystore.cpp \
  netbase.cpp \
  metrics.cpp \
  primitives/block.cpp \
  primitives/transaction.cpp \
  primitives/nonce.cpp \
  protocol.cpp \
  pubkey.cpp \
  scheduler.cpp \
  script/cc.cpp \
  script/interpreter.cpp \
  script/script.cpp \
  script/script_ext.cpp \
  script/script_error.cpp \
  script/sign.cpp \
  script/standard.cpp \
  transaction_builder.cpp \
  cc/CCtokenutils.cpp \
  cc/CCutilbits.cpp \
  $(BITCOIN_CORE_H) \
  $(LIBZCASH_H)


# util: shared between all executables.
# This library *must* be included to make sure that the glibc
# backward-compatibility objects and their sanity checks are linked.
libbitcoin_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_util_a_SOURCES = support/pagelocker.cpp chainparamsbase.cpp \
	clientversion.cpp compat/glibc_sanity.cpp \
	compat/glibcxx_sanity.cpp compat/strnlen.cpp random.cpp \
	rpc/protocol.cpp support/cleanse.cpp sync.cpp uint256.cpp \
	util.cpp utilmoneystr.cpp utilstrencodings.cpp utiltime.cpp \
	$(BITCOIN_CORE_H) $(LIBZCASH_H) $(am__append_14)

# cli: zcash-cli
libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_cli_a_SOURCES = \
  rpc/client.cpp \
  $(BITCOIN_CORE_H) \
  $(LIBZCASH_H)

nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h
#

# bitcoind binary #
komodod_SOURCES = bitcoind.cpp $(am__append_16)
komodod_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
komodod_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
komodod_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) \
	$(am__append_22)
komodod_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON) \
	$(LIBUNIVALUE) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_ZMQ) \
	$(LIBBITCOIN_PROTON) $(LIBBITCOIN_CRYPTO) $(LIBVERUS_CRYPTO) \
	$(LIBVERUS_PORTABLE_CRYPTO) $(LIBZCASH) $(LIBSNARK) \
	$(LIBLEVELDB) $(LIBMEMENV) $(LIBSECP256K1) \
	$(LIBCRYPTOCONDITIONS) $(am__append_17) $(BOOST_LIBS) \
	$(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) \
	$(EVENT_LIBS) $(ZMQ_LIBS) $(PROTON_LIBS) $(LIBBITCOIN_CRYPTO) \
	$(LIBVERUS_CRYPTO) $(LIBVERUS_PORTABLE_CRYPTO) \
	$(LIBZCASH_LIBS) $(am__append_18) $(am__append_19) \
	$(am__append_20) $(am__append_21)

# bitcoin-cli binary #
komodo_cli_SOURCES = bitcoin-cli.cpp $(am__append_24)
komodo_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)
komodo_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
komodo_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) \
	$(am__append_23)

# wallet-utility binary #
@ENABLE_WALLET_TRUE@wallet_utility_SOURCES = wallet-utility.cpp
@ENABLE_WALLET_TRUE@wallet_utility_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
@ENABLE_WALLET_TRUE@wallet_utility_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
@ENABLE_WALLET_TRUE@wallet_utility_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
komodo_cli_LDADD = \
	$(LIBBITCOIN_CLI) \
	$(LIBUNIVALUE) \
	$(LIBBITCOIN_UTIL) \
	$(BOOST_LIBS) \
	$(SSL_LIBS) \
	$(CRYPTO_LIBS) \
	$(EVENT_LIBS) \
	$(LIBZCASH) \
	$(LIBBITCOIN_CRYPTO) \
  $(LIBVERUS_CRYPTO) \
  $(LIBVERUS_PORTABLE_CRYPTO) \
	$(LIBZCASH_LIBS)

@ENABLE_WALLET_TRUE@wallet_utility_LDADD = \
@ENABLE_WALLET_TRUE@	libbitcoin_wallet.a \
@ENABLE_WALLET_TRUE@	$(LIBBITCOIN_COMMON) \
@ENABLE_WALLET_TRUE@	$(LIBBITCOIN_CRYPTO) \
@ENABLE_WALLET_TRUE@  $(LIBVERUS_CRYPTO) \
@ENABLE_WALLET_TRUE@  $(LIBVERUS_PORTABLE_CRYPTO) \
@ENABLE_WALLET_TRUE@	$(LIBSECP256K1) \
@ENABLE_WALLET_TRUE@	$(LIBBITCOIN_UTIL) \
@ENABLE_WALLET_TRUE@	$(BOOST_LIBS) \
@ENABLE_WALLET_TRUE@	$(BDB_LIBS) \
@ENABLE_WALLET_TRUE@	$(CRYPTO_LIBS) \
@ENABLE_WALLET_TRUE@	$(LIBZCASH) \
@ENABLE_WALLET_TRUE@	$(LIBSNARK) \
@ENABLE_WALLET_TRUE@	$(LIBZCASH_LIBS)\
@ENABLE_WALLET_TRUE@  $(LIBCRYPTOCONDITIONS)


# zcash-tx binary #
komodo_tx_SOURCES = komodo-tx.cpp $(am__append_25)
komodo_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
komodo_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
komodo_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)

# FIXME: Is libzcash needed for zcash_tx?
komodo_tx_LDADD = $(LIBUNIVALUE) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBSECP256K1) $(LIBZCASH) $(LIBSNARK) \
	$(LIBBITCOIN_CRYPTO) $(LIBVERUS_CRYPTO) \
	$(LIBVERUS_PORTABLE_CRYPTO) $(LIBZCASH_LIBS) \
	$(LIBCRYPTOCONDITIONS) $(BOOST_LIBS) $(CRYPTO_LIBS)
#

# zcash protocol primitives #
libzcash_a_SOURCES = \
	zcash/IncrementalMerkleTree.cpp \
	zcash/NoteEncryption.cpp \
	zcash/Address.cpp \
	zcash/JoinSplit.cpp \
	zcash/Proof.cpp \
	zcash/Note.cpp \
	zcash/prf.cpp \
	zcash/util.cpp \
  zcash/zip32.cpp \
	zcash/circuit/commitment.tcc \
	zcash/circuit/gadget.tcc \
	zcash/circuit/merkle.tcc \
	zcash/circuit/note.tcc \
	zcash/circuit/prfs.tcc \
	zcash/circuit/utils.tcc

libzcash_a_CPPFLAGS = -DMULTICORE -fopenmp -fPIC -DBINARY_OUTPUT \
	-DCURVE_ALT_BN128 -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO \
	-D__STDC_FORMAT_MACROS $(HARDENED_CPPFLAGS) \
	$(HARDENED_CXXFLAGS) $(HARDENED_LDFLAGS) -pipe $(SAN_LDFLAGS) \
	-O1 -g -Wstack-protector $(SAN_CXXFLAGS) -fstack-protector-all \
	-fPIE -fvisibility=hidden -DSTATIC $(BITCOIN_INCLUDES) \
	-DMONTGOMERY_OUTPUT

#libzcash_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#libzcash_a_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#libzcash_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMONTGOMERY_OUTPUT
libzcash_a_CXXFLAGS = $(SAN_CXXFLAGS) $(HARDENED_CXXFLAGS) -fwrapv -fno-strict-aliasing
libzcash_a_LDFLAGS = $(SAN_LDFLAGS) $(HARDENED_LDFLAGS)

# zcashconsensus library #
@BUILD_BITCOIN_LIBS_TRUE@include_HEADERS = script/zcashconsensus.h
@BUILD_BITCOIN_LIBS_TRUE@libzcashconsensus_la_SOURCES =  \
@BUILD_BITCOIN_LIBS_TRUE@	crypto/equihash.cpp \
@BUILD_BITCOIN_LIBS_TRUE@	crypto/hmac_sha512.cpp \
@BUILD_BITCOIN_LIBS_TRUE@	crypto/ripemd160.cpp crypto/sha1.cpp \
@BUILD_BITCOIN_LIBS_TRUE@	crypto/sha256.cpp crypto/sha512.cpp \
@BUILD_BITCOIN_LIBS_TRUE@	hash.cpp primitives/transaction.cpp \
@BUILD_BITCOIN_LIBS_TRUE@	primitives/nonce.cpp pubkey.cpp \
@BUILD_BITCOIN_LIBS_TRUE@	script/zcashconsensus.cpp \
@BUILD_BITCOIN_LIBS_TRUE@	script/interpreter.cpp \
@BUILD_BITCOIN_LIBS_TRUE@	script/script.cpp uint256.cpp \
@BUILD_BITCOIN_LIBS_TRUE@	utilstrencodings.cpp $(am__append_26)
@BUILD_BITCOIN_LIBS_TRUE@libzcashconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)
@BUILD_BITCOIN_LIBS_TRUE@libzcashconsensus_la_LIBADD = $(LIBSECP256K1)
@BUILD_BITCOIN_LIBS_TRUE@libzcashconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -I$(srcdir)/cryptoconditions/include -DBUILD_BITCOIN_INTERNAL
@BUILD_BITCOIN_LIBS_TRUE@libzcashconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)

#
CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno */*.gcno wallet/*/*.gcno
DISTCLEANFILES = obj/build.h
EXTRA_DIST = leveldb snark

# tool for generating our public parameters
@ENABLE_TESTS_TRUE@komodo_test_SOURCES = \
@ENABLE_TESTS_TRUE@	test-komodo/main.cpp \
@ENABLE_TESTS_TRUE@	test-komodo/testutils.cpp \
@ENABLE_TESTS_TRUE@	test-komodo/test_cryptoconditions.cpp \
@ENABLE_TESTS_TRUE@	test-komodo/test_coinimport.cpp \
@ENABLE_TESTS_TRUE@	test-komodo/test_eval_bet.cpp \
@ENABLE_TESTS_TRUE@	test-komodo/test_eval_notarisation.cpp \
@ENABLE_TESTS_TRUE@	test-komodo/test_parse_notarisation.cpp

@ENABLE_TESTS_TRUE@komodo_test_CPPFLAGS = $(komodod_CPPFLAGS)
@ENABLE_TESTS_TRUE@komodo_test_LDADD = -lgtest $(komodod_LDADD)
@ENABLE_TESTS_TRUE@komodo_test_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .log .mm .o .obj .rc .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/Makefile.ktest.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Makefile.ktest.include $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

-lcurl: $(_lcurl_OBJECTS) $(_lcurl_DEPENDENCIES) $(EXTRA__lcurl_DEPENDENCIES) 
	$(AM_V_at)-rm -f -lcurl
	$(AM_V_AR)$(_lcurl_AR) -lcurl $(_lcurl_OBJECTS) $(_lcurl_LIBADD)
	$(AM_V_at)$(RANLIB) -lcurl
crypto/$(am__dirstamp):
	@$(MKDIR_P) crypto
	@: > crypto/$(am__dirstamp)
crypto/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto/$(DEPDIR)
	@: > crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_a-equihash.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_a-hmac_sha256.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_a-hmac_sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_a-ripemd160.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_a-sha1.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_a-sha256.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_a-sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_a-verus_hash.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libbitcoin_crypto.a: $(crypto_libbitcoin_crypto_a_OBJECTS) $(crypto_libbitcoin_crypto_a_DEPENDENCIES) $(EXTRA_crypto_libbitcoin_crypto_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libbitcoin_crypto.a
	$(AM_V_AR)$(crypto_libbitcoin_crypto_a_AR) crypto/libbitcoin_crypto.a $(crypto_libbitcoin_crypto_a_OBJECTS) $(crypto_libbitcoin_crypto_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libbitcoin_crypto.a
crypto/crypto_libverus_crypto_a-haraka.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libverus_crypto.a: $(crypto_libverus_crypto_a_OBJECTS) $(crypto_libverus_crypto_a_DEPENDENCIES) $(EXTRA_crypto_libverus_crypto_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libverus_crypto.a
	$(AM_V_AR)$(crypto_libverus_crypto_a_AR) crypto/libverus_crypto.a $(crypto_libverus_crypto_a_OBJECTS) $(crypto_libverus_crypto_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libverus_crypto.a
crypto/crypto_libverus_portable_crypto_a-haraka_portable.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libverus_portable_crypto.a: $(crypto_libverus_portable_crypto_a_OBJECTS) $(crypto_libverus_portable_crypto_a_DEPENDENCIES) $(EXTRA_crypto_libverus_portable_crypto_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libverus_portable_crypto.a
	$(AM_V_AR)$(crypto_libverus_portable_crypto_a_AR) crypto/libverus_portable_crypto.a $(crypto_libverus_portable_crypto_a_OBJECTS) $(crypto_libverus_portable_crypto_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libverus_portable_crypto.a
rpc/$(am__dirstamp):
	@$(MKDIR_P) rpc
	@: > rpc/$(am__dirstamp)
rpc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) rpc/$(DEPDIR)
	@: > rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_cli_a-client.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)

libbitcoin_cli.a: $(libbitcoin_cli_a_OBJECTS) $(libbitcoin_cli_a_DEPENDENCIES) $(EXTRA_libbitcoin_cli_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_cli.a
	$(AM_V_AR)$(libbitcoin_cli_a_AR) libbitcoin_cli.a $(libbitcoin_cli_a_OBJECTS) $(libbitcoin_cli_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_cli.a
consensus/$(am__dirstamp):
	@$(MKDIR_P) consensus
	@: > consensus/$(am__dirstamp)
consensus/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) consensus/$(DEPDIR)
	@: > consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libbitcoin_common_a-upgrades.$(OBJEXT):  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoin_common_a-verus_hash.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
primitives/$(am__dirstamp):
	@$(MKDIR_P) primitives
	@: > primitives/$(am__dirstamp)
primitives/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) primitives/$(DEPDIR)
	@: > primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoin_common_a-block.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoin_common_a-transaction.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoin_common_a-nonce.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/$(am__dirstamp):
	@$(MKDIR_P) script
	@: > script/$(am__dirstamp)
script/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) script/$(DEPDIR)
	@: > script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-cc.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-interpreter.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-script.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-script_ext.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-script_error.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-sign.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-standard.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
cc/$(am__dirstamp):
	@$(MKDIR_P) cc
	@: > cc/$(am__dirstamp)
cc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cc/$(DEPDIR)
	@: > cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_common_a-CCtokenutils.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_common_a-CCutilbits.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)

libbitcoin_common.a: $(libbitcoin_common_a_OBJECTS) $(libbitcoin_common_a_DEPENDENCIES) $(EXTRA_libbitcoin_common_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_common.a
	$(AM_V_AR)$(libbitcoin_common_a_AR) libbitcoin_common.a $(libbitcoin_common_a_OBJECTS) $(libbitcoin_common_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_common.a
amqp/$(am__dirstamp):
	@$(MKDIR_P) amqp
	@: > amqp/$(am__dirstamp)
amqp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) amqp/$(DEPDIR)
	@: > amqp/$(DEPDIR)/$(am__dirstamp)
amqp/libbitcoin_proton_a-amqpabstractnotifier.$(OBJEXT):  \
	amqp/$(am__dirstamp) amqp/$(DEPDIR)/$(am__dirstamp)
amqp/libbitcoin_proton_a-amqpnotificationinterface.$(OBJEXT):  \
	amqp/$(am__dirstamp) amqp/$(DEPDIR)/$(am__dirstamp)
amqp/libbitcoin_proton_a-amqppublishnotifier.$(OBJEXT):  \
	amqp/$(am__dirstamp) amqp/$(DEPDIR)/$(am__dirstamp)

libbitcoin_proton.a: $(libbitcoin_proton_a_OBJECTS) $(libbitcoin_proton_a_DEPENDENCIES) $(EXTRA_libbitcoin_proton_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_proton.a
	$(AM_V_AR)$(libbitcoin_proton_a_AR) libbitcoin_proton.a $(libbitcoin_proton_a_OBJECTS) $(libbitcoin_proton_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_proton.a
cc/libbitcoin_server_a-eval.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-import.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-importgateway.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-CCassetsCore.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-CCcustom.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-CCtx.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-CCutils.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-CCtokens.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-assets.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-faucet.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-rewards.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-dice.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-lotto.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-fsm.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-heir.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-oracles.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-prices.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-pegs.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-marmara.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-payments.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-gateways.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-channels.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-auction.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_server_a-betprotocol.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoin_server_a-verus_hash.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
policy/$(am__dirstamp):
	@$(MKDIR_P) policy
	@: > policy/$(am__dirstamp)
policy/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) policy/$(DEPDIR)
	@: > policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoin_server_a-fees.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-blockchain.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-crosschain.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-mining.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-misc.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-net.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-rawtransaction.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-server.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_server_a-serverchecker.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_server_a-sigcache.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-testtransactions.$(OBJEXT):  \
	rpc/$(am__dirstamp) rpc/$(DEPDIR)/$(am__dirstamp)

libbitcoin_server.a: $(libbitcoin_server_a_OBJECTS) $(libbitcoin_server_a_DEPENDENCIES) $(EXTRA_libbitcoin_server_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_server.a
	$(AM_V_AR)$(libbitcoin_server_a_AR) libbitcoin_server.a $(libbitcoin_server_a_OBJECTS) $(libbitcoin_server_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_server.a
support/$(am__dirstamp):
	@$(MKDIR_P) support
	@: > support/$(am__dirstamp)
support/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) support/$(DEPDIR)
	@: > support/$(DEPDIR)/$(am__dirstamp)
support/libbitcoin_util_a-pagelocker.$(OBJEXT):  \
	support/$(am__dirstamp) support/$(DEPDIR)/$(am__dirstamp)
compat/$(am__dirstamp):
	@$(MKDIR_P) compat
	@: > compat/$(am__dirstamp)
compat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) compat/$(DEPDIR)
	@: > compat/$(DEPDIR)/$(am__dirstamp)
compat/libbitcoin_util_a-glibc_sanity.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
compat/libbitcoin_util_a-glibcxx_sanity.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
compat/libbitcoin_util_a-strnlen.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_util_a-protocol.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
support/libbitcoin_util_a-cleanse.$(OBJEXT): support/$(am__dirstamp) \
	support/$(DEPDIR)/$(am__dirstamp)
compat/libbitcoin_util_a-glibc_compat.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)

libbitcoin_util.a: $(libbitcoin_util_a_OBJECTS) $(libbitcoin_util_a_DEPENDENCIES) $(EXTRA_libbitcoin_util_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_util.a
	$(AM_V_AR)$(libbitcoin_util_a_AR) libbitcoin_util.a $(libbitcoin_util_a_OBJECTS) $(libbitcoin_util_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_util.a
wallet/$(am__dirstamp):
	@$(MKDIR_P) wallet
	@: > wallet/$(am__dirstamp)
wallet/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/$(DEPDIR)
	@: > wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-crypter.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-db.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-rpcdisclosure.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-rpcdump.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_wallet_a-CCtokens.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_wallet_a-CCassetsCore.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_wallet_a-CCassetstx.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
cc/libbitcoin_wallet_a-CCtx.$(OBJEXT): cc/$(am__dirstamp) \
	cc/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-rpcwallet.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-wallet.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-wallet_ismine.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-walletdb.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
zcash/$(am__dirstamp):
	@$(MKDIR_P) zcash
	@: > zcash/$(am__dirstamp)
zcash/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) zcash/$(DEPDIR)
	@: > zcash/$(DEPDIR)/$(am__dirstamp)
zcash/libbitcoin_wallet_a-zip32.$(OBJEXT): zcash/$(am__dirstamp) \
	zcash/$(DEPDIR)/$(am__dirstamp)

libbitcoin_wallet.a: $(libbitcoin_wallet_a_OBJECTS) $(libbitcoin_wallet_a_DEPENDENCIES) $(EXTRA_libbitcoin_wallet_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_wallet.a
	$(AM_V_AR)$(libbitcoin_wallet_a_AR) libbitcoin_wallet.a $(libbitcoin_wallet_a_OBJECTS) $(libbitcoin_wallet_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_wallet.a
zmq/$(am__dirstamp):
	@$(MKDIR_P) zmq
	@: > zmq/$(am__dirstamp)
zmq/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) zmq/$(DEPDIR)
	@: > zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmqabstractnotifier.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmqnotificationinterface.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmqpublishnotifier.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)

libbitcoin_zmq.a: $(libbitcoin_zmq_a_OBJECTS) $(libbitcoin_zmq_a_DEPENDENCIES) $(EXTRA_libbitcoin_zmq_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_zmq.a
	$(AM_V_AR)$(libbitcoin_zmq_a_AR) libbitcoin_zmq.a $(libbitcoin_zmq_a_OBJECTS) $(libbitcoin_zmq_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_zmq.a
zcash/libzcash_a-IncrementalMerkleTree.$(OBJEXT):  \
	zcash/$(am__dirstamp) zcash/$(DEPDIR)/$(am__dirstamp)
zcash/libzcash_a-NoteEncryption.$(OBJEXT): zcash/$(am__dirstamp) \
	zcash/$(DEPDIR)/$(am__dirstamp)
zcash/libzcash_a-Address.$(OBJEXT): zcash/$(am__dirstamp) \
	zcash/$(DEPDIR)/$(am__dirstamp)
zcash/libzcash_a-JoinSplit.$(OBJEXT): zcash/$(am__dirstamp) \
	zcash/$(DEPDIR)/$(am__dirstamp)
zcash/libzcash_a-Proof.$(OBJEXT): zcash/$(am__dirstamp) \
	zcash/$(DEPDIR)/$(am__dirstamp)
zcash/libzcash_a-Note.$(OBJEXT): zcash/$(am__dirstamp) \
	zcash/$(DEPDIR)/$(am__dirstamp)
zcash/libzcash_a-prf.$(OBJEXT): zcash/$(am__dirstamp) \
	zcash/$(DEPDIR)/$(am__dirstamp)
zcash/libzcash_a-util.$(OBJEXT): zcash/$(am__dirstamp) \
	zcash/$(DEPDIR)/$(am__dirstamp)
zcash/libzcash_a-zip32.$(OBJEXT): zcash/$(am__dirstamp) \
	zcash/$(DEPDIR)/$(am__dirstamp)

libzcash.a: $(libzcash_a_OBJECTS) $(libzcash_a_DEPENDENCIES) $(EXTRA_libzcash_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libzcash.a
	$(AM_V_AR)$(libzcash_a_AR) libzcash.a $(libzcash_a_OBJECTS) $(libzcash_a_LIBADD)
	$(AM_V_at)$(RANLIB) libzcash.a

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
crypto/libzcashconsensus_la-equihash.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libzcashconsensus_la-hmac_sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libzcashconsensus_la-ripemd160.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libzcashconsensus_la-sha1.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libzcashconsensus_la-sha256.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libzcashconsensus_la-sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
primitives/libzcashconsensus_la-transaction.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libzcashconsensus_la-nonce.lo: primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libzcashconsensus_la-zcashconsensus.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libzcashconsensus_la-interpreter.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libzcashconsensus_la-script.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
compat/libzcashconsensus_la-glibc_compat.lo: compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)

libzcashconsensus.la: $(libzcashconsensus_la_OBJECTS) $(libzcashconsensus_la_DEPENDENCIES) $(EXTRA_libzcashconsensus_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libzcashconsensus_la_LINK) $(am_libzcashconsensus_la_rpath) $(libzcashconsensus_la_OBJECTS) $(libzcashconsensus_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

komodo-cli$(EXEEXT): $(komodo_cli_OBJECTS) $(komodo_cli_DEPENDENCIES) $(EXTRA_komodo_cli_DEPENDENCIES) 
	@rm -f komodo-cli$(EXEEXT)
	$(AM_V_CXXLD)$(komodo_cli_LINK) $(komodo_cli_OBJECTS) $(komodo_cli_LDADD) $(LIBS)
test-komodo/$(am__dirstamp):
	@$(MKDIR_P) test-komodo
	@: > test-komodo/$(am__dirstamp)
test-komodo/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test-komodo/$(DEPDIR)
	@: > test-komodo/$(DEPDIR)/$(am__dirstamp)
test-komodo/komodo_test-main.$(OBJEXT): test-komodo/$(am__dirstamp) \
	test-komodo/$(DEPDIR)/$(am__dirstamp)
test-komodo/komodo_test-testutils.$(OBJEXT):  \
	test-komodo/$(am__dirstamp) \
	test-komodo/$(DEPDIR)/$(am__dirstamp)
test-komodo/komodo_test-test_cryptoconditions.$(OBJEXT):  \
	test-komodo/$(am__dirstamp) \
	test-komodo/$(DEPDIR)/$(am__dirstamp)
test-komodo/komodo_test-test_coinimport.$(OBJEXT):  \
	test-komodo/$(am__dirstamp) \
	test-komodo/$(DEPDIR)/$(am__dirstamp)
test-komodo/komodo_test-test_eval_bet.$(OBJEXT):  \
	test-komodo/$(am__dirstamp) \
	test-komodo/$(DEPDIR)/$(am__dirstamp)
test-komodo/komodo_test-test_eval_notarisation.$(OBJEXT):  \
	test-komodo/$(am__dirstamp) \
	test-komodo/$(DEPDIR)/$(am__dirstamp)
test-komodo/komodo_test-test_parse_notarisation.$(OBJEXT):  \
	test-komodo/$(am__dirstamp) \
	test-komodo/$(DEPDIR)/$(am__dirstamp)

komodo-test$(EXEEXT): $(komodo_test_OBJECTS) $(komodo_test_DEPENDENCIES) $(EXTRA_komodo_test_DEPENDENCIES) 
	@rm -f komodo-test$(EXEEXT)
	$(AM_V_CXXLD)$(komodo_test_LINK) $(komodo_test_OBJECTS) $(komodo_test_LDADD) $(LIBS)

komodo-tx$(EXEEXT): $(komodo_tx_OBJECTS) $(komodo_tx_DEPENDENCIES) $(EXTRA_komodo_tx_DEPENDENCIES) 
	@rm -f komodo-tx$(EXEEXT)
	$(AM_V_CXXLD)$(komodo_tx_LINK) $(komodo_tx_OBJECTS) $(komodo_tx_LDADD) $(LIBS)

komodod$(EXEEXT): $(komodod_OBJECTS) $(komodod_DEPENDENCIES) $(EXTRA_komodod_DEPENDENCIES) 
	@rm -f komodod$(EXEEXT)
	$(AM_V_CXXLD)$(komodod_LINK) $(komodod_OBJECTS) $(komodod_LDADD) $(LIBS)

wallet-utility$(EXEEXT): $(wallet_utility_OBJECTS) $(wallet_utility_DEPENDENCIES) $(EXTRA_wallet_utility_DEPENDENCIES) 
	@rm -f wallet-utility$(EXEEXT)
	$(AM_V_CXXLD)$(wallet_utility_LINK) $(wallet_utility_OBJECTS) $(wallet_utility_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f amqp/*.$(OBJEXT)
	-rm -f cc/*.$(OBJEXT)
	-rm -f compat/*.$(OBJEXT)
	-rm -f compat/*.lo
	-rm -f consensus/*.$(OBJEXT)
	-rm -f crypto/*.$(OBJEXT)
	-rm -f crypto/*.lo
	-rm -f policy/*.$(OBJEXT)
	-rm -f primitives/*.$(OBJEXT)
	-rm -f primitives/*.lo
	-rm -f rpc/*.$(OBJEXT)
	-rm -f script/*.$(OBJEXT)
	-rm -f script/*.lo
	-rm -f support/*.$(OBJEXT)
	-rm -f test-komodo/*.$(OBJEXT)
	-rm -f wallet/*.$(OBJEXT)
	-rm -f zcash/*.$(OBJEXT)
	-rm -f zmq/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/-lcurl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/komodo_cli-bitcoin-cli.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/komodo_tx-komodo-tx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/komodod-bitcoind.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-amount.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-arith_uint256.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-base58.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-bech32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-chainparams.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-coins.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-compressor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-core_read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-core_write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-importcoin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-key.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-key_io.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-keystore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-metrics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-netbase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-protocol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-pubkey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-scheduler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_common_a-transaction_builder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-addrman.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-alert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-asyncrpcoperation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-asyncrpcqueue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-bloom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-chain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-checkpoints.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-crosschain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-crosschain_authority.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-dbwrapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-deprecation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-httprpc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-httpserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-init.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-merkleblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-miner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-net.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-notaries_staked.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-notarisationdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-noui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-paymentdisclosure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-paymentdisclosuredb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-pow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-rest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-sendalert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-timedata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-torcontrol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-txdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-txmempool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_server_a-validationinterface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_util_a-clientversion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_util_a-random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_util_a-sync.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_util_a-uint256.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_util_a-util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_util_a-utilmoneystr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_util_a-utilstrencodings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_util_a-utiltime.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_wallet_a-paymentdisclosure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_wallet_a-paymentdisclosuredb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_wallet_a-transaction_builder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_wallet_a-utiltest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitcoin_wallet_a-zcbenchmarks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzcashconsensus_la-hash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzcashconsensus_la-pubkey.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzcashconsensus_la-uint256.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzcashconsensus_la-utilstrencodings.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wallet_utility-wallet-utility.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@amqp/$(DEPDIR)/libbitcoin_proton_a-amqpabstractnotifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@amqp/$(DEPDIR)/libbitcoin_proton_a-amqpnotificationinterface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@amqp/$(DEPDIR)/libbitcoin_proton_a-amqppublishnotifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_common_a-CCtokenutils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_common_a-CCutilbits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-CCassetsCore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-CCcustom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-CCtokens.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-CCtx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-CCutils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-assets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-auction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-betprotocol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-channels.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-dice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-eval.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-faucet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-fsm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-gateways.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-heir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-import.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-importgateway.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-lotto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-marmara.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-oracles.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-payments.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-pegs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-prices.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_server_a-rewards.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetsCore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetstx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_wallet_a-CCtokens.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cc/$(DEPDIR)/libbitcoin_wallet_a-CCtx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/libzcashconsensus_la-glibc_compat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@consensus/$(DEPDIR)/libbitcoin_common_a-upgrades.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-equihash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha256.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha512.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-ripemd160.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha256.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha512.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-verus_hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/crypto_libverus_crypto_a-haraka.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/crypto_libverus_portable_crypto_a-haraka_portable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/libbitcoin_common_a-verus_hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/libbitcoin_server_a-verus_hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/libzcashconsensus_la-equihash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/libzcashconsensus_la-hmac_sha512.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/libzcashconsensus_la-ripemd160.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/libzcashconsensus_la-sha1.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/libzcashconsensus_la-sha256.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/libzcashconsensus_la-sha512.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@policy/$(DEPDIR)/libbitcoin_server_a-fees.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@primitives/$(DEPDIR)/libbitcoin_common_a-block.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@primitives/$(DEPDIR)/libbitcoin_common_a-nonce.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@primitives/$(DEPDIR)/libbitcoin_common_a-transaction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@primitives/$(DEPDIR)/libzcashconsensus_la-nonce.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@primitives/$(DEPDIR)/libzcashconsensus_la-transaction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@rpc/$(DEPDIR)/libbitcoin_server_a-crosschain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@rpc/$(DEPDIR)/libbitcoin_server_a-mining.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@rpc/$(DEPDIR)/libbitcoin_server_a-misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@rpc/$(DEPDIR)/libbitcoin_server_a-net.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@rpc/$(DEPDIR)/libbitcoin_server_a-server.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@rpc/$(DEPDIR)/libbitcoin_server_a-testtransactions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libbitcoin_common_a-cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libbitcoin_common_a-interpreter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libbitcoin_common_a-script.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libbitcoin_common_a-script_error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libbitcoin_common_a-script_ext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libbitcoin_common_a-sign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libbitcoin_common_a-standard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libbitcoin_server_a-serverchecker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libbitcoin_server_a-sigcache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libzcashconsensus_la-interpreter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libzcashconsensus_la-script.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@script/$(DEPDIR)/libzcashconsensus_la-zcashconsensus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@support/$(DEPDIR)/libbitcoin_util_a-pagelocker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test-komodo/$(DEPDIR)/komodo_test-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test-komodo/$(DEPDIR)/komodo_test-test_coinimport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test-komodo/$(DEPDIR)/komodo_test-test_cryptoconditions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test-komodo/$(DEPDIR)/komodo_test-test_eval_bet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test-komodo/$(DEPDIR)/komodo_test-test_eval_notarisation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test-komodo/$(DEPDIR)/komodo_test-test_parse_notarisation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test-komodo/$(DEPDIR)/komodo_test-testutils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_sendmany.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdisclosure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet_ismine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zcash/$(DEPDIR)/libbitcoin_wallet_a-zip32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zcash/$(DEPDIR)/libzcash_a-Address.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zcash/$(DEPDIR)/libzcash_a-IncrementalMerkleTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zcash/$(DEPDIR)/libzcash_a-JoinSplit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zcash/$(DEPDIR)/libzcash_a-Note.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zcash/$(DEPDIR)/libzcash_a-NoteEncryption.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zcash/$(DEPDIR)/libzcash_a-Proof.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zcash/$(DEPDIR)/libzcash_a-prf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zcash/$(DEPDIR)/libzcash_a-util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zcash/$(DEPDIR)/libzcash_a-zip32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

crypto/crypto_libverus_crypto_a-haraka.o: crypto/haraka.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libverus_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto/crypto_libverus_crypto_a-haraka.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libverus_crypto_a-haraka.Tpo -c -o crypto/crypto_libverus_crypto_a-haraka.o `test -f 'crypto/haraka.c' || echo '$(srcdir)/'`crypto/haraka.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libverus_crypto_a-haraka.Tpo crypto/$(DEPDIR)/crypto_libverus_crypto_a-haraka.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto/haraka.c' object='crypto/crypto_libverus_crypto_a-haraka.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libverus_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto/crypto_libverus_crypto_a-haraka.o `test -f 'crypto/haraka.c' || echo '$(srcdir)/'`crypto/haraka.c

crypto/crypto_libverus_crypto_a-haraka.obj: crypto/haraka.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libverus_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto/crypto_libverus_crypto_a-haraka.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libverus_crypto_a-haraka.Tpo -c -o crypto/crypto_libverus_crypto_a-haraka.obj `if test -f 'crypto/haraka.c'; then $(CYGPATH_W) 'crypto/haraka.c'; else $(CYGPATH_W) '$(srcdir)/crypto/haraka.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libverus_crypto_a-haraka.Tpo crypto/$(DEPDIR)/crypto_libverus_crypto_a-haraka.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto/haraka.c' object='crypto/crypto_libverus_crypto_a-haraka.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libverus_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto/crypto_libverus_crypto_a-haraka.obj `if test -f 'crypto/haraka.c'; then $(CYGPATH_W) 'crypto/haraka.c'; else $(CYGPATH_W) '$(srcdir)/crypto/haraka.c'; fi`

crypto/crypto_libverus_portable_crypto_a-haraka_portable.o: crypto/haraka_portable.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libverus_portable_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto/crypto_libverus_portable_crypto_a-haraka_portable.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libverus_portable_crypto_a-haraka_portable.Tpo -c -o crypto/crypto_libverus_portable_crypto_a-haraka_portable.o `test -f 'crypto/haraka_portable.c' || echo '$(srcdir)/'`crypto/haraka_portable.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libverus_portable_crypto_a-haraka_portable.Tpo crypto/$(DEPDIR)/crypto_libverus_portable_crypto_a-haraka_portable.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto/haraka_portable.c' object='crypto/crypto_libverus_portable_crypto_a-haraka_portable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libverus_portable_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto/crypto_libverus_portable_crypto_a-haraka_portable.o `test -f 'crypto/haraka_portable.c' || echo '$(srcdir)/'`crypto/haraka_portable.c

crypto/crypto_libverus_portable_crypto_a-haraka_portable.obj: crypto/haraka_portable.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libverus_portable_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto/crypto_libverus_portable_crypto_a-haraka_portable.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libverus_portable_crypto_a-haraka_portable.Tpo -c -o crypto/crypto_libverus_portable_crypto_a-haraka_portable.obj `if test -f 'crypto/haraka_portable.c'; then $(CYGPATH_W) 'crypto/haraka_portable.c'; else $(CYGPATH_W) '$(srcdir)/crypto/haraka_portable.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libverus_portable_crypto_a-haraka_portable.Tpo crypto/$(DEPDIR)/crypto_libverus_portable_crypto_a-haraka_portable.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto/haraka_portable.c' object='crypto/crypto_libverus_portable_crypto_a-haraka_portable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libverus_portable_crypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto/crypto_libverus_portable_crypto_a-haraka_portable.obj `if test -f 'crypto/haraka_portable.c'; then $(CYGPATH_W) 'crypto/haraka_portable.c'; else $(CYGPATH_W) '$(srcdir)/crypto/haraka_portable.c'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

crypto/crypto_libbitcoin_crypto_a-equihash.o: crypto/equihash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-equihash.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-equihash.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-equihash.o `test -f 'crypto/equihash.cpp' || echo '$(srcdir)/'`crypto/equihash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-equihash.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-equihash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/equihash.cpp' object='crypto/crypto_libbitcoin_crypto_a-equihash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-equihash.o `test -f 'crypto/equihash.cpp' || echo '$(srcdir)/'`crypto/equihash.cpp

crypto/crypto_libbitcoin_crypto_a-equihash.obj: crypto/equihash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-equihash.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-equihash.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-equihash.obj `if test -f 'crypto/equihash.cpp'; then $(CYGPATH_W) 'crypto/equihash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/equihash.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-equihash.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-equihash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/equihash.cpp' object='crypto/crypto_libbitcoin_crypto_a-equihash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-equihash.obj `if test -f 'crypto/equihash.cpp'; then $(CYGPATH_W) 'crypto/equihash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/equihash.cpp'; fi`

crypto/crypto_libbitcoin_crypto_a-hmac_sha256.o: crypto/hmac_sha256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-hmac_sha256.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha256.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha256.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha256.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/crypto_libbitcoin_crypto_a-hmac_sha256.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp

crypto/crypto_libbitcoin_crypto_a-hmac_sha256.obj: crypto/hmac_sha256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-hmac_sha256.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha256.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha256.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha256.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/crypto_libbitcoin_crypto_a-hmac_sha256.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`

crypto/crypto_libbitcoin_crypto_a-hmac_sha512.o: crypto/hmac_sha512.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-hmac_sha512.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha512.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha512.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha512.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/crypto_libbitcoin_crypto_a-hmac_sha512.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/crypto_libbitcoin_crypto_a-hmac_sha512.obj: crypto/hmac_sha512.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-hmac_sha512.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha512.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha512.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-hmac_sha512.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/crypto_libbitcoin_crypto_a-hmac_sha512.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`

crypto/crypto_libbitcoin_crypto_a-ripemd160.o: crypto/ripemd160.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-ripemd160.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-ripemd160.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-ripemd160.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-ripemd160.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/crypto_libbitcoin_crypto_a-ripemd160.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/crypto_libbitcoin_crypto_a-ripemd160.obj: crypto/ripemd160.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-ripemd160.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-ripemd160.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-ripemd160.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-ripemd160.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/crypto_libbitcoin_crypto_a-ripemd160.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`

crypto/crypto_libbitcoin_crypto_a-sha1.o: crypto/sha1.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-sha1.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha1.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha1.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha1.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/crypto_libbitcoin_crypto_a-sha1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/crypto_libbitcoin_crypto_a-sha1.obj: crypto/sha1.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-sha1.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha1.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha1.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha1.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/crypto_libbitcoin_crypto_a-sha1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`

crypto/crypto_libbitcoin_crypto_a-sha256.o: crypto/sha256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-sha256.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha256.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha256.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha256.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/crypto_libbitcoin_crypto_a-sha256.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/crypto_libbitcoin_crypto_a-sha256.obj: crypto/sha256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-sha256.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha256.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha256.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha256.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/crypto_libbitcoin_crypto_a-sha256.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`

crypto/crypto_libbitcoin_crypto_a-sha512.o: crypto/sha512.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-sha512.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha512.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha512.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha512.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/crypto_libbitcoin_crypto_a-sha512.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/crypto_libbitcoin_crypto_a-sha512.obj: crypto/sha512.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-sha512.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha512.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha512.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-sha512.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/crypto_libbitcoin_crypto_a-sha512.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`

crypto/crypto_libbitcoin_crypto_a-verus_hash.o: crypto/verus_hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-verus_hash.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-verus_hash.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-verus_hash.o `test -f 'crypto/verus_hash.cpp' || echo '$(srcdir)/'`crypto/verus_hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-verus_hash.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-verus_hash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/verus_hash.cpp' object='crypto/crypto_libbitcoin_crypto_a-verus_hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-verus_hash.o `test -f 'crypto/verus_hash.cpp' || echo '$(srcdir)/'`crypto/verus_hash.cpp

crypto/crypto_libbitcoin_crypto_a-verus_hash.obj: crypto/verus_hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_a-verus_hash.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-verus_hash.Tpo -c -o crypto/crypto_libbitcoin_crypto_a-verus_hash.obj `if test -f 'crypto/verus_hash.cpp'; then $(CYGPATH_W) 'crypto/verus_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/verus_hash.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-verus_hash.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_a-verus_hash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/verus_hash.cpp' object='crypto/crypto_libbitcoin_crypto_a-verus_hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_a-verus_hash.obj `if test -f 'crypto/verus_hash.cpp'; then $(CYGPATH_W) 'crypto/verus_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/verus_hash.cpp'; fi`

rpc/libbitcoin_cli_a-client.o: rpc/client.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-client.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo -c -o rpc/libbitcoin_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libbitcoin_cli_a-client.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp

rpc/libbitcoin_cli_a-client.obj: rpc/client.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-client.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo -c -o rpc/libbitcoin_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libbitcoin_cli_a-client.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`

libbitcoin_common_a-amount.o: amount.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-amount.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-amount.Tpo -c -o libbitcoin_common_a-amount.o `test -f 'amount.cpp' || echo '$(srcdir)/'`amount.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-amount.Tpo $(DEPDIR)/libbitcoin_common_a-amount.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='amount.cpp' object='libbitcoin_common_a-amount.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-amount.o `test -f 'amount.cpp' || echo '$(srcdir)/'`amount.cpp

libbitcoin_common_a-amount.obj: amount.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-amount.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-amount.Tpo -c -o libbitcoin_common_a-amount.obj `if test -f 'amount.cpp'; then $(CYGPATH_W) 'amount.cpp'; else $(CYGPATH_W) '$(srcdir)/amount.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-amount.Tpo $(DEPDIR)/libbitcoin_common_a-amount.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='amount.cpp' object='libbitcoin_common_a-amount.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-amount.obj `if test -f 'amount.cpp'; then $(CYGPATH_W) 'amount.cpp'; else $(CYGPATH_W) '$(srcdir)/amount.cpp'; fi`

libbitcoin_common_a-arith_uint256.o: arith_uint256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-arith_uint256.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-arith_uint256.Tpo -c -o libbitcoin_common_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-arith_uint256.Tpo $(DEPDIR)/libbitcoin_common_a-arith_uint256.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitcoin_common_a-arith_uint256.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

libbitcoin_common_a-arith_uint256.obj: arith_uint256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-arith_uint256.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-arith_uint256.Tpo -c -o libbitcoin_common_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-arith_uint256.Tpo $(DEPDIR)/libbitcoin_common_a-arith_uint256.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitcoin_common_a-arith_uint256.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`

libbitcoin_common_a-base58.o: base58.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-base58.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-base58.Tpo -c -o libbitcoin_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-base58.Tpo $(DEPDIR)/libbitcoin_common_a-base58.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='base58.cpp' object='libbitcoin_common_a-base58.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp

libbitcoin_common_a-base58.obj: base58.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-base58.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-base58.Tpo -c -o libbitcoin_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-base58.Tpo $(DEPDIR)/libbitcoin_common_a-base58.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='base58.cpp' object='libbitcoin_common_a-base58.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`

libbitcoin_common_a-bech32.o: bech32.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-bech32.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-bech32.Tpo -c -o libbitcoin_common_a-bech32.o `test -f 'bech32.cpp' || echo '$(srcdir)/'`bech32.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-bech32.Tpo $(DEPDIR)/libbitcoin_common_a-bech32.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bech32.cpp' object='libbitcoin_common_a-bech32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-bech32.o `test -f 'bech32.cpp' || echo '$(srcdir)/'`bech32.cpp

libbitcoin_common_a-bech32.obj: bech32.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-bech32.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-bech32.Tpo -c -o libbitcoin_common_a-bech32.obj `if test -f 'bech32.cpp'; then $(CYGPATH_W) 'bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bech32.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-bech32.Tpo $(DEPDIR)/libbitcoin_common_a-bech32.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bech32.cpp' object='libbitcoin_common_a-bech32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-bech32.obj `if test -f 'bech32.cpp'; then $(CYGPATH_W) 'bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bech32.cpp'; fi`

libbitcoin_common_a-chainparams.o: chainparams.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-chainparams.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo -c -o libbitcoin_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo $(DEPDIR)/libbitcoin_common_a-chainparams.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='chainparams.cpp' object='libbitcoin_common_a-chainparams.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp

libbitcoin_common_a-chainparams.obj: chainparams.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-chainparams.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo -c -o libbitcoin_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo $(DEPDIR)/libbitcoin_common_a-chainparams.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='chainparams.cpp' object='libbitcoin_common_a-chainparams.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`

libbitcoin_common_a-coins.o: coins.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-coins.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-coins.Tpo -c -o libbitcoin_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-coins.Tpo $(DEPDIR)/libbitcoin_common_a-coins.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='coins.cpp' object='libbitcoin_common_a-coins.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp

libbitcoin_common_a-coins.obj: coins.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-coins.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-coins.Tpo -c -o libbitcoin_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-coins.Tpo $(DEPDIR)/libbitcoin_common_a-coins.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='coins.cpp' object='libbitcoin_common_a-coins.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`

libbitcoin_common_a-compressor.o: compressor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-compressor.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-compressor.Tpo -c -o libbitcoin_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-compressor.Tpo $(DEPDIR)/libbitcoin_common_a-compressor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='compressor.cpp' object='libbitcoin_common_a-compressor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp

libbitcoin_common_a-compressor.obj: compressor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-compressor.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-compressor.Tpo -c -o libbitcoin_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-compressor.Tpo $(DEPDIR)/libbitcoin_common_a-compressor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='compressor.cpp' object='libbitcoin_common_a-compressor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`

consensus/libbitcoin_common_a-upgrades.o: consensus/upgrades.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoin_common_a-upgrades.o -MD -MP -MF consensus/$(DEPDIR)/libbitcoin_common_a-upgrades.Tpo -c -o consensus/libbitcoin_common_a-upgrades.o `test -f 'consensus/upgrades.cpp' || echo '$(srcdir)/'`consensus/upgrades.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoin_common_a-upgrades.Tpo consensus/$(DEPDIR)/libbitcoin_common_a-upgrades.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='consensus/upgrades.cpp' object='consensus/libbitcoin_common_a-upgrades.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoin_common_a-upgrades.o `test -f 'consensus/upgrades.cpp' || echo '$(srcdir)/'`consensus/upgrades.cpp

consensus/libbitcoin_common_a-upgrades.obj: consensus/upgrades.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoin_common_a-upgrades.obj -MD -MP -MF consensus/$(DEPDIR)/libbitcoin_common_a-upgrades.Tpo -c -o consensus/libbitcoin_common_a-upgrades.obj `if test -f 'consensus/upgrades.cpp'; then $(CYGPATH_W) 'consensus/upgrades.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/upgrades.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoin_common_a-upgrades.Tpo consensus/$(DEPDIR)/libbitcoin_common_a-upgrades.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='consensus/upgrades.cpp' object='consensus/libbitcoin_common_a-upgrades.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoin_common_a-upgrades.obj `if test -f 'consensus/upgrades.cpp'; then $(CYGPATH_W) 'consensus/upgrades.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/upgrades.cpp'; fi`

libbitcoin_common_a-core_read.o: core_read.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_read.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_read.Tpo -c -o libbitcoin_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_read.Tpo $(DEPDIR)/libbitcoin_common_a-core_read.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='core_read.cpp' object='libbitcoin_common_a-core_read.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp

libbitcoin_common_a-core_read.obj: core_read.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_read.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_read.Tpo -c -o libbitcoin_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_read.Tpo $(DEPDIR)/libbitcoin_common_a-core_read.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='core_read.cpp' object='libbitcoin_common_a-core_read.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`

libbitcoin_common_a-core_write.o: core_write.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_write.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_write.Tpo -c -o libbitcoin_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_write.Tpo $(DEPDIR)/libbitcoin_common_a-core_write.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='core_write.cpp' object='libbitcoin_common_a-core_write.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp

libbitcoin_common_a-core_write.obj: core_write.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_write.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_write.Tpo -c -o libbitcoin_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_write.Tpo $(DEPDIR)/libbitcoin_common_a-core_write.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='core_write.cpp' object='libbitcoin_common_a-core_write.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`

crypto/libbitcoin_common_a-verus_hash.o: crypto/verus_hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_common_a-verus_hash.o -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_common_a-verus_hash.Tpo -c -o crypto/libbitcoin_common_a-verus_hash.o `test -f 'crypto/verus_hash.cpp' || echo '$(srcdir)/'`crypto/verus_hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_common_a-verus_hash.Tpo crypto/$(DEPDIR)/libbitcoin_common_a-verus_hash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/verus_hash.cpp' object='crypto/libbitcoin_common_a-verus_hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_common_a-verus_hash.o `test -f 'crypto/verus_hash.cpp' || echo '$(srcdir)/'`crypto/verus_hash.cpp

crypto/libbitcoin_common_a-verus_hash.obj: crypto/verus_hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_common_a-verus_hash.obj -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_common_a-verus_hash.Tpo -c -o crypto/libbitcoin_common_a-verus_hash.obj `if test -f 'crypto/verus_hash.cpp'; then $(CYGPATH_W) 'crypto/verus_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/verus_hash.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_common_a-verus_hash.Tpo crypto/$(DEPDIR)/libbitcoin_common_a-verus_hash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/verus_hash.cpp' object='crypto/libbitcoin_common_a-verus_hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_common_a-verus_hash.obj `if test -f 'crypto/verus_hash.cpp'; then $(CYGPATH_W) 'crypto/verus_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/verus_hash.cpp'; fi`

libbitcoin_common_a-hash.o: hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-hash.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-hash.Tpo -c -o libbitcoin_common_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-hash.Tpo $(DEPDIR)/libbitcoin_common_a-hash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='hash.cpp' object='libbitcoin_common_a-hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

libbitcoin_common_a-hash.obj: hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-hash.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-hash.Tpo -c -o libbitcoin_common_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-hash.Tpo $(DEPDIR)/libbitcoin_common_a-hash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='hash.cpp' object='libbitcoin_common_a-hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`

libbitcoin_common_a-importcoin.o: importcoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-importcoin.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-importcoin.Tpo -c -o libbitcoin_common_a-importcoin.o `test -f 'importcoin.cpp' || echo '$(srcdir)/'`importcoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-importcoin.Tpo $(DEPDIR)/libbitcoin_common_a-importcoin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='importcoin.cpp' object='libbitcoin_common_a-importcoin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-importcoin.o `test -f 'importcoin.cpp' || echo '$(srcdir)/'`importcoin.cpp

libbitcoin_common_a-importcoin.obj: importcoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-importcoin.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-importcoin.Tpo -c -o libbitcoin_common_a-importcoin.obj `if test -f 'importcoin.cpp'; then $(CYGPATH_W) 'importcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/importcoin.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-importcoin.Tpo $(DEPDIR)/libbitcoin_common_a-importcoin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='importcoin.cpp' object='libbitcoin_common_a-importcoin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-importcoin.obj `if test -f 'importcoin.cpp'; then $(CYGPATH_W) 'importcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/importcoin.cpp'; fi`

libbitcoin_common_a-key.o: key.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key.Tpo -c -o libbitcoin_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key.Tpo $(DEPDIR)/libbitcoin_common_a-key.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='key.cpp' object='libbitcoin_common_a-key.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp

libbitcoin_common_a-key.obj: key.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key.Tpo -c -o libbitcoin_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key.Tpo $(DEPDIR)/libbitcoin_common_a-key.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='key.cpp' object='libbitcoin_common_a-key.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`

libbitcoin_common_a-key_io.o: key_io.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key_io.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key_io.Tpo -c -o libbitcoin_common_a-key_io.o `test -f 'key_io.cpp' || echo '$(srcdir)/'`key_io.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key_io.Tpo $(DEPDIR)/libbitcoin_common_a-key_io.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='key_io.cpp' object='libbitcoin_common_a-key_io.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key_io.o `test -f 'key_io.cpp' || echo '$(srcdir)/'`key_io.cpp

libbitcoin_common_a-key_io.obj: key_io.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key_io.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key_io.Tpo -c -o libbitcoin_common_a-key_io.obj `if test -f 'key_io.cpp'; then $(CYGPATH_W) 'key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/key_io.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key_io.Tpo $(DEPDIR)/libbitcoin_common_a-key_io.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='key_io.cpp' object='libbitcoin_common_a-key_io.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key_io.obj `if test -f 'key_io.cpp'; then $(CYGPATH_W) 'key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/key_io.cpp'; fi`

libbitcoin_common_a-keystore.o: keystore.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-keystore.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-keystore.Tpo -c -o libbitcoin_common_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-keystore.Tpo $(DEPDIR)/libbitcoin_common_a-keystore.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='keystore.cpp' object='libbitcoin_common_a-keystore.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpp

libbitcoin_common_a-keystore.obj: keystore.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-keystore.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-keystore.Tpo -c -o libbitcoin_common_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-keystore.Tpo $(DEPDIR)/libbitcoin_common_a-keystore.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='keystore.cpp' object='libbitcoin_common_a-keystore.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`

libbitcoin_common_a-netbase.o: netbase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-netbase.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-netbase.Tpo -c -o libbitcoin_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-netbase.Tpo $(DEPDIR)/libbitcoin_common_a-netbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='netbase.cpp' object='libbitcoin_common_a-netbase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp

libbitcoin_common_a-netbase.obj: netbase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-netbase.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-netbase.Tpo -c -o libbitcoin_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-netbase.Tpo $(DEPDIR)/libbitcoin_common_a-netbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='netbase.cpp' object='libbitcoin_common_a-netbase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`

libbitcoin_common_a-metrics.o: metrics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-metrics.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-metrics.Tpo -c -o libbitcoin_common_a-metrics.o `test -f 'metrics.cpp' || echo '$(srcdir)/'`metrics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-metrics.Tpo $(DEPDIR)/libbitcoin_common_a-metrics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='metrics.cpp' object='libbitcoin_common_a-metrics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-metrics.o `test -f 'metrics.cpp' || echo '$(srcdir)/'`metrics.cpp

libbitcoin_common_a-metrics.obj: metrics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-metrics.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-metrics.Tpo -c -o libbitcoin_common_a-metrics.obj `if test -f 'metrics.cpp'; then $(CYGPATH_W) 'metrics.cpp'; else $(CYGPATH_W) '$(srcdir)/metrics.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-metrics.Tpo $(DEPDIR)/libbitcoin_common_a-metrics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='metrics.cpp' object='libbitcoin_common_a-metrics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-metrics.obj `if test -f 'metrics.cpp'; then $(CYGPATH_W) 'metrics.cpp'; else $(CYGPATH_W) '$(srcdir)/metrics.cpp'; fi`

primitives/libbitcoin_common_a-block.o: primitives/block.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_common_a-block.o -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_common_a-block.Tpo -c -o primitives/libbitcoin_common_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_common_a-block.Tpo primitives/$(DEPDIR)/libbitcoin_common_a-block.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitcoin_common_a-block.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_common_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/libbitcoin_common_a-block.obj: primitives/block.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_common_a-block.obj -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_common_a-block.Tpo -c -o primitives/libbitcoin_common_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_common_a-block.Tpo primitives/$(DEPDIR)/libbitcoin_common_a-block.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitcoin_common_a-block.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_common_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`

primitives/libbitcoin_common_a-transaction.o: primitives/transaction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_common_a-transaction.o -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_common_a-transaction.Tpo -c -o primitives/libbitcoin_common_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_common_a-transaction.Tpo primitives/$(DEPDIR)/libbitcoin_common_a-transaction.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitcoin_common_a-transaction.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_common_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

primitives/libbitcoin_common_a-transaction.obj: primitives/transaction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_common_a-transaction.obj -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_common_a-transaction.Tpo -c -o primitives/libbitcoin_common_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_common_a-transaction.Tpo primitives/$(DEPDIR)/libbitcoin_common_a-transaction.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitcoin_common_a-transaction.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_common_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`

primitives/libbitcoin_common_a-nonce.o: primitives/nonce.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_common_a-nonce.o -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_common_a-nonce.Tpo -c -o primitives/libbitcoin_common_a-nonce.o `test -f 'primitives/nonce.cpp' || echo '$(srcdir)/'`primitives/nonce.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_common_a-nonce.Tpo primitives/$(DEPDIR)/libbitcoin_common_a-nonce.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='primitives/nonce.cpp' object='primitives/libbitcoin_common_a-nonce.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_common_a-nonce.o `test -f 'primitives/nonce.cpp' || echo '$(srcdir)/'`primitives/nonce.cpp

primitives/libbitcoin_common_a-nonce.obj: primitives/nonce.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_common_a-nonce.obj -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_common_a-nonce.Tpo -c -o primitives/libbitcoin_common_a-nonce.obj `if test -f 'primitives/nonce.cpp'; then $(CYGPATH_W) 'primitives/nonce.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/nonce.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_common_a-nonce.Tpo primitives/$(DEPDIR)/libbitcoin_common_a-nonce.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='primitives/nonce.cpp' object='primitives/libbitcoin_common_a-nonce.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_common_a-nonce.obj `if test -f 'primitives/nonce.cpp'; then $(CYGPATH_W) 'primitives/nonce.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/nonce.cpp'; fi`

libbitcoin_common_a-protocol.o: protocol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-protocol.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-protocol.Tpo -c -o libbitcoin_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-protocol.Tpo $(DEPDIR)/libbitcoin_common_a-protocol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='protocol.cpp' object='libbitcoin_common_a-protocol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp

libbitcoin_common_a-protocol.obj: protocol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-protocol.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-protocol.Tpo -c -o libbitcoin_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-protocol.Tpo $(DEPDIR)/libbitcoin_common_a-protocol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='protocol.cpp' object='libbitcoin_common_a-protocol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`

libbitcoin_common_a-pubkey.o: pubkey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-pubkey.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-pubkey.Tpo -c -o libbitcoin_common_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-pubkey.Tpo $(DEPDIR)/libbitcoin_common_a-pubkey.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='pubkey.cpp' object='libbitcoin_common_a-pubkey.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

libbitcoin_common_a-pubkey.obj: pubkey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-pubkey.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-pubkey.Tpo -c -o libbitcoin_common_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-pubkey.Tpo $(DEPDIR)/libbitcoin_common_a-pubkey.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='pubkey.cpp' object='libbitcoin_common_a-pubkey.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`

libbitcoin_common_a-scheduler.o: scheduler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-scheduler.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo -c -o libbitcoin_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo $(DEPDIR)/libbitcoin_common_a-scheduler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='scheduler.cpp' object='libbitcoin_common_a-scheduler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp

libbitcoin_common_a-scheduler.obj: scheduler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-scheduler.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo -c -o libbitcoin_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo $(DEPDIR)/libbitcoin_common_a-scheduler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='scheduler.cpp' object='libbitcoin_common_a-scheduler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`

script/libbitcoin_common_a-cc.o: script/cc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-cc.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-cc.Tpo -c -o script/libbitcoin_common_a-cc.o `test -f 'script/cc.cpp' || echo '$(srcdir)/'`script/cc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-cc.Tpo script/$(DEPDIR)/libbitcoin_common_a-cc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/cc.cpp' object='script/libbitcoin_common_a-cc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-cc.o `test -f 'script/cc.cpp' || echo '$(srcdir)/'`script/cc.cpp

script/libbitcoin_common_a-cc.obj: script/cc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-cc.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-cc.Tpo -c -o script/libbitcoin_common_a-cc.obj `if test -f 'script/cc.cpp'; then $(CYGPATH_W) 'script/cc.cpp'; else $(CYGPATH_W) '$(srcdir)/script/cc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-cc.Tpo script/$(DEPDIR)/libbitcoin_common_a-cc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/cc.cpp' object='script/libbitcoin_common_a-cc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-cc.obj `if test -f 'script/cc.cpp'; then $(CYGPATH_W) 'script/cc.cpp'; else $(CYGPATH_W) '$(srcdir)/script/cc.cpp'; fi`

script/libbitcoin_common_a-interpreter.o: script/interpreter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-interpreter.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-interpreter.Tpo -c -o script/libbitcoin_common_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-interpreter.Tpo script/$(DEPDIR)/libbitcoin_common_a-interpreter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitcoin_common_a-interpreter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libbitcoin_common_a-interpreter.obj: script/interpreter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-interpreter.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-interpreter.Tpo -c -o script/libbitcoin_common_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-interpreter.Tpo script/$(DEPDIR)/libbitcoin_common_a-interpreter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitcoin_common_a-interpreter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`

script/libbitcoin_common_a-script.o: script/script.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-script.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-script.Tpo -c -o script/libbitcoin_common_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-script.Tpo script/$(DEPDIR)/libbitcoin_common_a-script.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/script.cpp' object='script/libbitcoin_common_a-script.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libbitcoin_common_a-script.obj: script/script.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-script.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-script.Tpo -c -o script/libbitcoin_common_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-script.Tpo script/$(DEPDIR)/libbitcoin_common_a-script.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/script.cpp' object='script/libbitcoin_common_a-script.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`

script/libbitcoin_common_a-script_ext.o: script/script_ext.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-script_ext.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-script_ext.Tpo -c -o script/libbitcoin_common_a-script_ext.o `test -f 'script/script_ext.cpp' || echo '$(srcdir)/'`script/script_ext.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-script_ext.Tpo script/$(DEPDIR)/libbitcoin_common_a-script_ext.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/script_ext.cpp' object='script/libbitcoin_common_a-script_ext.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-script_ext.o `test -f 'script/script_ext.cpp' || echo '$(srcdir)/'`script/script_ext.cpp

script/libbitcoin_common_a-script_ext.obj: script/script_ext.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-script_ext.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-script_ext.Tpo -c -o script/libbitcoin_common_a-script_ext.obj `if test -f 'script/script_ext.cpp'; then $(CYGPATH_W) 'script/script_ext.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_ext.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-script_ext.Tpo script/$(DEPDIR)/libbitcoin_common_a-script_ext.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/script_ext.cpp' object='script/libbitcoin_common_a-script_ext.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-script_ext.obj `if test -f 'script/script_ext.cpp'; then $(CYGPATH_W) 'script/script_ext.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_ext.cpp'; fi`

script/libbitcoin_common_a-script_error.o: script/script_error.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-script_error.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-script_error.Tpo -c -o script/libbitcoin_common_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-script_error.Tpo script/$(DEPDIR)/libbitcoin_common_a-script_error.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitcoin_common_a-script_error.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

script/libbitcoin_common_a-script_error.obj: script/script_error.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-script_error.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-script_error.Tpo -c -o script/libbitcoin_common_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-script_error.Tpo script/$(DEPDIR)/libbitcoin_common_a-script_error.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitcoin_common_a-script_error.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`

script/libbitcoin_common_a-sign.o: script/sign.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-sign.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo -c -o script/libbitcoin_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo script/$(DEPDIR)/libbitcoin_common_a-sign.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/sign.cpp' object='script/libbitcoin_common_a-sign.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp

script/libbitcoin_common_a-sign.obj: script/sign.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-sign.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo -c -o script/libbitcoin_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo script/$(DEPDIR)/libbitcoin_common_a-sign.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/sign.cpp' object='script/libbitcoin_common_a-sign.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`

script/libbitcoin_common_a-standard.o: script/standard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-standard.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo -c -o script/libbitcoin_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo script/$(DEPDIR)/libbitcoin_common_a-standard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/standard.cpp' object='script/libbitcoin_common_a-standard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp

script/libbitcoin_common_a-standard.obj: script/standard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-standard.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo -c -o script/libbitcoin_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo script/$(DEPDIR)/libbitcoin_common_a-standard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/standard.cpp' object='script/libbitcoin_common_a-standard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`

libbitcoin_common_a-transaction_builder.o: transaction_builder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-transaction_builder.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-transaction_builder.Tpo -c -o libbitcoin_common_a-transaction_builder.o `test -f 'transaction_builder.cpp' || echo '$(srcdir)/'`transaction_builder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-transaction_builder.Tpo $(DEPDIR)/libbitcoin_common_a-transaction_builder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='transaction_builder.cpp' object='libbitcoin_common_a-transaction_builder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-transaction_builder.o `test -f 'transaction_builder.cpp' || echo '$(srcdir)/'`transaction_builder.cpp

libbitcoin_common_a-transaction_builder.obj: transaction_builder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-transaction_builder.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-transaction_builder.Tpo -c -o libbitcoin_common_a-transaction_builder.obj `if test -f 'transaction_builder.cpp'; then $(CYGPATH_W) 'transaction_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/transaction_builder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-transaction_builder.Tpo $(DEPDIR)/libbitcoin_common_a-transaction_builder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='transaction_builder.cpp' object='libbitcoin_common_a-transaction_builder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-transaction_builder.obj `if test -f 'transaction_builder.cpp'; then $(CYGPATH_W) 'transaction_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/transaction_builder.cpp'; fi`

cc/libbitcoin_common_a-CCtokenutils.o: cc/CCtokenutils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_common_a-CCtokenutils.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_common_a-CCtokenutils.Tpo -c -o cc/libbitcoin_common_a-CCtokenutils.o `test -f 'cc/CCtokenutils.cpp' || echo '$(srcdir)/'`cc/CCtokenutils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_common_a-CCtokenutils.Tpo cc/$(DEPDIR)/libbitcoin_common_a-CCtokenutils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCtokenutils.cpp' object='cc/libbitcoin_common_a-CCtokenutils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_common_a-CCtokenutils.o `test -f 'cc/CCtokenutils.cpp' || echo '$(srcdir)/'`cc/CCtokenutils.cpp

cc/libbitcoin_common_a-CCtokenutils.obj: cc/CCtokenutils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_common_a-CCtokenutils.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_common_a-CCtokenutils.Tpo -c -o cc/libbitcoin_common_a-CCtokenutils.obj `if test -f 'cc/CCtokenutils.cpp'; then $(CYGPATH_W) 'cc/CCtokenutils.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCtokenutils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_common_a-CCtokenutils.Tpo cc/$(DEPDIR)/libbitcoin_common_a-CCtokenutils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCtokenutils.cpp' object='cc/libbitcoin_common_a-CCtokenutils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_common_a-CCtokenutils.obj `if test -f 'cc/CCtokenutils.cpp'; then $(CYGPATH_W) 'cc/CCtokenutils.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCtokenutils.cpp'; fi`

cc/libbitcoin_common_a-CCutilbits.o: cc/CCutilbits.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_common_a-CCutilbits.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_common_a-CCutilbits.Tpo -c -o cc/libbitcoin_common_a-CCutilbits.o `test -f 'cc/CCutilbits.cpp' || echo '$(srcdir)/'`cc/CCutilbits.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_common_a-CCutilbits.Tpo cc/$(DEPDIR)/libbitcoin_common_a-CCutilbits.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCutilbits.cpp' object='cc/libbitcoin_common_a-CCutilbits.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_common_a-CCutilbits.o `test -f 'cc/CCutilbits.cpp' || echo '$(srcdir)/'`cc/CCutilbits.cpp

cc/libbitcoin_common_a-CCutilbits.obj: cc/CCutilbits.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_common_a-CCutilbits.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_common_a-CCutilbits.Tpo -c -o cc/libbitcoin_common_a-CCutilbits.obj `if test -f 'cc/CCutilbits.cpp'; then $(CYGPATH_W) 'cc/CCutilbits.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCutilbits.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_common_a-CCutilbits.Tpo cc/$(DEPDIR)/libbitcoin_common_a-CCutilbits.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCutilbits.cpp' object='cc/libbitcoin_common_a-CCutilbits.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_common_a-CCutilbits.obj `if test -f 'cc/CCutilbits.cpp'; then $(CYGPATH_W) 'cc/CCutilbits.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCutilbits.cpp'; fi`

amqp/libbitcoin_proton_a-amqpabstractnotifier.o: amqp/amqpabstractnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -MT amqp/libbitcoin_proton_a-amqpabstractnotifier.o -MD -MP -MF amqp/$(DEPDIR)/libbitcoin_proton_a-amqpabstractnotifier.Tpo -c -o amqp/libbitcoin_proton_a-amqpabstractnotifier.o `test -f 'amqp/amqpabstractnotifier.cpp' || echo '$(srcdir)/'`amqp/amqpabstractnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libbitcoin_proton_a-amqpabstractnotifier.Tpo amqp/$(DEPDIR)/libbitcoin_proton_a-amqpabstractnotifier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='amqp/amqpabstractnotifier.cpp' object='amqp/libbitcoin_proton_a-amqpabstractnotifier.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libbitcoin_proton_a-amqpabstractnotifier.o `test -f 'amqp/amqpabstractnotifier.cpp' || echo '$(srcdir)/'`amqp/amqpabstractnotifier.cpp

amqp/libbitcoin_proton_a-amqpabstractnotifier.obj: amqp/amqpabstractnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -MT amqp/libbitcoin_proton_a-amqpabstractnotifier.obj -MD -MP -MF amqp/$(DEPDIR)/libbitcoin_proton_a-amqpabstractnotifier.Tpo -c -o amqp/libbitcoin_proton_a-amqpabstractnotifier.obj `if test -f 'amqp/amqpabstractnotifier.cpp'; then $(CYGPATH_W) 'amqp/amqpabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqpabstractnotifier.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libbitcoin_proton_a-amqpabstractnotifier.Tpo amqp/$(DEPDIR)/libbitcoin_proton_a-amqpabstractnotifier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='amqp/amqpabstractnotifier.cpp' object='amqp/libbitcoin_proton_a-amqpabstractnotifier.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libbitcoin_proton_a-amqpabstractnotifier.obj `if test -f 'amqp/amqpabstractnotifier.cpp'; then $(CYGPATH_W) 'amqp/amqpabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqpabstractnotifier.cpp'; fi`

amqp/libbitcoin_proton_a-amqpnotificationinterface.o: amqp/amqpnotificationinterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -MT amqp/libbitcoin_proton_a-amqpnotificationinterface.o -MD -MP -MF amqp/$(DEPDIR)/libbitcoin_proton_a-amqpnotificationinterface.Tpo -c -o amqp/libbitcoin_proton_a-amqpnotificationinterface.o `test -f 'amqp/amqpnotificationinterface.cpp' || echo '$(srcdir)/'`amqp/amqpnotificationinterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libbitcoin_proton_a-amqpnotificationinterface.Tpo amqp/$(DEPDIR)/libbitcoin_proton_a-amqpnotificationinterface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='amqp/amqpnotificationinterface.cpp' object='amqp/libbitcoin_proton_a-amqpnotificationinterface.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libbitcoin_proton_a-amqpnotificationinterface.o `test -f 'amqp/amqpnotificationinterface.cpp' || echo '$(srcdir)/'`amqp/amqpnotificationinterface.cpp

amqp/libbitcoin_proton_a-amqpnotificationinterface.obj: amqp/amqpnotificationinterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -MT amqp/libbitcoin_proton_a-amqpnotificationinterface.obj -MD -MP -MF amqp/$(DEPDIR)/libbitcoin_proton_a-amqpnotificationinterface.Tpo -c -o amqp/libbitcoin_proton_a-amqpnotificationinterface.obj `if test -f 'amqp/amqpnotificationinterface.cpp'; then $(CYGPATH_W) 'amqp/amqpnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqpnotificationinterface.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libbitcoin_proton_a-amqpnotificationinterface.Tpo amqp/$(DEPDIR)/libbitcoin_proton_a-amqpnotificationinterface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='amqp/amqpnotificationinterface.cpp' object='amqp/libbitcoin_proton_a-amqpnotificationinterface.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libbitcoin_proton_a-amqpnotificationinterface.obj `if test -f 'amqp/amqpnotificationinterface.cpp'; then $(CYGPATH_W) 'amqp/amqpnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqpnotificationinterface.cpp'; fi`

amqp/libbitcoin_proton_a-amqppublishnotifier.o: amqp/amqppublishnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -MT amqp/libbitcoin_proton_a-amqppublishnotifier.o -MD -MP -MF amqp/$(DEPDIR)/libbitcoin_proton_a-amqppublishnotifier.Tpo -c -o amqp/libbitcoin_proton_a-amqppublishnotifier.o `test -f 'amqp/amqppublishnotifier.cpp' || echo '$(srcdir)/'`amqp/amqppublishnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libbitcoin_proton_a-amqppublishnotifier.Tpo amqp/$(DEPDIR)/libbitcoin_proton_a-amqppublishnotifier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='amqp/amqppublishnotifier.cpp' object='amqp/libbitcoin_proton_a-amqppublishnotifier.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libbitcoin_proton_a-amqppublishnotifier.o `test -f 'amqp/amqppublishnotifier.cpp' || echo '$(srcdir)/'`amqp/amqppublishnotifier.cpp

amqp/libbitcoin_proton_a-amqppublishnotifier.obj: amqp/amqppublishnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -MT amqp/libbitcoin_proton_a-amqppublishnotifier.obj -MD -MP -MF amqp/$(DEPDIR)/libbitcoin_proton_a-amqppublishnotifier.Tpo -c -o amqp/libbitcoin_proton_a-amqppublishnotifier.obj `if test -f 'amqp/amqppublishnotifier.cpp'; then $(CYGPATH_W) 'amqp/amqppublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqppublishnotifier.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libbitcoin_proton_a-amqppublishnotifier.Tpo amqp/$(DEPDIR)/libbitcoin_proton_a-amqppublishnotifier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='amqp/amqppublishnotifier.cpp' object='amqp/libbitcoin_proton_a-amqppublishnotifier.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_proton_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_proton_a_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libbitcoin_proton_a-amqppublishnotifier.obj `if test -f 'amqp/amqppublishnotifier.cpp'; then $(CYGPATH_W) 'amqp/amqppublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqppublishnotifier.cpp'; fi`

libbitcoin_server_a-sendalert.o: sendalert.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-sendalert.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-sendalert.Tpo -c -o libbitcoin_server_a-sendalert.o `test -f 'sendalert.cpp' || echo '$(srcdir)/'`sendalert.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-sendalert.Tpo $(DEPDIR)/libbitcoin_server_a-sendalert.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='sendalert.cpp' object='libbitcoin_server_a-sendalert.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-sendalert.o `test -f 'sendalert.cpp' || echo '$(srcdir)/'`sendalert.cpp

libbitcoin_server_a-sendalert.obj: sendalert.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-sendalert.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-sendalert.Tpo -c -o libbitcoin_server_a-sendalert.obj `if test -f 'sendalert.cpp'; then $(CYGPATH_W) 'sendalert.cpp'; else $(CYGPATH_W) '$(srcdir)/sendalert.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-sendalert.Tpo $(DEPDIR)/libbitcoin_server_a-sendalert.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='sendalert.cpp' object='libbitcoin_server_a-sendalert.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-sendalert.obj `if test -f 'sendalert.cpp'; then $(CYGPATH_W) 'sendalert.cpp'; else $(CYGPATH_W) '$(srcdir)/sendalert.cpp'; fi`

libbitcoin_server_a-addrman.o: addrman.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-addrman.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-addrman.Tpo -c -o libbitcoin_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-addrman.Tpo $(DEPDIR)/libbitcoin_server_a-addrman.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='addrman.cpp' object='libbitcoin_server_a-addrman.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp

libbitcoin_server_a-addrman.obj: addrman.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-addrman.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-addrman.Tpo -c -o libbitcoin_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-addrman.Tpo $(DEPDIR)/libbitcoin_server_a-addrman.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='addrman.cpp' object='libbitcoin_server_a-addrman.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`

libbitcoin_server_a-alert.o: alert.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-alert.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-alert.Tpo -c -o libbitcoin_server_a-alert.o `test -f 'alert.cpp' || echo '$(srcdir)/'`alert.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-alert.Tpo $(DEPDIR)/libbitcoin_server_a-alert.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='alert.cpp' object='libbitcoin_server_a-alert.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-alert.o `test -f 'alert.cpp' || echo '$(srcdir)/'`alert.cpp

libbitcoin_server_a-alert.obj: alert.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-alert.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-alert.Tpo -c -o libbitcoin_server_a-alert.obj `if test -f 'alert.cpp'; then $(CYGPATH_W) 'alert.cpp'; else $(CYGPATH_W) '$(srcdir)/alert.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-alert.Tpo $(DEPDIR)/libbitcoin_server_a-alert.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='alert.cpp' object='libbitcoin_server_a-alert.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-alert.obj `if test -f 'alert.cpp'; then $(CYGPATH_W) 'alert.cpp'; else $(CYGPATH_W) '$(srcdir)/alert.cpp'; fi`

libbitcoin_server_a-asyncrpcoperation.o: asyncrpcoperation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-asyncrpcoperation.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-asyncrpcoperation.Tpo -c -o libbitcoin_server_a-asyncrpcoperation.o `test -f 'asyncrpcoperation.cpp' || echo '$(srcdir)/'`asyncrpcoperation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-asyncrpcoperation.Tpo $(DEPDIR)/libbitcoin_server_a-asyncrpcoperation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asyncrpcoperation.cpp' object='libbitcoin_server_a-asyncrpcoperation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-asyncrpcoperation.o `test -f 'asyncrpcoperation.cpp' || echo '$(srcdir)/'`asyncrpcoperation.cpp

libbitcoin_server_a-asyncrpcoperation.obj: asyncrpcoperation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-asyncrpcoperation.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-asyncrpcoperation.Tpo -c -o libbitcoin_server_a-asyncrpcoperation.obj `if test -f 'asyncrpcoperation.cpp'; then $(CYGPATH_W) 'asyncrpcoperation.cpp'; else $(CYGPATH_W) '$(srcdir)/asyncrpcoperation.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-asyncrpcoperation.Tpo $(DEPDIR)/libbitcoin_server_a-asyncrpcoperation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asyncrpcoperation.cpp' object='libbitcoin_server_a-asyncrpcoperation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-asyncrpcoperation.obj `if test -f 'asyncrpcoperation.cpp'; then $(CYGPATH_W) 'asyncrpcoperation.cpp'; else $(CYGPATH_W) '$(srcdir)/asyncrpcoperation.cpp'; fi`

libbitcoin_server_a-asyncrpcqueue.o: asyncrpcqueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-asyncrpcqueue.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-asyncrpcqueue.Tpo -c -o libbitcoin_server_a-asyncrpcqueue.o `test -f 'asyncrpcqueue.cpp' || echo '$(srcdir)/'`asyncrpcqueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-asyncrpcqueue.Tpo $(DEPDIR)/libbitcoin_server_a-asyncrpcqueue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asyncrpcqueue.cpp' object='libbitcoin_server_a-asyncrpcqueue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-asyncrpcqueue.o `test -f 'asyncrpcqueue.cpp' || echo '$(srcdir)/'`asyncrpcqueue.cpp

libbitcoin_server_a-asyncrpcqueue.obj: asyncrpcqueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-asyncrpcqueue.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-asyncrpcqueue.Tpo -c -o libbitcoin_server_a-asyncrpcqueue.obj `if test -f 'asyncrpcqueue.cpp'; then $(CYGPATH_W) 'asyncrpcqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/asyncrpcqueue.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-asyncrpcqueue.Tpo $(DEPDIR)/libbitcoin_server_a-asyncrpcqueue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='asyncrpcqueue.cpp' object='libbitcoin_server_a-asyncrpcqueue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-asyncrpcqueue.obj `if test -f 'asyncrpcqueue.cpp'; then $(CYGPATH_W) 'asyncrpcqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/asyncrpcqueue.cpp'; fi`

libbitcoin_server_a-bloom.o: bloom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bloom.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bloom.Tpo -c -o libbitcoin_server_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bloom.Tpo $(DEPDIR)/libbitcoin_server_a-bloom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bloom.cpp' object='libbitcoin_server_a-bloom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpp

libbitcoin_server_a-bloom.obj: bloom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bloom.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bloom.Tpo -c -o libbitcoin_server_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bloom.Tpo $(DEPDIR)/libbitcoin_server_a-bloom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bloom.cpp' object='libbitcoin_server_a-bloom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`

cc/libbitcoin_server_a-eval.o: cc/eval.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-eval.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-eval.Tpo -c -o cc/libbitcoin_server_a-eval.o `test -f 'cc/eval.cpp' || echo '$(srcdir)/'`cc/eval.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-eval.Tpo cc/$(DEPDIR)/libbitcoin_server_a-eval.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/eval.cpp' object='cc/libbitcoin_server_a-eval.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-eval.o `test -f 'cc/eval.cpp' || echo '$(srcdir)/'`cc/eval.cpp

cc/libbitcoin_server_a-eval.obj: cc/eval.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-eval.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-eval.Tpo -c -o cc/libbitcoin_server_a-eval.obj `if test -f 'cc/eval.cpp'; then $(CYGPATH_W) 'cc/eval.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/eval.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-eval.Tpo cc/$(DEPDIR)/libbitcoin_server_a-eval.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/eval.cpp' object='cc/libbitcoin_server_a-eval.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-eval.obj `if test -f 'cc/eval.cpp'; then $(CYGPATH_W) 'cc/eval.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/eval.cpp'; fi`

cc/libbitcoin_server_a-import.o: cc/import.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-import.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-import.Tpo -c -o cc/libbitcoin_server_a-import.o `test -f 'cc/import.cpp' || echo '$(srcdir)/'`cc/import.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-import.Tpo cc/$(DEPDIR)/libbitcoin_server_a-import.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/import.cpp' object='cc/libbitcoin_server_a-import.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-import.o `test -f 'cc/import.cpp' || echo '$(srcdir)/'`cc/import.cpp

cc/libbitcoin_server_a-import.obj: cc/import.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-import.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-import.Tpo -c -o cc/libbitcoin_server_a-import.obj `if test -f 'cc/import.cpp'; then $(CYGPATH_W) 'cc/import.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/import.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-import.Tpo cc/$(DEPDIR)/libbitcoin_server_a-import.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/import.cpp' object='cc/libbitcoin_server_a-import.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-import.obj `if test -f 'cc/import.cpp'; then $(CYGPATH_W) 'cc/import.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/import.cpp'; fi`

cc/libbitcoin_server_a-importgateway.o: cc/importgateway.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-importgateway.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-importgateway.Tpo -c -o cc/libbitcoin_server_a-importgateway.o `test -f 'cc/importgateway.cpp' || echo '$(srcdir)/'`cc/importgateway.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-importgateway.Tpo cc/$(DEPDIR)/libbitcoin_server_a-importgateway.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/importgateway.cpp' object='cc/libbitcoin_server_a-importgateway.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-importgateway.o `test -f 'cc/importgateway.cpp' || echo '$(srcdir)/'`cc/importgateway.cpp

cc/libbitcoin_server_a-importgateway.obj: cc/importgateway.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-importgateway.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-importgateway.Tpo -c -o cc/libbitcoin_server_a-importgateway.obj `if test -f 'cc/importgateway.cpp'; then $(CYGPATH_W) 'cc/importgateway.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/importgateway.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-importgateway.Tpo cc/$(DEPDIR)/libbitcoin_server_a-importgateway.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/importgateway.cpp' object='cc/libbitcoin_server_a-importgateway.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-importgateway.obj `if test -f 'cc/importgateway.cpp'; then $(CYGPATH_W) 'cc/importgateway.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/importgateway.cpp'; fi`

cc/libbitcoin_server_a-CCassetsCore.o: cc/CCassetsCore.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-CCassetsCore.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-CCassetsCore.Tpo -c -o cc/libbitcoin_server_a-CCassetsCore.o `test -f 'cc/CCassetsCore.cpp' || echo '$(srcdir)/'`cc/CCassetsCore.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-CCassetsCore.Tpo cc/$(DEPDIR)/libbitcoin_server_a-CCassetsCore.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCassetsCore.cpp' object='cc/libbitcoin_server_a-CCassetsCore.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-CCassetsCore.o `test -f 'cc/CCassetsCore.cpp' || echo '$(srcdir)/'`cc/CCassetsCore.cpp

cc/libbitcoin_server_a-CCassetsCore.obj: cc/CCassetsCore.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-CCassetsCore.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-CCassetsCore.Tpo -c -o cc/libbitcoin_server_a-CCassetsCore.obj `if test -f 'cc/CCassetsCore.cpp'; then $(CYGPATH_W) 'cc/CCassetsCore.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCassetsCore.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-CCassetsCore.Tpo cc/$(DEPDIR)/libbitcoin_server_a-CCassetsCore.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCassetsCore.cpp' object='cc/libbitcoin_server_a-CCassetsCore.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-CCassetsCore.obj `if test -f 'cc/CCassetsCore.cpp'; then $(CYGPATH_W) 'cc/CCassetsCore.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCassetsCore.cpp'; fi`

cc/libbitcoin_server_a-CCcustom.o: cc/CCcustom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-CCcustom.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-CCcustom.Tpo -c -o cc/libbitcoin_server_a-CCcustom.o `test -f 'cc/CCcustom.cpp' || echo '$(srcdir)/'`cc/CCcustom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-CCcustom.Tpo cc/$(DEPDIR)/libbitcoin_server_a-CCcustom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCcustom.cpp' object='cc/libbitcoin_server_a-CCcustom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-CCcustom.o `test -f 'cc/CCcustom.cpp' || echo '$(srcdir)/'`cc/CCcustom.cpp

cc/libbitcoin_server_a-CCcustom.obj: cc/CCcustom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-CCcustom.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-CCcustom.Tpo -c -o cc/libbitcoin_server_a-CCcustom.obj `if test -f 'cc/CCcustom.cpp'; then $(CYGPATH_W) 'cc/CCcustom.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCcustom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-CCcustom.Tpo cc/$(DEPDIR)/libbitcoin_server_a-CCcustom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCcustom.cpp' object='cc/libbitcoin_server_a-CCcustom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-CCcustom.obj `if test -f 'cc/CCcustom.cpp'; then $(CYGPATH_W) 'cc/CCcustom.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCcustom.cpp'; fi`

cc/libbitcoin_server_a-CCtx.o: cc/CCtx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-CCtx.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-CCtx.Tpo -c -o cc/libbitcoin_server_a-CCtx.o `test -f 'cc/CCtx.cpp' || echo '$(srcdir)/'`cc/CCtx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-CCtx.Tpo cc/$(DEPDIR)/libbitcoin_server_a-CCtx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCtx.cpp' object='cc/libbitcoin_server_a-CCtx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-CCtx.o `test -f 'cc/CCtx.cpp' || echo '$(srcdir)/'`cc/CCtx.cpp

cc/libbitcoin_server_a-CCtx.obj: cc/CCtx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-CCtx.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-CCtx.Tpo -c -o cc/libbitcoin_server_a-CCtx.obj `if test -f 'cc/CCtx.cpp'; then $(CYGPATH_W) 'cc/CCtx.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCtx.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-CCtx.Tpo cc/$(DEPDIR)/libbitcoin_server_a-CCtx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCtx.cpp' object='cc/libbitcoin_server_a-CCtx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-CCtx.obj `if test -f 'cc/CCtx.cpp'; then $(CYGPATH_W) 'cc/CCtx.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCtx.cpp'; fi`

cc/libbitcoin_server_a-CCutils.o: cc/CCutils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-CCutils.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-CCutils.Tpo -c -o cc/libbitcoin_server_a-CCutils.o `test -f 'cc/CCutils.cpp' || echo '$(srcdir)/'`cc/CCutils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-CCutils.Tpo cc/$(DEPDIR)/libbitcoin_server_a-CCutils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCutils.cpp' object='cc/libbitcoin_server_a-CCutils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-CCutils.o `test -f 'cc/CCutils.cpp' || echo '$(srcdir)/'`cc/CCutils.cpp

cc/libbitcoin_server_a-CCutils.obj: cc/CCutils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-CCutils.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-CCutils.Tpo -c -o cc/libbitcoin_server_a-CCutils.obj `if test -f 'cc/CCutils.cpp'; then $(CYGPATH_W) 'cc/CCutils.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCutils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-CCutils.Tpo cc/$(DEPDIR)/libbitcoin_server_a-CCutils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCutils.cpp' object='cc/libbitcoin_server_a-CCutils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-CCutils.obj `if test -f 'cc/CCutils.cpp'; then $(CYGPATH_W) 'cc/CCutils.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCutils.cpp'; fi`

cc/libbitcoin_server_a-CCtokens.o: cc/CCtokens.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-CCtokens.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-CCtokens.Tpo -c -o cc/libbitcoin_server_a-CCtokens.o `test -f 'cc/CCtokens.cpp' || echo '$(srcdir)/'`cc/CCtokens.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-CCtokens.Tpo cc/$(DEPDIR)/libbitcoin_server_a-CCtokens.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCtokens.cpp' object='cc/libbitcoin_server_a-CCtokens.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-CCtokens.o `test -f 'cc/CCtokens.cpp' || echo '$(srcdir)/'`cc/CCtokens.cpp

cc/libbitcoin_server_a-CCtokens.obj: cc/CCtokens.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-CCtokens.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-CCtokens.Tpo -c -o cc/libbitcoin_server_a-CCtokens.obj `if test -f 'cc/CCtokens.cpp'; then $(CYGPATH_W) 'cc/CCtokens.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCtokens.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-CCtokens.Tpo cc/$(DEPDIR)/libbitcoin_server_a-CCtokens.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCtokens.cpp' object='cc/libbitcoin_server_a-CCtokens.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-CCtokens.obj `if test -f 'cc/CCtokens.cpp'; then $(CYGPATH_W) 'cc/CCtokens.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCtokens.cpp'; fi`

cc/libbitcoin_server_a-assets.o: cc/assets.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-assets.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-assets.Tpo -c -o cc/libbitcoin_server_a-assets.o `test -f 'cc/assets.cpp' || echo '$(srcdir)/'`cc/assets.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-assets.Tpo cc/$(DEPDIR)/libbitcoin_server_a-assets.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/assets.cpp' object='cc/libbitcoin_server_a-assets.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-assets.o `test -f 'cc/assets.cpp' || echo '$(srcdir)/'`cc/assets.cpp

cc/libbitcoin_server_a-assets.obj: cc/assets.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-assets.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-assets.Tpo -c -o cc/libbitcoin_server_a-assets.obj `if test -f 'cc/assets.cpp'; then $(CYGPATH_W) 'cc/assets.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/assets.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-assets.Tpo cc/$(DEPDIR)/libbitcoin_server_a-assets.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/assets.cpp' object='cc/libbitcoin_server_a-assets.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-assets.obj `if test -f 'cc/assets.cpp'; then $(CYGPATH_W) 'cc/assets.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/assets.cpp'; fi`

cc/libbitcoin_server_a-faucet.o: cc/faucet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-faucet.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-faucet.Tpo -c -o cc/libbitcoin_server_a-faucet.o `test -f 'cc/faucet.cpp' || echo '$(srcdir)/'`cc/faucet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-faucet.Tpo cc/$(DEPDIR)/libbitcoin_server_a-faucet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/faucet.cpp' object='cc/libbitcoin_server_a-faucet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-faucet.o `test -f 'cc/faucet.cpp' || echo '$(srcdir)/'`cc/faucet.cpp

cc/libbitcoin_server_a-faucet.obj: cc/faucet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-faucet.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-faucet.Tpo -c -o cc/libbitcoin_server_a-faucet.obj `if test -f 'cc/faucet.cpp'; then $(CYGPATH_W) 'cc/faucet.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/faucet.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-faucet.Tpo cc/$(DEPDIR)/libbitcoin_server_a-faucet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/faucet.cpp' object='cc/libbitcoin_server_a-faucet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-faucet.obj `if test -f 'cc/faucet.cpp'; then $(CYGPATH_W) 'cc/faucet.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/faucet.cpp'; fi`

cc/libbitcoin_server_a-rewards.o: cc/rewards.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-rewards.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-rewards.Tpo -c -o cc/libbitcoin_server_a-rewards.o `test -f 'cc/rewards.cpp' || echo '$(srcdir)/'`cc/rewards.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-rewards.Tpo cc/$(DEPDIR)/libbitcoin_server_a-rewards.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/rewards.cpp' object='cc/libbitcoin_server_a-rewards.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-rewards.o `test -f 'cc/rewards.cpp' || echo '$(srcdir)/'`cc/rewards.cpp

cc/libbitcoin_server_a-rewards.obj: cc/rewards.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-rewards.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-rewards.Tpo -c -o cc/libbitcoin_server_a-rewards.obj `if test -f 'cc/rewards.cpp'; then $(CYGPATH_W) 'cc/rewards.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/rewards.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-rewards.Tpo cc/$(DEPDIR)/libbitcoin_server_a-rewards.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/rewards.cpp' object='cc/libbitcoin_server_a-rewards.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-rewards.obj `if test -f 'cc/rewards.cpp'; then $(CYGPATH_W) 'cc/rewards.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/rewards.cpp'; fi`

cc/libbitcoin_server_a-dice.o: cc/dice.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-dice.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-dice.Tpo -c -o cc/libbitcoin_server_a-dice.o `test -f 'cc/dice.cpp' || echo '$(srcdir)/'`cc/dice.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-dice.Tpo cc/$(DEPDIR)/libbitcoin_server_a-dice.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/dice.cpp' object='cc/libbitcoin_server_a-dice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-dice.o `test -f 'cc/dice.cpp' || echo '$(srcdir)/'`cc/dice.cpp

cc/libbitcoin_server_a-dice.obj: cc/dice.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-dice.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-dice.Tpo -c -o cc/libbitcoin_server_a-dice.obj `if test -f 'cc/dice.cpp'; then $(CYGPATH_W) 'cc/dice.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/dice.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-dice.Tpo cc/$(DEPDIR)/libbitcoin_server_a-dice.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/dice.cpp' object='cc/libbitcoin_server_a-dice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-dice.obj `if test -f 'cc/dice.cpp'; then $(CYGPATH_W) 'cc/dice.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/dice.cpp'; fi`

cc/libbitcoin_server_a-lotto.o: cc/lotto.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-lotto.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-lotto.Tpo -c -o cc/libbitcoin_server_a-lotto.o `test -f 'cc/lotto.cpp' || echo '$(srcdir)/'`cc/lotto.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-lotto.Tpo cc/$(DEPDIR)/libbitcoin_server_a-lotto.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/lotto.cpp' object='cc/libbitcoin_server_a-lotto.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-lotto.o `test -f 'cc/lotto.cpp' || echo '$(srcdir)/'`cc/lotto.cpp

cc/libbitcoin_server_a-lotto.obj: cc/lotto.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-lotto.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-lotto.Tpo -c -o cc/libbitcoin_server_a-lotto.obj `if test -f 'cc/lotto.cpp'; then $(CYGPATH_W) 'cc/lotto.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/lotto.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-lotto.Tpo cc/$(DEPDIR)/libbitcoin_server_a-lotto.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/lotto.cpp' object='cc/libbitcoin_server_a-lotto.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-lotto.obj `if test -f 'cc/lotto.cpp'; then $(CYGPATH_W) 'cc/lotto.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/lotto.cpp'; fi`

cc/libbitcoin_server_a-fsm.o: cc/fsm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-fsm.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-fsm.Tpo -c -o cc/libbitcoin_server_a-fsm.o `test -f 'cc/fsm.cpp' || echo '$(srcdir)/'`cc/fsm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-fsm.Tpo cc/$(DEPDIR)/libbitcoin_server_a-fsm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/fsm.cpp' object='cc/libbitcoin_server_a-fsm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-fsm.o `test -f 'cc/fsm.cpp' || echo '$(srcdir)/'`cc/fsm.cpp

cc/libbitcoin_server_a-fsm.obj: cc/fsm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-fsm.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-fsm.Tpo -c -o cc/libbitcoin_server_a-fsm.obj `if test -f 'cc/fsm.cpp'; then $(CYGPATH_W) 'cc/fsm.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/fsm.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-fsm.Tpo cc/$(DEPDIR)/libbitcoin_server_a-fsm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/fsm.cpp' object='cc/libbitcoin_server_a-fsm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-fsm.obj `if test -f 'cc/fsm.cpp'; then $(CYGPATH_W) 'cc/fsm.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/fsm.cpp'; fi`

cc/libbitcoin_server_a-heir.o: cc/heir.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-heir.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-heir.Tpo -c -o cc/libbitcoin_server_a-heir.o `test -f 'cc/heir.cpp' || echo '$(srcdir)/'`cc/heir.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-heir.Tpo cc/$(DEPDIR)/libbitcoin_server_a-heir.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/heir.cpp' object='cc/libbitcoin_server_a-heir.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-heir.o `test -f 'cc/heir.cpp' || echo '$(srcdir)/'`cc/heir.cpp

cc/libbitcoin_server_a-heir.obj: cc/heir.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-heir.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-heir.Tpo -c -o cc/libbitcoin_server_a-heir.obj `if test -f 'cc/heir.cpp'; then $(CYGPATH_W) 'cc/heir.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/heir.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-heir.Tpo cc/$(DEPDIR)/libbitcoin_server_a-heir.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/heir.cpp' object='cc/libbitcoin_server_a-heir.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-heir.obj `if test -f 'cc/heir.cpp'; then $(CYGPATH_W) 'cc/heir.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/heir.cpp'; fi`

cc/libbitcoin_server_a-oracles.o: cc/oracles.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-oracles.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-oracles.Tpo -c -o cc/libbitcoin_server_a-oracles.o `test -f 'cc/oracles.cpp' || echo '$(srcdir)/'`cc/oracles.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-oracles.Tpo cc/$(DEPDIR)/libbitcoin_server_a-oracles.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/oracles.cpp' object='cc/libbitcoin_server_a-oracles.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-oracles.o `test -f 'cc/oracles.cpp' || echo '$(srcdir)/'`cc/oracles.cpp

cc/libbitcoin_server_a-oracles.obj: cc/oracles.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-oracles.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-oracles.Tpo -c -o cc/libbitcoin_server_a-oracles.obj `if test -f 'cc/oracles.cpp'; then $(CYGPATH_W) 'cc/oracles.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/oracles.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-oracles.Tpo cc/$(DEPDIR)/libbitcoin_server_a-oracles.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/oracles.cpp' object='cc/libbitcoin_server_a-oracles.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-oracles.obj `if test -f 'cc/oracles.cpp'; then $(CYGPATH_W) 'cc/oracles.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/oracles.cpp'; fi`

cc/libbitcoin_server_a-prices.o: cc/prices.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-prices.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-prices.Tpo -c -o cc/libbitcoin_server_a-prices.o `test -f 'cc/prices.cpp' || echo '$(srcdir)/'`cc/prices.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-prices.Tpo cc/$(DEPDIR)/libbitcoin_server_a-prices.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/prices.cpp' object='cc/libbitcoin_server_a-prices.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-prices.o `test -f 'cc/prices.cpp' || echo '$(srcdir)/'`cc/prices.cpp

cc/libbitcoin_server_a-prices.obj: cc/prices.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-prices.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-prices.Tpo -c -o cc/libbitcoin_server_a-prices.obj `if test -f 'cc/prices.cpp'; then $(CYGPATH_W) 'cc/prices.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/prices.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-prices.Tpo cc/$(DEPDIR)/libbitcoin_server_a-prices.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/prices.cpp' object='cc/libbitcoin_server_a-prices.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-prices.obj `if test -f 'cc/prices.cpp'; then $(CYGPATH_W) 'cc/prices.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/prices.cpp'; fi`

cc/libbitcoin_server_a-pegs.o: cc/pegs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-pegs.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-pegs.Tpo -c -o cc/libbitcoin_server_a-pegs.o `test -f 'cc/pegs.cpp' || echo '$(srcdir)/'`cc/pegs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-pegs.Tpo cc/$(DEPDIR)/libbitcoin_server_a-pegs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/pegs.cpp' object='cc/libbitcoin_server_a-pegs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-pegs.o `test -f 'cc/pegs.cpp' || echo '$(srcdir)/'`cc/pegs.cpp

cc/libbitcoin_server_a-pegs.obj: cc/pegs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-pegs.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-pegs.Tpo -c -o cc/libbitcoin_server_a-pegs.obj `if test -f 'cc/pegs.cpp'; then $(CYGPATH_W) 'cc/pegs.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/pegs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-pegs.Tpo cc/$(DEPDIR)/libbitcoin_server_a-pegs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/pegs.cpp' object='cc/libbitcoin_server_a-pegs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-pegs.obj `if test -f 'cc/pegs.cpp'; then $(CYGPATH_W) 'cc/pegs.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/pegs.cpp'; fi`

cc/libbitcoin_server_a-marmara.o: cc/marmara.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-marmara.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-marmara.Tpo -c -o cc/libbitcoin_server_a-marmara.o `test -f 'cc/marmara.cpp' || echo '$(srcdir)/'`cc/marmara.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-marmara.Tpo cc/$(DEPDIR)/libbitcoin_server_a-marmara.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/marmara.cpp' object='cc/libbitcoin_server_a-marmara.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-marmara.o `test -f 'cc/marmara.cpp' || echo '$(srcdir)/'`cc/marmara.cpp

cc/libbitcoin_server_a-marmara.obj: cc/marmara.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-marmara.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-marmara.Tpo -c -o cc/libbitcoin_server_a-marmara.obj `if test -f 'cc/marmara.cpp'; then $(CYGPATH_W) 'cc/marmara.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/marmara.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-marmara.Tpo cc/$(DEPDIR)/libbitcoin_server_a-marmara.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/marmara.cpp' object='cc/libbitcoin_server_a-marmara.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-marmara.obj `if test -f 'cc/marmara.cpp'; then $(CYGPATH_W) 'cc/marmara.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/marmara.cpp'; fi`

cc/libbitcoin_server_a-payments.o: cc/payments.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-payments.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-payments.Tpo -c -o cc/libbitcoin_server_a-payments.o `test -f 'cc/payments.cpp' || echo '$(srcdir)/'`cc/payments.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-payments.Tpo cc/$(DEPDIR)/libbitcoin_server_a-payments.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/payments.cpp' object='cc/libbitcoin_server_a-payments.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-payments.o `test -f 'cc/payments.cpp' || echo '$(srcdir)/'`cc/payments.cpp

cc/libbitcoin_server_a-payments.obj: cc/payments.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-payments.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-payments.Tpo -c -o cc/libbitcoin_server_a-payments.obj `if test -f 'cc/payments.cpp'; then $(CYGPATH_W) 'cc/payments.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/payments.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-payments.Tpo cc/$(DEPDIR)/libbitcoin_server_a-payments.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/payments.cpp' object='cc/libbitcoin_server_a-payments.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-payments.obj `if test -f 'cc/payments.cpp'; then $(CYGPATH_W) 'cc/payments.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/payments.cpp'; fi`

cc/libbitcoin_server_a-gateways.o: cc/gateways.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-gateways.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-gateways.Tpo -c -o cc/libbitcoin_server_a-gateways.o `test -f 'cc/gateways.cpp' || echo '$(srcdir)/'`cc/gateways.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-gateways.Tpo cc/$(DEPDIR)/libbitcoin_server_a-gateways.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/gateways.cpp' object='cc/libbitcoin_server_a-gateways.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-gateways.o `test -f 'cc/gateways.cpp' || echo '$(srcdir)/'`cc/gateways.cpp

cc/libbitcoin_server_a-gateways.obj: cc/gateways.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-gateways.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-gateways.Tpo -c -o cc/libbitcoin_server_a-gateways.obj `if test -f 'cc/gateways.cpp'; then $(CYGPATH_W) 'cc/gateways.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/gateways.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-gateways.Tpo cc/$(DEPDIR)/libbitcoin_server_a-gateways.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/gateways.cpp' object='cc/libbitcoin_server_a-gateways.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-gateways.obj `if test -f 'cc/gateways.cpp'; then $(CYGPATH_W) 'cc/gateways.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/gateways.cpp'; fi`

cc/libbitcoin_server_a-channels.o: cc/channels.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-channels.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-channels.Tpo -c -o cc/libbitcoin_server_a-channels.o `test -f 'cc/channels.cpp' || echo '$(srcdir)/'`cc/channels.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-channels.Tpo cc/$(DEPDIR)/libbitcoin_server_a-channels.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/channels.cpp' object='cc/libbitcoin_server_a-channels.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-channels.o `test -f 'cc/channels.cpp' || echo '$(srcdir)/'`cc/channels.cpp

cc/libbitcoin_server_a-channels.obj: cc/channels.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-channels.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-channels.Tpo -c -o cc/libbitcoin_server_a-channels.obj `if test -f 'cc/channels.cpp'; then $(CYGPATH_W) 'cc/channels.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/channels.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-channels.Tpo cc/$(DEPDIR)/libbitcoin_server_a-channels.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/channels.cpp' object='cc/libbitcoin_server_a-channels.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-channels.obj `if test -f 'cc/channels.cpp'; then $(CYGPATH_W) 'cc/channels.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/channels.cpp'; fi`

cc/libbitcoin_server_a-auction.o: cc/auction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-auction.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-auction.Tpo -c -o cc/libbitcoin_server_a-auction.o `test -f 'cc/auction.cpp' || echo '$(srcdir)/'`cc/auction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-auction.Tpo cc/$(DEPDIR)/libbitcoin_server_a-auction.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/auction.cpp' object='cc/libbitcoin_server_a-auction.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-auction.o `test -f 'cc/auction.cpp' || echo '$(srcdir)/'`cc/auction.cpp

cc/libbitcoin_server_a-auction.obj: cc/auction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-auction.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-auction.Tpo -c -o cc/libbitcoin_server_a-auction.obj `if test -f 'cc/auction.cpp'; then $(CYGPATH_W) 'cc/auction.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/auction.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-auction.Tpo cc/$(DEPDIR)/libbitcoin_server_a-auction.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/auction.cpp' object='cc/libbitcoin_server_a-auction.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-auction.obj `if test -f 'cc/auction.cpp'; then $(CYGPATH_W) 'cc/auction.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/auction.cpp'; fi`

cc/libbitcoin_server_a-betprotocol.o: cc/betprotocol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-betprotocol.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-betprotocol.Tpo -c -o cc/libbitcoin_server_a-betprotocol.o `test -f 'cc/betprotocol.cpp' || echo '$(srcdir)/'`cc/betprotocol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-betprotocol.Tpo cc/$(DEPDIR)/libbitcoin_server_a-betprotocol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/betprotocol.cpp' object='cc/libbitcoin_server_a-betprotocol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-betprotocol.o `test -f 'cc/betprotocol.cpp' || echo '$(srcdir)/'`cc/betprotocol.cpp

cc/libbitcoin_server_a-betprotocol.obj: cc/betprotocol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_server_a-betprotocol.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_server_a-betprotocol.Tpo -c -o cc/libbitcoin_server_a-betprotocol.obj `if test -f 'cc/betprotocol.cpp'; then $(CYGPATH_W) 'cc/betprotocol.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/betprotocol.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_server_a-betprotocol.Tpo cc/$(DEPDIR)/libbitcoin_server_a-betprotocol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/betprotocol.cpp' object='cc/libbitcoin_server_a-betprotocol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_server_a-betprotocol.obj `if test -f 'cc/betprotocol.cpp'; then $(CYGPATH_W) 'cc/betprotocol.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/betprotocol.cpp'; fi`

libbitcoin_server_a-chain.o: chain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-chain.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-chain.Tpo -c -o libbitcoin_server_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-chain.Tpo $(DEPDIR)/libbitcoin_server_a-chain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='chain.cpp' object='libbitcoin_server_a-chain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp

libbitcoin_server_a-chain.obj: chain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-chain.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-chain.Tpo -c -o libbitcoin_server_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-chain.Tpo $(DEPDIR)/libbitcoin_server_a-chain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='chain.cpp' object='libbitcoin_server_a-chain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`

libbitcoin_server_a-checkpoints.o: checkpoints.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-checkpoints.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo -c -o libbitcoin_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo $(DEPDIR)/libbitcoin_server_a-checkpoints.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='checkpoints.cpp' object='libbitcoin_server_a-checkpoints.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpp

libbitcoin_server_a-checkpoints.obj: checkpoints.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-checkpoints.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo -c -o libbitcoin_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo $(DEPDIR)/libbitcoin_server_a-checkpoints.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='checkpoints.cpp' object='libbitcoin_server_a-checkpoints.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`

libbitcoin_server_a-crosschain.o: crosschain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-crosschain.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-crosschain.Tpo -c -o libbitcoin_server_a-crosschain.o `test -f 'crosschain.cpp' || echo '$(srcdir)/'`crosschain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-crosschain.Tpo $(DEPDIR)/libbitcoin_server_a-crosschain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crosschain.cpp' object='libbitcoin_server_a-crosschain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-crosschain.o `test -f 'crosschain.cpp' || echo '$(srcdir)/'`crosschain.cpp

libbitcoin_server_a-crosschain.obj: crosschain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-crosschain.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-crosschain.Tpo -c -o libbitcoin_server_a-crosschain.obj `if test -f 'crosschain.cpp'; then $(CYGPATH_W) 'crosschain.cpp'; else $(CYGPATH_W) '$(srcdir)/crosschain.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-crosschain.Tpo $(DEPDIR)/libbitcoin_server_a-crosschain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crosschain.cpp' object='libbitcoin_server_a-crosschain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-crosschain.obj `if test -f 'crosschain.cpp'; then $(CYGPATH_W) 'crosschain.cpp'; else $(CYGPATH_W) '$(srcdir)/crosschain.cpp'; fi`

libbitcoin_server_a-crosschain_authority.o: crosschain_authority.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-crosschain_authority.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-crosschain_authority.Tpo -c -o libbitcoin_server_a-crosschain_authority.o `test -f 'crosschain_authority.cpp' || echo '$(srcdir)/'`crosschain_authority.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-crosschain_authority.Tpo $(DEPDIR)/libbitcoin_server_a-crosschain_authority.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crosschain_authority.cpp' object='libbitcoin_server_a-crosschain_authority.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-crosschain_authority.o `test -f 'crosschain_authority.cpp' || echo '$(srcdir)/'`crosschain_authority.cpp

libbitcoin_server_a-crosschain_authority.obj: crosschain_authority.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-crosschain_authority.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-crosschain_authority.Tpo -c -o libbitcoin_server_a-crosschain_authority.obj `if test -f 'crosschain_authority.cpp'; then $(CYGPATH_W) 'crosschain_authority.cpp'; else $(CYGPATH_W) '$(srcdir)/crosschain_authority.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-crosschain_authority.Tpo $(DEPDIR)/libbitcoin_server_a-crosschain_authority.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crosschain_authority.cpp' object='libbitcoin_server_a-crosschain_authority.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-crosschain_authority.obj `if test -f 'crosschain_authority.cpp'; then $(CYGPATH_W) 'crosschain_authority.cpp'; else $(CYGPATH_W) '$(srcdir)/crosschain_authority.cpp'; fi`

crypto/libbitcoin_server_a-verus_hash.o: crypto/verus_hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_server_a-verus_hash.o -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_server_a-verus_hash.Tpo -c -o crypto/libbitcoin_server_a-verus_hash.o `test -f 'crypto/verus_hash.cpp' || echo '$(srcdir)/'`crypto/verus_hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_server_a-verus_hash.Tpo crypto/$(DEPDIR)/libbitcoin_server_a-verus_hash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/verus_hash.cpp' object='crypto/libbitcoin_server_a-verus_hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_server_a-verus_hash.o `test -f 'crypto/verus_hash.cpp' || echo '$(srcdir)/'`crypto/verus_hash.cpp

crypto/libbitcoin_server_a-verus_hash.obj: crypto/verus_hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_server_a-verus_hash.obj -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_server_a-verus_hash.Tpo -c -o crypto/libbitcoin_server_a-verus_hash.obj `if test -f 'crypto/verus_hash.cpp'; then $(CYGPATH_W) 'crypto/verus_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/verus_hash.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_server_a-verus_hash.Tpo crypto/$(DEPDIR)/libbitcoin_server_a-verus_hash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/verus_hash.cpp' object='crypto/libbitcoin_server_a-verus_hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_server_a-verus_hash.obj `if test -f 'crypto/verus_hash.cpp'; then $(CYGPATH_W) 'crypto/verus_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/verus_hash.cpp'; fi`

libbitcoin_server_a-deprecation.o: deprecation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-deprecation.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-deprecation.Tpo -c -o libbitcoin_server_a-deprecation.o `test -f 'deprecation.cpp' || echo '$(srcdir)/'`deprecation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-deprecation.Tpo $(DEPDIR)/libbitcoin_server_a-deprecation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='deprecation.cpp' object='libbitcoin_server_a-deprecation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-deprecation.o `test -f 'deprecation.cpp' || echo '$(srcdir)/'`deprecation.cpp

libbitcoin_server_a-deprecation.obj: deprecation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-deprecation.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-deprecation.Tpo -c -o libbitcoin_server_a-deprecation.obj `if test -f 'deprecation.cpp'; then $(CYGPATH_W) 'deprecation.cpp'; else $(CYGPATH_W) '$(srcdir)/deprecation.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-deprecation.Tpo $(DEPDIR)/libbitcoin_server_a-deprecation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='deprecation.cpp' object='libbitcoin_server_a-deprecation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-deprecation.obj `if test -f 'deprecation.cpp'; then $(CYGPATH_W) 'deprecation.cpp'; else $(CYGPATH_W) '$(srcdir)/deprecation.cpp'; fi`

libbitcoin_server_a-httprpc.o: httprpc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-httprpc.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-httprpc.Tpo -c -o libbitcoin_server_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-httprpc.Tpo $(DEPDIR)/libbitcoin_server_a-httprpc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='httprpc.cpp' object='libbitcoin_server_a-httprpc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp

libbitcoin_server_a-httprpc.obj: httprpc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-httprpc.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-httprpc.Tpo -c -o libbitcoin_server_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-httprpc.Tpo $(DEPDIR)/libbitcoin_server_a-httprpc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='httprpc.cpp' object='libbitcoin_server_a-httprpc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`

libbitcoin_server_a-httpserver.o: httpserver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-httpserver.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-httpserver.Tpo -c -o libbitcoin_server_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-httpserver.Tpo $(DEPDIR)/libbitcoin_server_a-httpserver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='httpserver.cpp' object='libbitcoin_server_a-httpserver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp

libbitcoin_server_a-httpserver.obj: httpserver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-httpserver.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-httpserver.Tpo -c -o libbitcoin_server_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-httpserver.Tpo $(DEPDIR)/libbitcoin_server_a-httpserver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='httpserver.cpp' object='libbitcoin_server_a-httpserver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`

libbitcoin_server_a-init.o: init.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-init.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-init.Tpo -c -o libbitcoin_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-init.Tpo $(DEPDIR)/libbitcoin_server_a-init.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='init.cpp' object='libbitcoin_server_a-init.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp

libbitcoin_server_a-init.obj: init.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-init.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-init.Tpo -c -o libbitcoin_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-init.Tpo $(DEPDIR)/libbitcoin_server_a-init.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='init.cpp' object='libbitcoin_server_a-init.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`

libbitcoin_server_a-dbwrapper.o: dbwrapper.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-dbwrapper.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-dbwrapper.Tpo -c -o libbitcoin_server_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-dbwrapper.Tpo $(DEPDIR)/libbitcoin_server_a-dbwrapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dbwrapper.cpp' object='libbitcoin_server_a-dbwrapper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp

libbitcoin_server_a-dbwrapper.obj: dbwrapper.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-dbwrapper.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-dbwrapper.Tpo -c -o libbitcoin_server_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-dbwrapper.Tpo $(DEPDIR)/libbitcoin_server_a-dbwrapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dbwrapper.cpp' object='libbitcoin_server_a-dbwrapper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`

libbitcoin_server_a-main.o: main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-main.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-main.Tpo -c -o libbitcoin_server_a-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-main.Tpo $(DEPDIR)/libbitcoin_server_a-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main.cpp' object='libbitcoin_server_a-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

libbitcoin_server_a-main.obj: main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-main.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-main.Tpo -c -o libbitcoin_server_a-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-main.Tpo $(DEPDIR)/libbitcoin_server_a-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main.cpp' object='libbitcoin_server_a-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

libbitcoin_server_a-merkleblock.o: merkleblock.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkleblock.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkleblock.Tpo -c -o libbitcoin_server_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkleblock.Tpo $(DEPDIR)/libbitcoin_server_a-merkleblock.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='merkleblock.cpp' object='libbitcoin_server_a-merkleblock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp

libbitcoin_server_a-merkleblock.obj: merkleblock.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkleblock.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkleblock.Tpo -c -o libbitcoin_server_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkleblock.Tpo $(DEPDIR)/libbitcoin_server_a-merkleblock.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='merkleblock.cpp' object='libbitcoin_server_a-merkleblock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`

libbitcoin_server_a-miner.o: miner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-miner.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-miner.Tpo -c -o libbitcoin_server_a-miner.o `test -f 'miner.cpp' || echo '$(srcdir)/'`miner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-miner.Tpo $(DEPDIR)/libbitcoin_server_a-miner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='miner.cpp' object='libbitcoin_server_a-miner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-miner.o `test -f 'miner.cpp' || echo '$(srcdir)/'`miner.cpp

libbitcoin_server_a-miner.obj: miner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-miner.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-miner.Tpo -c -o libbitcoin_server_a-miner.obj `if test -f 'miner.cpp'; then $(CYGPATH_W) 'miner.cpp'; else $(CYGPATH_W) '$(srcdir)/miner.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-miner.Tpo $(DEPDIR)/libbitcoin_server_a-miner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='miner.cpp' object='libbitcoin_server_a-miner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-miner.obj `if test -f 'miner.cpp'; then $(CYGPATH_W) 'miner.cpp'; else $(CYGPATH_W) '$(srcdir)/miner.cpp'; fi`

libbitcoin_server_a-net.o: net.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-net.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o libbitcoin_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-net.Tpo $(DEPDIR)/libbitcoin_server_a-net.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='net.cpp' object='libbitcoin_server_a-net.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp

libbitcoin_server_a-net.obj: net.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-net.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o libbitcoin_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-net.Tpo $(DEPDIR)/libbitcoin_server_a-net.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='net.cpp' object='libbitcoin_server_a-net.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`

libbitcoin_server_a-notaries_staked.o: notaries_staked.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-notaries_staked.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-notaries_staked.Tpo -c -o libbitcoin_server_a-notaries_staked.o `test -f 'notaries_staked.cpp' || echo '$(srcdir)/'`notaries_staked.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-notaries_staked.Tpo $(DEPDIR)/libbitcoin_server_a-notaries_staked.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='notaries_staked.cpp' object='libbitcoin_server_a-notaries_staked.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-notaries_staked.o `test -f 'notaries_staked.cpp' || echo '$(srcdir)/'`notaries_staked.cpp

libbitcoin_server_a-notaries_staked.obj: notaries_staked.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-notaries_staked.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-notaries_staked.Tpo -c -o libbitcoin_server_a-notaries_staked.obj `if test -f 'notaries_staked.cpp'; then $(CYGPATH_W) 'notaries_staked.cpp'; else $(CYGPATH_W) '$(srcdir)/notaries_staked.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-notaries_staked.Tpo $(DEPDIR)/libbitcoin_server_a-notaries_staked.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='notaries_staked.cpp' object='libbitcoin_server_a-notaries_staked.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-notaries_staked.obj `if test -f 'notaries_staked.cpp'; then $(CYGPATH_W) 'notaries_staked.cpp'; else $(CYGPATH_W) '$(srcdir)/notaries_staked.cpp'; fi`

libbitcoin_server_a-noui.o: noui.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-noui.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-noui.Tpo -c -o libbitcoin_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-noui.Tpo $(DEPDIR)/libbitcoin_server_a-noui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='noui.cpp' object='libbitcoin_server_a-noui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp

libbitcoin_server_a-noui.obj: noui.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-noui.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-noui.Tpo -c -o libbitcoin_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-noui.Tpo $(DEPDIR)/libbitcoin_server_a-noui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='noui.cpp' object='libbitcoin_server_a-noui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`

libbitcoin_server_a-notarisationdb.o: notarisationdb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-notarisationdb.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-notarisationdb.Tpo -c -o libbitcoin_server_a-notarisationdb.o `test -f 'notarisationdb.cpp' || echo '$(srcdir)/'`notarisationdb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-notarisationdb.Tpo $(DEPDIR)/libbitcoin_server_a-notarisationdb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='notarisationdb.cpp' object='libbitcoin_server_a-notarisationdb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-notarisationdb.o `test -f 'notarisationdb.cpp' || echo '$(srcdir)/'`notarisationdb.cpp

libbitcoin_server_a-notarisationdb.obj: notarisationdb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-notarisationdb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-notarisationdb.Tpo -c -o libbitcoin_server_a-notarisationdb.obj `if test -f 'notarisationdb.cpp'; then $(CYGPATH_W) 'notarisationdb.cpp'; else $(CYGPATH_W) '$(srcdir)/notarisationdb.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-notarisationdb.Tpo $(DEPDIR)/libbitcoin_server_a-notarisationdb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='notarisationdb.cpp' object='libbitcoin_server_a-notarisationdb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-notarisationdb.obj `if test -f 'notarisationdb.cpp'; then $(CYGPATH_W) 'notarisationdb.cpp'; else $(CYGPATH_W) '$(srcdir)/notarisationdb.cpp'; fi`

libbitcoin_server_a-paymentdisclosure.o: paymentdisclosure.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-paymentdisclosure.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-paymentdisclosure.Tpo -c -o libbitcoin_server_a-paymentdisclosure.o `test -f 'paymentdisclosure.cpp' || echo '$(srcdir)/'`paymentdisclosure.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-paymentdisclosure.Tpo $(DEPDIR)/libbitcoin_server_a-paymentdisclosure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='paymentdisclosure.cpp' object='libbitcoin_server_a-paymentdisclosure.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-paymentdisclosure.o `test -f 'paymentdisclosure.cpp' || echo '$(srcdir)/'`paymentdisclosure.cpp

libbitcoin_server_a-paymentdisclosure.obj: paymentdisclosure.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-paymentdisclosure.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-paymentdisclosure.Tpo -c -o libbitcoin_server_a-paymentdisclosure.obj `if test -f 'paymentdisclosure.cpp'; then $(CYGPATH_W) 'paymentdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosure.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-paymentdisclosure.Tpo $(DEPDIR)/libbitcoin_server_a-paymentdisclosure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='paymentdisclosure.cpp' object='libbitcoin_server_a-paymentdisclosure.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-paymentdisclosure.obj `if test -f 'paymentdisclosure.cpp'; then $(CYGPATH_W) 'paymentdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosure.cpp'; fi`

libbitcoin_server_a-paymentdisclosuredb.o: paymentdisclosuredb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-paymentdisclosuredb.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-paymentdisclosuredb.Tpo -c -o libbitcoin_server_a-paymentdisclosuredb.o `test -f 'paymentdisclosuredb.cpp' || echo '$(srcdir)/'`paymentdisclosuredb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-paymentdisclosuredb.Tpo $(DEPDIR)/libbitcoin_server_a-paymentdisclosuredb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='paymentdisclosuredb.cpp' object='libbitcoin_server_a-paymentdisclosuredb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-paymentdisclosuredb.o `test -f 'paymentdisclosuredb.cpp' || echo '$(srcdir)/'`paymentdisclosuredb.cpp

libbitcoin_server_a-paymentdisclosuredb.obj: paymentdisclosuredb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-paymentdisclosuredb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-paymentdisclosuredb.Tpo -c -o libbitcoin_server_a-paymentdisclosuredb.obj `if test -f 'paymentdisclosuredb.cpp'; then $(CYGPATH_W) 'paymentdisclosuredb.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosuredb.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-paymentdisclosuredb.Tpo $(DEPDIR)/libbitcoin_server_a-paymentdisclosuredb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='paymentdisclosuredb.cpp' object='libbitcoin_server_a-paymentdisclosuredb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-paymentdisclosuredb.obj `if test -f 'paymentdisclosuredb.cpp'; then $(CYGPATH_W) 'paymentdisclosuredb.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosuredb.cpp'; fi`

policy/libbitcoin_server_a-fees.o: policy/fees.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_server_a-fees.o -MD -MP -MF policy/$(DEPDIR)/libbitcoin_server_a-fees.Tpo -c -o policy/libbitcoin_server_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_server_a-fees.Tpo policy/$(DEPDIR)/libbitcoin_server_a-fees.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libbitcoin_server_a-fees.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_server_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp

policy/libbitcoin_server_a-fees.obj: policy/fees.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_server_a-fees.obj -MD -MP -MF policy/$(DEPDIR)/libbitcoin_server_a-fees.Tpo -c -o policy/libbitcoin_server_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_server_a-fees.Tpo policy/$(DEPDIR)/libbitcoin_server_a-fees.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libbitcoin_server_a-fees.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_server_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`

libbitcoin_server_a-pow.o: pow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-pow.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-pow.Tpo -c -o libbitcoin_server_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-pow.Tpo $(DEPDIR)/libbitcoin_server_a-pow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='pow.cpp' object='libbitcoin_server_a-pow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp

libbitcoin_server_a-pow.obj: pow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-pow.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-pow.Tpo -c -o libbitcoin_server_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-pow.Tpo $(DEPDIR)/libbitcoin_server_a-pow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='pow.cpp' object='libbitcoin_server_a-pow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`

libbitcoin_server_a-rest.o: rest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rest.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rest.Tpo -c -o libbitcoin_server_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rest.Tpo $(DEPDIR)/libbitcoin_server_a-rest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rest.cpp' object='libbitcoin_server_a-rest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp

libbitcoin_server_a-rest.obj: rest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rest.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rest.Tpo -c -o libbitcoin_server_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rest.Tpo $(DEPDIR)/libbitcoin_server_a-rest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rest.cpp' object='libbitcoin_server_a-rest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`

rpc/libbitcoin_server_a-blockchain.o: rpc/blockchain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-blockchain.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Tpo -c -o rpc/libbitcoin_server_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libbitcoin_server_a-blockchain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp

rpc/libbitcoin_server_a-blockchain.obj: rpc/blockchain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-blockchain.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Tpo -c -o rpc/libbitcoin_server_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libbitcoin_server_a-blockchain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`

rpc/libbitcoin_server_a-crosschain.o: rpc/crosschain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-crosschain.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-crosschain.Tpo -c -o rpc/libbitcoin_server_a-crosschain.o `test -f 'rpc/crosschain.cpp' || echo '$(srcdir)/'`rpc/crosschain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-crosschain.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-crosschain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/crosschain.cpp' object='rpc/libbitcoin_server_a-crosschain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-crosschain.o `test -f 'rpc/crosschain.cpp' || echo '$(srcdir)/'`rpc/crosschain.cpp

rpc/libbitcoin_server_a-crosschain.obj: rpc/crosschain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-crosschain.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-crosschain.Tpo -c -o rpc/libbitcoin_server_a-crosschain.obj `if test -f 'rpc/crosschain.cpp'; then $(CYGPATH_W) 'rpc/crosschain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/crosschain.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-crosschain.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-crosschain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/crosschain.cpp' object='rpc/libbitcoin_server_a-crosschain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-crosschain.obj `if test -f 'rpc/crosschain.cpp'; then $(CYGPATH_W) 'rpc/crosschain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/crosschain.cpp'; fi`

rpc/libbitcoin_server_a-mining.o: rpc/mining.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-mining.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-mining.Tpo -c -o rpc/libbitcoin_server_a-mining.o `test -f 'rpc/mining.cpp' || echo '$(srcdir)/'`rpc/mining.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-mining.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-mining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/mining.cpp' object='rpc/libbitcoin_server_a-mining.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-mining.o `test -f 'rpc/mining.cpp' || echo '$(srcdir)/'`rpc/mining.cpp

rpc/libbitcoin_server_a-mining.obj: rpc/mining.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-mining.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-mining.Tpo -c -o rpc/libbitcoin_server_a-mining.obj `if test -f 'rpc/mining.cpp'; then $(CYGPATH_W) 'rpc/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-mining.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-mining.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/mining.cpp' object='rpc/libbitcoin_server_a-mining.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-mining.obj `if test -f 'rpc/mining.cpp'; then $(CYGPATH_W) 'rpc/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining.cpp'; fi`

rpc/libbitcoin_server_a-misc.o: rpc/misc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-misc.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-misc.Tpo -c -o rpc/libbitcoin_server_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-misc.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-misc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libbitcoin_server_a-misc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp

rpc/libbitcoin_server_a-misc.obj: rpc/misc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-misc.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-misc.Tpo -c -o rpc/libbitcoin_server_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-misc.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-misc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libbitcoin_server_a-misc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`

rpc/libbitcoin_server_a-net.o: rpc/net.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-net.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o rpc/libbitcoin_server_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-net.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-net.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libbitcoin_server_a-net.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp

rpc/libbitcoin_server_a-net.obj: rpc/net.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-net.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o rpc/libbitcoin_server_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-net.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-net.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libbitcoin_server_a-net.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`

rpc/libbitcoin_server_a-rawtransaction.o: rpc/rawtransaction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-rawtransaction.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Tpo -c -o rpc/libbitcoin_server_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libbitcoin_server_a-rawtransaction.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp

rpc/libbitcoin_server_a-rawtransaction.obj: rpc/rawtransaction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-rawtransaction.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Tpo -c -o rpc/libbitcoin_server_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libbitcoin_server_a-rawtransaction.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`

rpc/libbitcoin_server_a-server.o: rpc/server.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-server.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-server.Tpo -c -o rpc/libbitcoin_server_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-server.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-server.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libbitcoin_server_a-server.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp

rpc/libbitcoin_server_a-server.obj: rpc/server.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-server.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-server.Tpo -c -o rpc/libbitcoin_server_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-server.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-server.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libbitcoin_server_a-server.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`

script/libbitcoin_server_a-serverchecker.o: script/serverchecker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_server_a-serverchecker.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_server_a-serverchecker.Tpo -c -o script/libbitcoin_server_a-serverchecker.o `test -f 'script/serverchecker.cpp' || echo '$(srcdir)/'`script/serverchecker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_server_a-serverchecker.Tpo script/$(DEPDIR)/libbitcoin_server_a-serverchecker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/serverchecker.cpp' object='script/libbitcoin_server_a-serverchecker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_server_a-serverchecker.o `test -f 'script/serverchecker.cpp' || echo '$(srcdir)/'`script/serverchecker.cpp

script/libbitcoin_server_a-serverchecker.obj: script/serverchecker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_server_a-serverchecker.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_server_a-serverchecker.Tpo -c -o script/libbitcoin_server_a-serverchecker.obj `if test -f 'script/serverchecker.cpp'; then $(CYGPATH_W) 'script/serverchecker.cpp'; else $(CYGPATH_W) '$(srcdir)/script/serverchecker.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_server_a-serverchecker.Tpo script/$(DEPDIR)/libbitcoin_server_a-serverchecker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/serverchecker.cpp' object='script/libbitcoin_server_a-serverchecker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_server_a-serverchecker.obj `if test -f 'script/serverchecker.cpp'; then $(CYGPATH_W) 'script/serverchecker.cpp'; else $(CYGPATH_W) '$(srcdir)/script/serverchecker.cpp'; fi`

script/libbitcoin_server_a-sigcache.o: script/sigcache.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_server_a-sigcache.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_server_a-sigcache.Tpo -c -o script/libbitcoin_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_server_a-sigcache.Tpo script/$(DEPDIR)/libbitcoin_server_a-sigcache.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libbitcoin_server_a-sigcache.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp

script/libbitcoin_server_a-sigcache.obj: script/sigcache.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_server_a-sigcache.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_server_a-sigcache.Tpo -c -o script/libbitcoin_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_server_a-sigcache.Tpo script/$(DEPDIR)/libbitcoin_server_a-sigcache.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libbitcoin_server_a-sigcache.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`

libbitcoin_server_a-timedata.o: timedata.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-timedata.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-timedata.Tpo -c -o libbitcoin_server_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-timedata.Tpo $(DEPDIR)/libbitcoin_server_a-timedata.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='timedata.cpp' object='libbitcoin_server_a-timedata.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp

libbitcoin_server_a-timedata.obj: timedata.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-timedata.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-timedata.Tpo -c -o libbitcoin_server_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-timedata.Tpo $(DEPDIR)/libbitcoin_server_a-timedata.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='timedata.cpp' object='libbitcoin_server_a-timedata.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`

libbitcoin_server_a-torcontrol.o: torcontrol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-torcontrol.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-torcontrol.Tpo -c -o libbitcoin_server_a-torcontrol.o `test -f 'torcontrol.cpp' || echo '$(srcdir)/'`torcontrol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-torcontrol.Tpo $(DEPDIR)/libbitcoin_server_a-torcontrol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='torcontrol.cpp' object='libbitcoin_server_a-torcontrol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-torcontrol.o `test -f 'torcontrol.cpp' || echo '$(srcdir)/'`torcontrol.cpp

libbitcoin_server_a-torcontrol.obj: torcontrol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-torcontrol.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-torcontrol.Tpo -c -o libbitcoin_server_a-torcontrol.obj `if test -f 'torcontrol.cpp'; then $(CYGPATH_W) 'torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/torcontrol.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-torcontrol.Tpo $(DEPDIR)/libbitcoin_server_a-torcontrol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='torcontrol.cpp' object='libbitcoin_server_a-torcontrol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-torcontrol.obj `if test -f 'torcontrol.cpp'; then $(CYGPATH_W) 'torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/torcontrol.cpp'; fi`

libbitcoin_server_a-txdb.o: txdb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txdb.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txdb.Tpo -c -o libbitcoin_server_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txdb.Tpo $(DEPDIR)/libbitcoin_server_a-txdb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='txdb.cpp' object='libbitcoin_server_a-txdb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp

libbitcoin_server_a-txdb.obj: txdb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txdb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txdb.Tpo -c -o libbitcoin_server_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txdb.Tpo $(DEPDIR)/libbitcoin_server_a-txdb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='txdb.cpp' object='libbitcoin_server_a-txdb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`

libbitcoin_server_a-txmempool.o: txmempool.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txmempool.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txmempool.Tpo -c -o libbitcoin_server_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txmempool.Tpo $(DEPDIR)/libbitcoin_server_a-txmempool.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='txmempool.cpp' object='libbitcoin_server_a-txmempool.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp

libbitcoin_server_a-txmempool.obj: txmempool.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txmempool.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txmempool.Tpo -c -o libbitcoin_server_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txmempool.Tpo $(DEPDIR)/libbitcoin_server_a-txmempool.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='txmempool.cpp' object='libbitcoin_server_a-txmempool.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`

libbitcoin_server_a-validationinterface.o: validationinterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-validationinterface.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-validationinterface.Tpo -c -o libbitcoin_server_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-validationinterface.Tpo $(DEPDIR)/libbitcoin_server_a-validationinterface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='validationinterface.cpp' object='libbitcoin_server_a-validationinterface.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp

libbitcoin_server_a-validationinterface.obj: validationinterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-validationinterface.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-validationinterface.Tpo -c -o libbitcoin_server_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-validationinterface.Tpo $(DEPDIR)/libbitcoin_server_a-validationinterface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='validationinterface.cpp' object='libbitcoin_server_a-validationinterface.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`

rpc/libbitcoin_server_a-testtransactions.o: rpc/testtransactions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-testtransactions.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-testtransactions.Tpo -c -o rpc/libbitcoin_server_a-testtransactions.o `test -f 'rpc/testtransactions.cpp' || echo '$(srcdir)/'`rpc/testtransactions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-testtransactions.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-testtransactions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/testtransactions.cpp' object='rpc/libbitcoin_server_a-testtransactions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-testtransactions.o `test -f 'rpc/testtransactions.cpp' || echo '$(srcdir)/'`rpc/testtransactions.cpp

rpc/libbitcoin_server_a-testtransactions.obj: rpc/testtransactions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-testtransactions.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-testtransactions.Tpo -c -o rpc/libbitcoin_server_a-testtransactions.obj `if test -f 'rpc/testtransactions.cpp'; then $(CYGPATH_W) 'rpc/testtransactions.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/testtransactions.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-testtransactions.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-testtransactions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/testtransactions.cpp' object='rpc/libbitcoin_server_a-testtransactions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-testtransactions.obj `if test -f 'rpc/testtransactions.cpp'; then $(CYGPATH_W) 'rpc/testtransactions.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/testtransactions.cpp'; fi`

support/libbitcoin_util_a-pagelocker.o: support/pagelocker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-pagelocker.o -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-pagelocker.Tpo -c -o support/libbitcoin_util_a-pagelocker.o `test -f 'support/pagelocker.cpp' || echo '$(srcdir)/'`support/pagelocker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-pagelocker.Tpo support/$(DEPDIR)/libbitcoin_util_a-pagelocker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='support/pagelocker.cpp' object='support/libbitcoin_util_a-pagelocker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-pagelocker.o `test -f 'support/pagelocker.cpp' || echo '$(srcdir)/'`support/pagelocker.cpp

support/libbitcoin_util_a-pagelocker.obj: support/pagelocker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-pagelocker.obj -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-pagelocker.Tpo -c -o support/libbitcoin_util_a-pagelocker.obj `if test -f 'support/pagelocker.cpp'; then $(CYGPATH_W) 'support/pagelocker.cpp'; else $(CYGPATH_W) '$(srcdir)/support/pagelocker.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-pagelocker.Tpo support/$(DEPDIR)/libbitcoin_util_a-pagelocker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='support/pagelocker.cpp' object='support/libbitcoin_util_a-pagelocker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-pagelocker.obj `if test -f 'support/pagelocker.cpp'; then $(CYGPATH_W) 'support/pagelocker.cpp'; else $(CYGPATH_W) '$(srcdir)/support/pagelocker.cpp'; fi`

libbitcoin_util_a-chainparamsbase.o: chainparamsbase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-chainparamsbase.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo -c -o libbitcoin_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='chainparamsbase.cpp' object='libbitcoin_util_a-chainparamsbase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp

libbitcoin_util_a-chainparamsbase.obj: chainparamsbase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-chainparamsbase.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo -c -o libbitcoin_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='chainparamsbase.cpp' object='libbitcoin_util_a-chainparamsbase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`

libbitcoin_util_a-clientversion.o: clientversion.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-clientversion.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo -c -o libbitcoin_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo $(DEPDIR)/libbitcoin_util_a-clientversion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='clientversion.cpp' object='libbitcoin_util_a-clientversion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp

libbitcoin_util_a-clientversion.obj: clientversion.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-clientversion.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo -c -o libbitcoin_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo $(DEPDIR)/libbitcoin_util_a-clientversion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='clientversion.cpp' object='libbitcoin_util_a-clientversion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`

compat/libbitcoin_util_a-glibc_sanity.o: compat/glibc_sanity.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibc_sanity.o -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Tpo -c -o compat/libbitcoin_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/libbitcoin_util_a-glibc_sanity.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp

compat/libbitcoin_util_a-glibc_sanity.obj: compat/glibc_sanity.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibc_sanity.obj -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Tpo -c -o compat/libbitcoin_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/libbitcoin_util_a-glibc_sanity.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`

compat/libbitcoin_util_a-glibcxx_sanity.o: compat/glibcxx_sanity.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibcxx_sanity.o -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Tpo -c -o compat/libbitcoin_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/libbitcoin_util_a-glibcxx_sanity.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp

compat/libbitcoin_util_a-glibcxx_sanity.obj: compat/glibcxx_sanity.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibcxx_sanity.obj -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Tpo -c -o compat/libbitcoin_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/libbitcoin_util_a-glibcxx_sanity.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`

compat/libbitcoin_util_a-strnlen.o: compat/strnlen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-strnlen.o -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Tpo -c -o compat/libbitcoin_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Tpo compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/libbitcoin_util_a-strnlen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp

compat/libbitcoin_util_a-strnlen.obj: compat/strnlen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-strnlen.obj -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Tpo -c -o compat/libbitcoin_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Tpo compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/libbitcoin_util_a-strnlen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`

libbitcoin_util_a-random.o: random.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-random.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-random.Tpo -c -o libbitcoin_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-random.Tpo $(DEPDIR)/libbitcoin_util_a-random.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='random.cpp' object='libbitcoin_util_a-random.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp

libbitcoin_util_a-random.obj: random.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-random.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-random.Tpo -c -o libbitcoin_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-random.Tpo $(DEPDIR)/libbitcoin_util_a-random.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='random.cpp' object='libbitcoin_util_a-random.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`

rpc/libbitcoin_util_a-protocol.o: rpc/protocol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_util_a-protocol.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Tpo -c -o rpc/libbitcoin_util_a-protocol.o `test -f 'rpc/protocol.cpp' || echo '$(srcdir)/'`rpc/protocol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Tpo rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/protocol.cpp' object='rpc/libbitcoin_util_a-protocol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_util_a-protocol.o `test -f 'rpc/protocol.cpp' || echo '$(srcdir)/'`rpc/protocol.cpp

rpc/libbitcoin_util_a-protocol.obj: rpc/protocol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_util_a-protocol.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Tpo -c -o rpc/libbitcoin_util_a-protocol.obj `if test -f 'rpc/protocol.cpp'; then $(CYGPATH_W) 'rpc/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/protocol.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Tpo rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rpc/protocol.cpp' object='rpc/libbitcoin_util_a-protocol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_util_a-protocol.obj `if test -f 'rpc/protocol.cpp'; then $(CYGPATH_W) 'rpc/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/protocol.cpp'; fi`

support/libbitcoin_util_a-cleanse.o: support/cleanse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-cleanse.o -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo -c -o support/libbitcoin_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libbitcoin_util_a-cleanse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp

support/libbitcoin_util_a-cleanse.obj: support/cleanse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-cleanse.obj -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo -c -o support/libbitcoin_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libbitcoin_util_a-cleanse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`

libbitcoin_util_a-sync.o: sync.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-sync.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-sync.Tpo -c -o libbitcoin_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-sync.Tpo $(DEPDIR)/libbitcoin_util_a-sync.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_util_a-sync.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp

libbitcoin_util_a-sync.obj: sync.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-sync.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-sync.Tpo -c -o libbitcoin_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-sync.Tpo $(DEPDIR)/libbitcoin_util_a-sync.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_util_a-sync.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`

libbitcoin_util_a-uint256.o: uint256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-uint256.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-uint256.Tpo -c -o libbitcoin_util_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-uint256.Tpo $(DEPDIR)/libbitcoin_util_a-uint256.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='uint256.cpp' object='libbitcoin_util_a-uint256.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

libbitcoin_util_a-uint256.obj: uint256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-uint256.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-uint256.Tpo -c -o libbitcoin_util_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-uint256.Tpo $(DEPDIR)/libbitcoin_util_a-uint256.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='uint256.cpp' object='libbitcoin_util_a-uint256.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`

libbitcoin_util_a-util.o: util.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-util.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-util.Tpo -c -o libbitcoin_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-util.Tpo $(DEPDIR)/libbitcoin_util_a-util.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util.cpp' object='libbitcoin_util_a-util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

libbitcoin_util_a-util.obj: util.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-util.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-util.Tpo -c -o libbitcoin_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-util.Tpo $(DEPDIR)/libbitcoin_util_a-util.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util.cpp' object='libbitcoin_util_a-util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

libbitcoin_util_a-utilmoneystr.o: utilmoneystr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utilmoneystr.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Tpo -c -o libbitcoin_util_a-utilmoneystr.o `test -f 'utilmoneystr.cpp' || echo '$(srcdir)/'`utilmoneystr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Tpo $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='utilmoneystr.cpp' object='libbitcoin_util_a-utilmoneystr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utilmoneystr.o `test -f 'utilmoneystr.cpp' || echo '$(srcdir)/'`utilmoneystr.cpp

libbitcoin_util_a-utilmoneystr.obj: utilmoneystr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utilmoneystr.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Tpo -c -o libbitcoin_util_a-utilmoneystr.obj `if test -f 'utilmoneystr.cpp'; then $(CYGPATH_W) 'utilmoneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/utilmoneystr.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Tpo $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='utilmoneystr.cpp' object='libbitcoin_util_a-utilmoneystr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utilmoneystr.obj `if test -f 'utilmoneystr.cpp'; then $(CYGPATH_W) 'utilmoneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/utilmoneystr.cpp'; fi`

libbitcoin_util_a-utilstrencodings.o: utilstrencodings.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utilstrencodings.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Tpo -c -o libbitcoin_util_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Tpo $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='utilstrencodings.cpp' object='libbitcoin_util_a-utilstrencodings.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp

libbitcoin_util_a-utilstrencodings.obj: utilstrencodings.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utilstrencodings.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Tpo -c -o libbitcoin_util_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Tpo $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='utilstrencodings.cpp' object='libbitcoin_util_a-utilstrencodings.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`

libbitcoin_util_a-utiltime.o: utiltime.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utiltime.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utiltime.Tpo -c -o libbitcoin_util_a-utiltime.o `test -f 'utiltime.cpp' || echo '$(srcdir)/'`utiltime.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utiltime.Tpo $(DEPDIR)/libbitcoin_util_a-utiltime.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='utiltime.cpp' object='libbitcoin_util_a-utiltime.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utiltime.o `test -f 'utiltime.cpp' || echo '$(srcdir)/'`utiltime.cpp

libbitcoin_util_a-utiltime.obj: utiltime.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utiltime.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utiltime.Tpo -c -o libbitcoin_util_a-utiltime.obj `if test -f 'utiltime.cpp'; then $(CYGPATH_W) 'utiltime.cpp'; else $(CYGPATH_W) '$(srcdir)/utiltime.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utiltime.Tpo $(DEPDIR)/libbitcoin_util_a-utiltime.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='utiltime.cpp' object='libbitcoin_util_a-utiltime.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utiltime.obj `if test -f 'utiltime.cpp'; then $(CYGPATH_W) 'utiltime.cpp'; else $(CYGPATH_W) '$(srcdir)/utiltime.cpp'; fi`

compat/libbitcoin_util_a-glibc_compat.o: compat/glibc_compat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibc_compat.o -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo -c -o compat/libbitcoin_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libbitcoin_util_a-glibc_compat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

compat/libbitcoin_util_a-glibc_compat.obj: compat/glibc_compat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibc_compat.obj -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo -c -o compat/libbitcoin_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libbitcoin_util_a-glibc_compat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`

libbitcoin_wallet_a-utiltest.o: utiltest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-utiltest.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-utiltest.Tpo -c -o libbitcoin_wallet_a-utiltest.o `test -f 'utiltest.cpp' || echo '$(srcdir)/'`utiltest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-utiltest.Tpo $(DEPDIR)/libbitcoin_wallet_a-utiltest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='utiltest.cpp' object='libbitcoin_wallet_a-utiltest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-utiltest.o `test -f 'utiltest.cpp' || echo '$(srcdir)/'`utiltest.cpp

libbitcoin_wallet_a-utiltest.obj: utiltest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-utiltest.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-utiltest.Tpo -c -o libbitcoin_wallet_a-utiltest.obj `if test -f 'utiltest.cpp'; then $(CYGPATH_W) 'utiltest.cpp'; else $(CYGPATH_W) '$(srcdir)/utiltest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-utiltest.Tpo $(DEPDIR)/libbitcoin_wallet_a-utiltest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='utiltest.cpp' object='libbitcoin_wallet_a-utiltest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-utiltest.obj `if test -f 'utiltest.cpp'; then $(CYGPATH_W) 'utiltest.cpp'; else $(CYGPATH_W) '$(srcdir)/utiltest.cpp'; fi`

libbitcoin_wallet_a-zcbenchmarks.o: zcbenchmarks.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-zcbenchmarks.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-zcbenchmarks.Tpo -c -o libbitcoin_wallet_a-zcbenchmarks.o `test -f 'zcbenchmarks.cpp' || echo '$(srcdir)/'`zcbenchmarks.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-zcbenchmarks.Tpo $(DEPDIR)/libbitcoin_wallet_a-zcbenchmarks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcbenchmarks.cpp' object='libbitcoin_wallet_a-zcbenchmarks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-zcbenchmarks.o `test -f 'zcbenchmarks.cpp' || echo '$(srcdir)/'`zcbenchmarks.cpp

libbitcoin_wallet_a-zcbenchmarks.obj: zcbenchmarks.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-zcbenchmarks.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-zcbenchmarks.Tpo -c -o libbitcoin_wallet_a-zcbenchmarks.obj `if test -f 'zcbenchmarks.cpp'; then $(CYGPATH_W) 'zcbenchmarks.cpp'; else $(CYGPATH_W) '$(srcdir)/zcbenchmarks.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-zcbenchmarks.Tpo $(DEPDIR)/libbitcoin_wallet_a-zcbenchmarks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcbenchmarks.cpp' object='libbitcoin_wallet_a-zcbenchmarks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-zcbenchmarks.obj `if test -f 'zcbenchmarks.cpp'; then $(CYGPATH_W) 'zcbenchmarks.cpp'; else $(CYGPATH_W) '$(srcdir)/zcbenchmarks.cpp'; fi`

wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.o: wallet/asyncrpcoperation_mergetoaddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.Tpo -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.o `test -f 'wallet/asyncrpcoperation_mergetoaddress.cpp' || echo '$(srcdir)/'`wallet/asyncrpcoperation_mergetoaddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/asyncrpcoperation_mergetoaddress.cpp' object='wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.o `test -f 'wallet/asyncrpcoperation_mergetoaddress.cpp' || echo '$(srcdir)/'`wallet/asyncrpcoperation_mergetoaddress.cpp

wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.obj: wallet/asyncrpcoperation_mergetoaddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.Tpo -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.obj `if test -f 'wallet/asyncrpcoperation_mergetoaddress.cpp'; then $(CYGPATH_W) 'wallet/asyncrpcoperation_mergetoaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/asyncrpcoperation_mergetoaddress.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/asyncrpcoperation_mergetoaddress.cpp' object='wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_mergetoaddress.obj `if test -f 'wallet/asyncrpcoperation_mergetoaddress.cpp'; then $(CYGPATH_W) 'wallet/asyncrpcoperation_mergetoaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/asyncrpcoperation_mergetoaddress.cpp'; fi`

wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.o: wallet/asyncrpcoperation_sendmany.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_sendmany.Tpo -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.o `test -f 'wallet/asyncrpcoperation_sendmany.cpp' || echo '$(srcdir)/'`wallet/asyncrpcoperation_sendmany.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_sendmany.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_sendmany.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/asyncrpcoperation_sendmany.cpp' object='wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.o `test -f 'wallet/asyncrpcoperation_sendmany.cpp' || echo '$(srcdir)/'`wallet/asyncrpcoperation_sendmany.cpp

wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.obj: wallet/asyncrpcoperation_sendmany.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_sendmany.Tpo -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.obj `if test -f 'wallet/asyncrpcoperation_sendmany.cpp'; then $(CYGPATH_W) 'wallet/asyncrpcoperation_sendmany.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/asyncrpcoperation_sendmany.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_sendmany.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_sendmany.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/asyncrpcoperation_sendmany.cpp' object='wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_sendmany.obj `if test -f 'wallet/asyncrpcoperation_sendmany.cpp'; then $(CYGPATH_W) 'wallet/asyncrpcoperation_sendmany.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/asyncrpcoperation_sendmany.cpp'; fi`

wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.o: wallet/asyncrpcoperation_shieldcoinbase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.Tpo -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.o `test -f 'wallet/asyncrpcoperation_shieldcoinbase.cpp' || echo '$(srcdir)/'`wallet/asyncrpcoperation_shieldcoinbase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/asyncrpcoperation_shieldcoinbase.cpp' object='wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.o `test -f 'wallet/asyncrpcoperation_shieldcoinbase.cpp' || echo '$(srcdir)/'`wallet/asyncrpcoperation_shieldcoinbase.cpp

wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.obj: wallet/asyncrpcoperation_shieldcoinbase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.Tpo -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.obj `if test -f 'wallet/asyncrpcoperation_shieldcoinbase.cpp'; then $(CYGPATH_W) 'wallet/asyncrpcoperation_shieldcoinbase.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/asyncrpcoperation_shieldcoinbase.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/asyncrpcoperation_shieldcoinbase.cpp' object='wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-asyncrpcoperation_shieldcoinbase.obj `if test -f 'wallet/asyncrpcoperation_shieldcoinbase.cpp'; then $(CYGPATH_W) 'wallet/asyncrpcoperation_shieldcoinbase.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/asyncrpcoperation_shieldcoinbase.cpp'; fi`

wallet/libbitcoin_wallet_a-crypter.o: wallet/crypter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-crypter.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo -c -o wallet/libbitcoin_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libbitcoin_wallet_a-crypter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp

wallet/libbitcoin_wallet_a-crypter.obj: wallet/crypter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-crypter.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo -c -o wallet/libbitcoin_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libbitcoin_wallet_a-crypter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`

wallet/libbitcoin_wallet_a-db.o: wallet/db.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-db.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo -c -o wallet/libbitcoin_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libbitcoin_wallet_a-db.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp

wallet/libbitcoin_wallet_a-db.obj: wallet/db.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-db.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo -c -o wallet/libbitcoin_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libbitcoin_wallet_a-db.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`

libbitcoin_wallet_a-paymentdisclosure.o: paymentdisclosure.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-paymentdisclosure.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosure.Tpo -c -o libbitcoin_wallet_a-paymentdisclosure.o `test -f 'paymentdisclosure.cpp' || echo '$(srcdir)/'`paymentdisclosure.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosure.Tpo $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='paymentdisclosure.cpp' object='libbitcoin_wallet_a-paymentdisclosure.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-paymentdisclosure.o `test -f 'paymentdisclosure.cpp' || echo '$(srcdir)/'`paymentdisclosure.cpp

libbitcoin_wallet_a-paymentdisclosure.obj: paymentdisclosure.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-paymentdisclosure.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosure.Tpo -c -o libbitcoin_wallet_a-paymentdisclosure.obj `if test -f 'paymentdisclosure.cpp'; then $(CYGPATH_W) 'paymentdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosure.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosure.Tpo $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='paymentdisclosure.cpp' object='libbitcoin_wallet_a-paymentdisclosure.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-paymentdisclosure.obj `if test -f 'paymentdisclosure.cpp'; then $(CYGPATH_W) 'paymentdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosure.cpp'; fi`

libbitcoin_wallet_a-paymentdisclosuredb.o: paymentdisclosuredb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-paymentdisclosuredb.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosuredb.Tpo -c -o libbitcoin_wallet_a-paymentdisclosuredb.o `test -f 'paymentdisclosuredb.cpp' || echo '$(srcdir)/'`paymentdisclosuredb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosuredb.Tpo $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosuredb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='paymentdisclosuredb.cpp' object='libbitcoin_wallet_a-paymentdisclosuredb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-paymentdisclosuredb.o `test -f 'paymentdisclosuredb.cpp' || echo '$(srcdir)/'`paymentdisclosuredb.cpp

libbitcoin_wallet_a-paymentdisclosuredb.obj: paymentdisclosuredb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-paymentdisclosuredb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosuredb.Tpo -c -o libbitcoin_wallet_a-paymentdisclosuredb.obj `if test -f 'paymentdisclosuredb.cpp'; then $(CYGPATH_W) 'paymentdisclosuredb.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosuredb.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosuredb.Tpo $(DEPDIR)/libbitcoin_wallet_a-paymentdisclosuredb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='paymentdisclosuredb.cpp' object='libbitcoin_wallet_a-paymentdisclosuredb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-paymentdisclosuredb.obj `if test -f 'paymentdisclosuredb.cpp'; then $(CYGPATH_W) 'paymentdisclosuredb.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosuredb.cpp'; fi`

libbitcoin_wallet_a-transaction_builder.o: transaction_builder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-transaction_builder.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-transaction_builder.Tpo -c -o libbitcoin_wallet_a-transaction_builder.o `test -f 'transaction_builder.cpp' || echo '$(srcdir)/'`transaction_builder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-transaction_builder.Tpo $(DEPDIR)/libbitcoin_wallet_a-transaction_builder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='transaction_builder.cpp' object='libbitcoin_wallet_a-transaction_builder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-transaction_builder.o `test -f 'transaction_builder.cpp' || echo '$(srcdir)/'`transaction_builder.cpp

libbitcoin_wallet_a-transaction_builder.obj: transaction_builder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-transaction_builder.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-transaction_builder.Tpo -c -o libbitcoin_wallet_a-transaction_builder.obj `if test -f 'transaction_builder.cpp'; then $(CYGPATH_W) 'transaction_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/transaction_builder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-transaction_builder.Tpo $(DEPDIR)/libbitcoin_wallet_a-transaction_builder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='transaction_builder.cpp' object='libbitcoin_wallet_a-transaction_builder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-transaction_builder.obj `if test -f 'transaction_builder.cpp'; then $(CYGPATH_W) 'transaction_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/transaction_builder.cpp'; fi`

wallet/libbitcoin_wallet_a-rpcdisclosure.o: wallet/rpcdisclosure.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-rpcdisclosure.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdisclosure.Tpo -c -o wallet/libbitcoin_wallet_a-rpcdisclosure.o `test -f 'wallet/rpcdisclosure.cpp' || echo '$(srcdir)/'`wallet/rpcdisclosure.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdisclosure.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdisclosure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/rpcdisclosure.cpp' object='wallet/libbitcoin_wallet_a-rpcdisclosure.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-rpcdisclosure.o `test -f 'wallet/rpcdisclosure.cpp' || echo '$(srcdir)/'`wallet/rpcdisclosure.cpp

wallet/libbitcoin_wallet_a-rpcdisclosure.obj: wallet/rpcdisclosure.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-rpcdisclosure.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdisclosure.Tpo -c -o wallet/libbitcoin_wallet_a-rpcdisclosure.obj `if test -f 'wallet/rpcdisclosure.cpp'; then $(CYGPATH_W) 'wallet/rpcdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdisclosure.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdisclosure.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdisclosure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/rpcdisclosure.cpp' object='wallet/libbitcoin_wallet_a-rpcdisclosure.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-rpcdisclosure.obj `if test -f 'wallet/rpcdisclosure.cpp'; then $(CYGPATH_W) 'wallet/rpcdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdisclosure.cpp'; fi`

wallet/libbitcoin_wallet_a-rpcdump.o: wallet/rpcdump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-rpcdump.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo -c -o wallet/libbitcoin_wallet_a-rpcdump.o `test -f 'wallet/rpcdump.cpp' || echo '$(srcdir)/'`wallet/rpcdump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/rpcdump.cpp' object='wallet/libbitcoin_wallet_a-rpcdump.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-rpcdump.o `test -f 'wallet/rpcdump.cpp' || echo '$(srcdir)/'`wallet/rpcdump.cpp

wallet/libbitcoin_wallet_a-rpcdump.obj: wallet/rpcdump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-rpcdump.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo -c -o wallet/libbitcoin_wallet_a-rpcdump.obj `if test -f 'wallet/rpcdump.cpp'; then $(CYGPATH_W) 'wallet/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdump.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/rpcdump.cpp' object='wallet/libbitcoin_wallet_a-rpcdump.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-rpcdump.obj `if test -f 'wallet/rpcdump.cpp'; then $(CYGPATH_W) 'wallet/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdump.cpp'; fi`

cc/libbitcoin_wallet_a-CCtokens.o: cc/CCtokens.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_wallet_a-CCtokens.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_wallet_a-CCtokens.Tpo -c -o cc/libbitcoin_wallet_a-CCtokens.o `test -f 'cc/CCtokens.cpp' || echo '$(srcdir)/'`cc/CCtokens.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_wallet_a-CCtokens.Tpo cc/$(DEPDIR)/libbitcoin_wallet_a-CCtokens.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCtokens.cpp' object='cc/libbitcoin_wallet_a-CCtokens.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_wallet_a-CCtokens.o `test -f 'cc/CCtokens.cpp' || echo '$(srcdir)/'`cc/CCtokens.cpp

cc/libbitcoin_wallet_a-CCtokens.obj: cc/CCtokens.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_wallet_a-CCtokens.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_wallet_a-CCtokens.Tpo -c -o cc/libbitcoin_wallet_a-CCtokens.obj `if test -f 'cc/CCtokens.cpp'; then $(CYGPATH_W) 'cc/CCtokens.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCtokens.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_wallet_a-CCtokens.Tpo cc/$(DEPDIR)/libbitcoin_wallet_a-CCtokens.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCtokens.cpp' object='cc/libbitcoin_wallet_a-CCtokens.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_wallet_a-CCtokens.obj `if test -f 'cc/CCtokens.cpp'; then $(CYGPATH_W) 'cc/CCtokens.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCtokens.cpp'; fi`

cc/libbitcoin_wallet_a-CCassetsCore.o: cc/CCassetsCore.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_wallet_a-CCassetsCore.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetsCore.Tpo -c -o cc/libbitcoin_wallet_a-CCassetsCore.o `test -f 'cc/CCassetsCore.cpp' || echo '$(srcdir)/'`cc/CCassetsCore.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetsCore.Tpo cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetsCore.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCassetsCore.cpp' object='cc/libbitcoin_wallet_a-CCassetsCore.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_wallet_a-CCassetsCore.o `test -f 'cc/CCassetsCore.cpp' || echo '$(srcdir)/'`cc/CCassetsCore.cpp

cc/libbitcoin_wallet_a-CCassetsCore.obj: cc/CCassetsCore.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_wallet_a-CCassetsCore.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetsCore.Tpo -c -o cc/libbitcoin_wallet_a-CCassetsCore.obj `if test -f 'cc/CCassetsCore.cpp'; then $(CYGPATH_W) 'cc/CCassetsCore.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCassetsCore.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetsCore.Tpo cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetsCore.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCassetsCore.cpp' object='cc/libbitcoin_wallet_a-CCassetsCore.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_wallet_a-CCassetsCore.obj `if test -f 'cc/CCassetsCore.cpp'; then $(CYGPATH_W) 'cc/CCassetsCore.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCassetsCore.cpp'; fi`

cc/libbitcoin_wallet_a-CCassetstx.o: cc/CCassetstx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_wallet_a-CCassetstx.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetstx.Tpo -c -o cc/libbitcoin_wallet_a-CCassetstx.o `test -f 'cc/CCassetstx.cpp' || echo '$(srcdir)/'`cc/CCassetstx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetstx.Tpo cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetstx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCassetstx.cpp' object='cc/libbitcoin_wallet_a-CCassetstx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_wallet_a-CCassetstx.o `test -f 'cc/CCassetstx.cpp' || echo '$(srcdir)/'`cc/CCassetstx.cpp

cc/libbitcoin_wallet_a-CCassetstx.obj: cc/CCassetstx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_wallet_a-CCassetstx.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetstx.Tpo -c -o cc/libbitcoin_wallet_a-CCassetstx.obj `if test -f 'cc/CCassetstx.cpp'; then $(CYGPATH_W) 'cc/CCassetstx.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCassetstx.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetstx.Tpo cc/$(DEPDIR)/libbitcoin_wallet_a-CCassetstx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCassetstx.cpp' object='cc/libbitcoin_wallet_a-CCassetstx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_wallet_a-CCassetstx.obj `if test -f 'cc/CCassetstx.cpp'; then $(CYGPATH_W) 'cc/CCassetstx.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCassetstx.cpp'; fi`

cc/libbitcoin_wallet_a-CCtx.o: cc/CCtx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_wallet_a-CCtx.o -MD -MP -MF cc/$(DEPDIR)/libbitcoin_wallet_a-CCtx.Tpo -c -o cc/libbitcoin_wallet_a-CCtx.o `test -f 'cc/CCtx.cpp' || echo '$(srcdir)/'`cc/CCtx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_wallet_a-CCtx.Tpo cc/$(DEPDIR)/libbitcoin_wallet_a-CCtx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCtx.cpp' object='cc/libbitcoin_wallet_a-CCtx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_wallet_a-CCtx.o `test -f 'cc/CCtx.cpp' || echo '$(srcdir)/'`cc/CCtx.cpp

cc/libbitcoin_wallet_a-CCtx.obj: cc/CCtx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT cc/libbitcoin_wallet_a-CCtx.obj -MD -MP -MF cc/$(DEPDIR)/libbitcoin_wallet_a-CCtx.Tpo -c -o cc/libbitcoin_wallet_a-CCtx.obj `if test -f 'cc/CCtx.cpp'; then $(CYGPATH_W) 'cc/CCtx.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCtx.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cc/$(DEPDIR)/libbitcoin_wallet_a-CCtx.Tpo cc/$(DEPDIR)/libbitcoin_wallet_a-CCtx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cc/CCtx.cpp' object='cc/libbitcoin_wallet_a-CCtx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o cc/libbitcoin_wallet_a-CCtx.obj `if test -f 'cc/CCtx.cpp'; then $(CYGPATH_W) 'cc/CCtx.cpp'; else $(CYGPATH_W) '$(srcdir)/cc/CCtx.cpp'; fi`

wallet/libbitcoin_wallet_a-rpcwallet.o: wallet/rpcwallet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-rpcwallet.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo -c -o wallet/libbitcoin_wallet_a-rpcwallet.o `test -f 'wallet/rpcwallet.cpp' || echo '$(srcdir)/'`wallet/rpcwallet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/rpcwallet.cpp' object='wallet/libbitcoin_wallet_a-rpcwallet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-rpcwallet.o `test -f 'wallet/rpcwallet.cpp' || echo '$(srcdir)/'`wallet/rpcwallet.cpp

wallet/libbitcoin_wallet_a-rpcwallet.obj: wallet/rpcwallet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-rpcwallet.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo -c -o wallet/libbitcoin_wallet_a-rpcwallet.obj `if test -f 'wallet/rpcwallet.cpp'; then $(CYGPATH_W) 'wallet/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcwallet.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/rpcwallet.cpp' object='wallet/libbitcoin_wallet_a-rpcwallet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-rpcwallet.obj `if test -f 'wallet/rpcwallet.cpp'; then $(CYGPATH_W) 'wallet/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcwallet.cpp'; fi`

wallet/libbitcoin_wallet_a-wallet.o: wallet/wallet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-wallet.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o wallet/libbitcoin_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libbitcoin_wallet_a-wallet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp

wallet/libbitcoin_wallet_a-wallet.obj: wallet/wallet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-wallet.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o wallet/libbitcoin_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libbitcoin_wallet_a-wallet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`

wallet/libbitcoin_wallet_a-wallet_ismine.o: wallet/wallet_ismine.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-wallet_ismine.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet_ismine.Tpo -c -o wallet/libbitcoin_wallet_a-wallet_ismine.o `test -f 'wallet/wallet_ismine.cpp' || echo '$(srcdir)/'`wallet/wallet_ismine.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet_ismine.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet_ismine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/wallet_ismine.cpp' object='wallet/libbitcoin_wallet_a-wallet_ismine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-wallet_ismine.o `test -f 'wallet/wallet_ismine.cpp' || echo '$(srcdir)/'`wallet/wallet_ismine.cpp

wallet/libbitcoin_wallet_a-wallet_ismine.obj: wallet/wallet_ismine.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-wallet_ismine.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet_ismine.Tpo -c -o wallet/libbitcoin_wallet_a-wallet_ismine.obj `if test -f 'wallet/wallet_ismine.cpp'; then $(CYGPATH_W) 'wallet/wallet_ismine.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet_ismine.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet_ismine.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet_ismine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/wallet_ismine.cpp' object='wallet/libbitcoin_wallet_a-wallet_ismine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-wallet_ismine.obj `if test -f 'wallet/wallet_ismine.cpp'; then $(CYGPATH_W) 'wallet/wallet_ismine.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet_ismine.cpp'; fi`

wallet/libbitcoin_wallet_a-walletdb.o: wallet/walletdb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-walletdb.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo -c -o wallet/libbitcoin_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libbitcoin_wallet_a-walletdb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp

wallet/libbitcoin_wallet_a-walletdb.obj: wallet/walletdb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-walletdb.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo -c -o wallet/libbitcoin_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libbitcoin_wallet_a-walletdb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`

zcash/libbitcoin_wallet_a-zip32.o: zcash/zip32.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libbitcoin_wallet_a-zip32.o -MD -MP -MF zcash/$(DEPDIR)/libbitcoin_wallet_a-zip32.Tpo -c -o zcash/libbitcoin_wallet_a-zip32.o `test -f 'zcash/zip32.cpp' || echo '$(srcdir)/'`zcash/zip32.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libbitcoin_wallet_a-zip32.Tpo zcash/$(DEPDIR)/libbitcoin_wallet_a-zip32.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/zip32.cpp' object='zcash/libbitcoin_wallet_a-zip32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libbitcoin_wallet_a-zip32.o `test -f 'zcash/zip32.cpp' || echo '$(srcdir)/'`zcash/zip32.cpp

zcash/libbitcoin_wallet_a-zip32.obj: zcash/zip32.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libbitcoin_wallet_a-zip32.obj -MD -MP -MF zcash/$(DEPDIR)/libbitcoin_wallet_a-zip32.Tpo -c -o zcash/libbitcoin_wallet_a-zip32.obj `if test -f 'zcash/zip32.cpp'; then $(CYGPATH_W) 'zcash/zip32.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/zip32.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libbitcoin_wallet_a-zip32.Tpo zcash/$(DEPDIR)/libbitcoin_wallet_a-zip32.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/zip32.cpp' object='zcash/libbitcoin_wallet_a-zip32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libbitcoin_wallet_a-zip32.obj `if test -f 'zcash/zip32.cpp'; then $(CYGPATH_W) 'zcash/zip32.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/zip32.cpp'; fi`

zmq/libbitcoin_zmq_a-zmqabstractnotifier.o: zmq/zmqabstractnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqabstractnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqabstractnotifier.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp

zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj: zmq/zmqabstractnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`

zmq/libbitcoin_zmq_a-zmqnotificationinterface.o: zmq/zmqnotificationinterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqnotificationinterface.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libbitcoin_zmq_a-zmqnotificationinterface.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp

zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj: zmq/zmqnotificationinterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`

zmq/libbitcoin_zmq_a-zmqpublishnotifier.o: zmq/zmqpublishnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqpublishnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqpublishnotifier.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp

zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj: zmq/zmqpublishnotifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`

zcash/libzcash_a-IncrementalMerkleTree.o: zcash/IncrementalMerkleTree.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-IncrementalMerkleTree.o -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-IncrementalMerkleTree.Tpo -c -o zcash/libzcash_a-IncrementalMerkleTree.o `test -f 'zcash/IncrementalMerkleTree.cpp' || echo '$(srcdir)/'`zcash/IncrementalMerkleTree.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-IncrementalMerkleTree.Tpo zcash/$(DEPDIR)/libzcash_a-IncrementalMerkleTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/IncrementalMerkleTree.cpp' object='zcash/libzcash_a-IncrementalMerkleTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-IncrementalMerkleTree.o `test -f 'zcash/IncrementalMerkleTree.cpp' || echo '$(srcdir)/'`zcash/IncrementalMerkleTree.cpp

zcash/libzcash_a-IncrementalMerkleTree.obj: zcash/IncrementalMerkleTree.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-IncrementalMerkleTree.obj -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-IncrementalMerkleTree.Tpo -c -o zcash/libzcash_a-IncrementalMerkleTree.obj `if test -f 'zcash/IncrementalMerkleTree.cpp'; then $(CYGPATH_W) 'zcash/IncrementalMerkleTree.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/IncrementalMerkleTree.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-IncrementalMerkleTree.Tpo zcash/$(DEPDIR)/libzcash_a-IncrementalMerkleTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/IncrementalMerkleTree.cpp' object='zcash/libzcash_a-IncrementalMerkleTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-IncrementalMerkleTree.obj `if test -f 'zcash/IncrementalMerkleTree.cpp'; then $(CYGPATH_W) 'zcash/IncrementalMerkleTree.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/IncrementalMerkleTree.cpp'; fi`

zcash/libzcash_a-NoteEncryption.o: zcash/NoteEncryption.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-NoteEncryption.o -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-NoteEncryption.Tpo -c -o zcash/libzcash_a-NoteEncryption.o `test -f 'zcash/NoteEncryption.cpp' || echo '$(srcdir)/'`zcash/NoteEncryption.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-NoteEncryption.Tpo zcash/$(DEPDIR)/libzcash_a-NoteEncryption.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/NoteEncryption.cpp' object='zcash/libzcash_a-NoteEncryption.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-NoteEncryption.o `test -f 'zcash/NoteEncryption.cpp' || echo '$(srcdir)/'`zcash/NoteEncryption.cpp

zcash/libzcash_a-NoteEncryption.obj: zcash/NoteEncryption.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-NoteEncryption.obj -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-NoteEncryption.Tpo -c -o zcash/libzcash_a-NoteEncryption.obj `if test -f 'zcash/NoteEncryption.cpp'; then $(CYGPATH_W) 'zcash/NoteEncryption.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/NoteEncryption.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-NoteEncryption.Tpo zcash/$(DEPDIR)/libzcash_a-NoteEncryption.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/NoteEncryption.cpp' object='zcash/libzcash_a-NoteEncryption.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-NoteEncryption.obj `if test -f 'zcash/NoteEncryption.cpp'; then $(CYGPATH_W) 'zcash/NoteEncryption.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/NoteEncryption.cpp'; fi`

zcash/libzcash_a-Address.o: zcash/Address.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-Address.o -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-Address.Tpo -c -o zcash/libzcash_a-Address.o `test -f 'zcash/Address.cpp' || echo '$(srcdir)/'`zcash/Address.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-Address.Tpo zcash/$(DEPDIR)/libzcash_a-Address.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/Address.cpp' object='zcash/libzcash_a-Address.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-Address.o `test -f 'zcash/Address.cpp' || echo '$(srcdir)/'`zcash/Address.cpp

zcash/libzcash_a-Address.obj: zcash/Address.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-Address.obj -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-Address.Tpo -c -o zcash/libzcash_a-Address.obj `if test -f 'zcash/Address.cpp'; then $(CYGPATH_W) 'zcash/Address.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/Address.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-Address.Tpo zcash/$(DEPDIR)/libzcash_a-Address.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/Address.cpp' object='zcash/libzcash_a-Address.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-Address.obj `if test -f 'zcash/Address.cpp'; then $(CYGPATH_W) 'zcash/Address.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/Address.cpp'; fi`

zcash/libzcash_a-JoinSplit.o: zcash/JoinSplit.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-JoinSplit.o -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-JoinSplit.Tpo -c -o zcash/libzcash_a-JoinSplit.o `test -f 'zcash/JoinSplit.cpp' || echo '$(srcdir)/'`zcash/JoinSplit.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-JoinSplit.Tpo zcash/$(DEPDIR)/libzcash_a-JoinSplit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/JoinSplit.cpp' object='zcash/libzcash_a-JoinSplit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-JoinSplit.o `test -f 'zcash/JoinSplit.cpp' || echo '$(srcdir)/'`zcash/JoinSplit.cpp

zcash/libzcash_a-JoinSplit.obj: zcash/JoinSplit.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-JoinSplit.obj -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-JoinSplit.Tpo -c -o zcash/libzcash_a-JoinSplit.obj `if test -f 'zcash/JoinSplit.cpp'; then $(CYGPATH_W) 'zcash/JoinSplit.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/JoinSplit.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-JoinSplit.Tpo zcash/$(DEPDIR)/libzcash_a-JoinSplit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/JoinSplit.cpp' object='zcash/libzcash_a-JoinSplit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-JoinSplit.obj `if test -f 'zcash/JoinSplit.cpp'; then $(CYGPATH_W) 'zcash/JoinSplit.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/JoinSplit.cpp'; fi`

zcash/libzcash_a-Proof.o: zcash/Proof.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-Proof.o -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-Proof.Tpo -c -o zcash/libzcash_a-Proof.o `test -f 'zcash/Proof.cpp' || echo '$(srcdir)/'`zcash/Proof.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-Proof.Tpo zcash/$(DEPDIR)/libzcash_a-Proof.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/Proof.cpp' object='zcash/libzcash_a-Proof.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-Proof.o `test -f 'zcash/Proof.cpp' || echo '$(srcdir)/'`zcash/Proof.cpp

zcash/libzcash_a-Proof.obj: zcash/Proof.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-Proof.obj -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-Proof.Tpo -c -o zcash/libzcash_a-Proof.obj `if test -f 'zcash/Proof.cpp'; then $(CYGPATH_W) 'zcash/Proof.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/Proof.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-Proof.Tpo zcash/$(DEPDIR)/libzcash_a-Proof.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/Proof.cpp' object='zcash/libzcash_a-Proof.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-Proof.obj `if test -f 'zcash/Proof.cpp'; then $(CYGPATH_W) 'zcash/Proof.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/Proof.cpp'; fi`

zcash/libzcash_a-Note.o: zcash/Note.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-Note.o -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-Note.Tpo -c -o zcash/libzcash_a-Note.o `test -f 'zcash/Note.cpp' || echo '$(srcdir)/'`zcash/Note.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-Note.Tpo zcash/$(DEPDIR)/libzcash_a-Note.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/Note.cpp' object='zcash/libzcash_a-Note.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-Note.o `test -f 'zcash/Note.cpp' || echo '$(srcdir)/'`zcash/Note.cpp

zcash/libzcash_a-Note.obj: zcash/Note.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-Note.obj -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-Note.Tpo -c -o zcash/libzcash_a-Note.obj `if test -f 'zcash/Note.cpp'; then $(CYGPATH_W) 'zcash/Note.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/Note.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-Note.Tpo zcash/$(DEPDIR)/libzcash_a-Note.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/Note.cpp' object='zcash/libzcash_a-Note.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-Note.obj `if test -f 'zcash/Note.cpp'; then $(CYGPATH_W) 'zcash/Note.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/Note.cpp'; fi`

zcash/libzcash_a-prf.o: zcash/prf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-prf.o -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-prf.Tpo -c -o zcash/libzcash_a-prf.o `test -f 'zcash/prf.cpp' || echo '$(srcdir)/'`zcash/prf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-prf.Tpo zcash/$(DEPDIR)/libzcash_a-prf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/prf.cpp' object='zcash/libzcash_a-prf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-prf.o `test -f 'zcash/prf.cpp' || echo '$(srcdir)/'`zcash/prf.cpp

zcash/libzcash_a-prf.obj: zcash/prf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-prf.obj -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-prf.Tpo -c -o zcash/libzcash_a-prf.obj `if test -f 'zcash/prf.cpp'; then $(CYGPATH_W) 'zcash/prf.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/prf.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-prf.Tpo zcash/$(DEPDIR)/libzcash_a-prf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/prf.cpp' object='zcash/libzcash_a-prf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-prf.obj `if test -f 'zcash/prf.cpp'; then $(CYGPATH_W) 'zcash/prf.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/prf.cpp'; fi`

zcash/libzcash_a-util.o: zcash/util.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-util.o -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-util.Tpo -c -o zcash/libzcash_a-util.o `test -f 'zcash/util.cpp' || echo '$(srcdir)/'`zcash/util.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-util.Tpo zcash/$(DEPDIR)/libzcash_a-util.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/util.cpp' object='zcash/libzcash_a-util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-util.o `test -f 'zcash/util.cpp' || echo '$(srcdir)/'`zcash/util.cpp

zcash/libzcash_a-util.obj: zcash/util.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-util.obj -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-util.Tpo -c -o zcash/libzcash_a-util.obj `if test -f 'zcash/util.cpp'; then $(CYGPATH_W) 'zcash/util.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/util.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-util.Tpo zcash/$(DEPDIR)/libzcash_a-util.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/util.cpp' object='zcash/libzcash_a-util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-util.obj `if test -f 'zcash/util.cpp'; then $(CYGPATH_W) 'zcash/util.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/util.cpp'; fi`

zcash/libzcash_a-zip32.o: zcash/zip32.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-zip32.o -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-zip32.Tpo -c -o zcash/libzcash_a-zip32.o `test -f 'zcash/zip32.cpp' || echo '$(srcdir)/'`zcash/zip32.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-zip32.Tpo zcash/$(DEPDIR)/libzcash_a-zip32.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/zip32.cpp' object='zcash/libzcash_a-zip32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-zip32.o `test -f 'zcash/zip32.cpp' || echo '$(srcdir)/'`zcash/zip32.cpp

zcash/libzcash_a-zip32.obj: zcash/zip32.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -MT zcash/libzcash_a-zip32.obj -MD -MP -MF zcash/$(DEPDIR)/libzcash_a-zip32.Tpo -c -o zcash/libzcash_a-zip32.obj `if test -f 'zcash/zip32.cpp'; then $(CYGPATH_W) 'zcash/zip32.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/zip32.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) zcash/$(DEPDIR)/libzcash_a-zip32.Tpo zcash/$(DEPDIR)/libzcash_a-zip32.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zcash/zip32.cpp' object='zcash/libzcash_a-zip32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcash_a_CPPFLAGS) $(CPPFLAGS) $(libzcash_a_CXXFLAGS) $(CXXFLAGS) -c -o zcash/libzcash_a-zip32.obj `if test -f 'zcash/zip32.cpp'; then $(CYGPATH_W) 'zcash/zip32.cpp'; else $(CYGPATH_W) '$(srcdir)/zcash/zip32.cpp'; fi`

crypto/libzcashconsensus_la-equihash.lo: crypto/equihash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libzcashconsensus_la-equihash.lo -MD -MP -MF crypto/$(DEPDIR)/libzcashconsensus_la-equihash.Tpo -c -o crypto/libzcashconsensus_la-equihash.lo `test -f 'crypto/equihash.cpp' || echo '$(srcdir)/'`crypto/equihash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libzcashconsensus_la-equihash.Tpo crypto/$(DEPDIR)/libzcashconsensus_la-equihash.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/equihash.cpp' object='crypto/libzcashconsensus_la-equihash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libzcashconsensus_la-equihash.lo `test -f 'crypto/equihash.cpp' || echo '$(srcdir)/'`crypto/equihash.cpp

crypto/libzcashconsensus_la-hmac_sha512.lo: crypto/hmac_sha512.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libzcashconsensus_la-hmac_sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libzcashconsensus_la-hmac_sha512.Tpo -c -o crypto/libzcashconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libzcashconsensus_la-hmac_sha512.Tpo crypto/$(DEPDIR)/libzcashconsensus_la-hmac_sha512.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/libzcashconsensus_la-hmac_sha512.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libzcashconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/libzcashconsensus_la-ripemd160.lo: crypto/ripemd160.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libzcashconsensus_la-ripemd160.lo -MD -MP -MF crypto/$(DEPDIR)/libzcashconsensus_la-ripemd160.Tpo -c -o crypto/libzcashconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libzcashconsensus_la-ripemd160.Tpo crypto/$(DEPDIR)/libzcashconsensus_la-ripemd160.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/libzcashconsensus_la-ripemd160.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libzcashconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/libzcashconsensus_la-sha1.lo: crypto/sha1.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libzcashconsensus_la-sha1.lo -MD -MP -MF crypto/$(DEPDIR)/libzcashconsensus_la-sha1.Tpo -c -o crypto/libzcashconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libzcashconsensus_la-sha1.Tpo crypto/$(DEPDIR)/libzcashconsensus_la-sha1.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/libzcashconsensus_la-sha1.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libzcashconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/libzcashconsensus_la-sha256.lo: crypto/sha256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libzcashconsensus_la-sha256.lo -MD -MP -MF crypto/$(DEPDIR)/libzcashconsensus_la-sha256.Tpo -c -o crypto/libzcashconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libzcashconsensus_la-sha256.Tpo crypto/$(DEPDIR)/libzcashconsensus_la-sha256.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libzcashconsensus_la-sha256.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libzcashconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/libzcashconsensus_la-sha512.lo: crypto/sha512.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libzcashconsensus_la-sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libzcashconsensus_la-sha512.Tpo -c -o crypto/libzcashconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libzcashconsensus_la-sha512.Tpo crypto/$(DEPDIR)/libzcashconsensus_la-sha512.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/libzcashconsensus_la-sha512.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libzcashconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

libzcashconsensus_la-hash.lo: hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libzcashconsensus_la-hash.lo -MD -MP -MF $(DEPDIR)/libzcashconsensus_la-hash.Tpo -c -o libzcashconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libzcashconsensus_la-hash.Tpo $(DEPDIR)/libzcashconsensus_la-hash.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='hash.cpp' object='libzcashconsensus_la-hash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libzcashconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

primitives/libzcashconsensus_la-transaction.lo: primitives/transaction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libzcashconsensus_la-transaction.lo -MD -MP -MF primitives/$(DEPDIR)/libzcashconsensus_la-transaction.Tpo -c -o primitives/libzcashconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libzcashconsensus_la-transaction.Tpo primitives/$(DEPDIR)/libzcashconsensus_la-transaction.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libzcashconsensus_la-transaction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libzcashconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

primitives/libzcashconsensus_la-nonce.lo: primitives/nonce.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libzcashconsensus_la-nonce.lo -MD -MP -MF primitives/$(DEPDIR)/libzcashconsensus_la-nonce.Tpo -c -o primitives/libzcashconsensus_la-nonce.lo `test -f 'primitives/nonce.cpp' || echo '$(srcdir)/'`primitives/nonce.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libzcashconsensus_la-nonce.Tpo primitives/$(DEPDIR)/libzcashconsensus_la-nonce.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='primitives/nonce.cpp' object='primitives/libzcashconsensus_la-nonce.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libzcashconsensus_la-nonce.lo `test -f 'primitives/nonce.cpp' || echo '$(srcdir)/'`primitives/nonce.cpp

libzcashconsensus_la-pubkey.lo: pubkey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libzcashconsensus_la-pubkey.lo -MD -MP -MF $(DEPDIR)/libzcashconsensus_la-pubkey.Tpo -c -o libzcashconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libzcashconsensus_la-pubkey.Tpo $(DEPDIR)/libzcashconsensus_la-pubkey.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='pubkey.cpp' object='libzcashconsensus_la-pubkey.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libzcashconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

script/libzcashconsensus_la-zcashconsensus.lo: script/zcashconsensus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libzcashconsensus_la-zcashconsensus.lo -MD -MP -MF script/$(DEPDIR)/libzcashconsensus_la-zcashconsensus.Tpo -c -o script/libzcashconsensus_la-zcashconsensus.lo `test -f 'script/zcashconsensus.cpp' || echo '$(srcdir)/'`script/zcashconsensus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libzcashconsensus_la-zcashconsensus.Tpo script/$(DEPDIR)/libzcashconsensus_la-zcashconsensus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/zcashconsensus.cpp' object='script/libzcashconsensus_la-zcashconsensus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libzcashconsensus_la-zcashconsensus.lo `test -f 'script/zcashconsensus.cpp' || echo '$(srcdir)/'`script/zcashconsensus.cpp

script/libzcashconsensus_la-interpreter.lo: script/interpreter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libzcashconsensus_la-interpreter.lo -MD -MP -MF script/$(DEPDIR)/libzcashconsensus_la-interpreter.Tpo -c -o script/libzcashconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libzcashconsensus_la-interpreter.Tpo script/$(DEPDIR)/libzcashconsensus_la-interpreter.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libzcashconsensus_la-interpreter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libzcashconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libzcashconsensus_la-script.lo: script/script.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libzcashconsensus_la-script.lo -MD -MP -MF script/$(DEPDIR)/libzcashconsensus_la-script.Tpo -c -o script/libzcashconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libzcashconsensus_la-script.Tpo script/$(DEPDIR)/libzcashconsensus_la-script.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='script/script.cpp' object='script/libzcashconsensus_la-script.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libzcashconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

libzcashconsensus_la-uint256.lo: uint256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libzcashconsensus_la-uint256.lo -MD -MP -MF $(DEPDIR)/libzcashconsensus_la-uint256.Tpo -c -o libzcashconsensus_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libzcashconsensus_la-uint256.Tpo $(DEPDIR)/libzcashconsensus_la-uint256.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='uint256.cpp' object='libzcashconsensus_la-uint256.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libzcashconsensus_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

libzcashconsensus_la-utilstrencodings.lo: utilstrencodings.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libzcashconsensus_la-utilstrencodings.lo -MD -MP -MF $(DEPDIR)/libzcashconsensus_la-utilstrencodings.Tpo -c -o libzcashconsensus_la-utilstrencodings.lo `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libzcashconsensus_la-utilstrencodings.Tpo $(DEPDIR)/libzcashconsensus_la-utilstrencodings.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='utilstrencodings.cpp' object='libzcashconsensus_la-utilstrencodings.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libzcashconsensus_la-utilstrencodings.lo `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp

compat/libzcashconsensus_la-glibc_compat.lo: compat/glibc_compat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT compat/libzcashconsensus_la-glibc_compat.lo -MD -MP -MF compat/$(DEPDIR)/libzcashconsensus_la-glibc_compat.Tpo -c -o compat/libzcashconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libzcashconsensus_la-glibc_compat.Tpo compat/$(DEPDIR)/libzcashconsensus_la-glibc_compat.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libzcashconsensus_la-glibc_compat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzcashconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libzcashconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o compat/libzcashconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

komodo_cli-bitcoin-cli.o: bitcoin-cli.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_cli_CPPFLAGS) $(CPPFLAGS) $(komodo_cli_CXXFLAGS) $(CXXFLAGS) -MT komodo_cli-bitcoin-cli.o -MD -MP -MF $(DEPDIR)/komodo_cli-bitcoin-cli.Tpo -c -o komodo_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/komodo_cli-bitcoin-cli.Tpo $(DEPDIR)/komodo_cli-bitcoin-cli.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitcoin-cli.cpp' object='komodo_cli-bitcoin-cli.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_cli_CPPFLAGS) $(CPPFLAGS) $(komodo_cli_CXXFLAGS) $(CXXFLAGS) -c -o komodo_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp

komodo_cli-bitcoin-cli.obj: bitcoin-cli.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_cli_CPPFLAGS) $(CPPFLAGS) $(komodo_cli_CXXFLAGS) $(CXXFLAGS) -MT komodo_cli-bitcoin-cli.obj -MD -MP -MF $(DEPDIR)/komodo_cli-bitcoin-cli.Tpo -c -o komodo_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/komodo_cli-bitcoin-cli.Tpo $(DEPDIR)/komodo_cli-bitcoin-cli.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitcoin-cli.cpp' object='komodo_cli-bitcoin-cli.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_cli_CPPFLAGS) $(CPPFLAGS) $(komodo_cli_CXXFLAGS) $(CXXFLAGS) -c -o komodo_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`

test-komodo/komodo_test-main.o: test-komodo/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-main.o -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-main.Tpo -c -o test-komodo/komodo_test-main.o `test -f 'test-komodo/main.cpp' || echo '$(srcdir)/'`test-komodo/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-main.Tpo test-komodo/$(DEPDIR)/komodo_test-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/main.cpp' object='test-komodo/komodo_test-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-main.o `test -f 'test-komodo/main.cpp' || echo '$(srcdir)/'`test-komodo/main.cpp

test-komodo/komodo_test-main.obj: test-komodo/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-main.obj -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-main.Tpo -c -o test-komodo/komodo_test-main.obj `if test -f 'test-komodo/main.cpp'; then $(CYGPATH_W) 'test-komodo/main.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/main.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-main.Tpo test-komodo/$(DEPDIR)/komodo_test-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/main.cpp' object='test-komodo/komodo_test-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-main.obj `if test -f 'test-komodo/main.cpp'; then $(CYGPATH_W) 'test-komodo/main.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/main.cpp'; fi`

test-komodo/komodo_test-testutils.o: test-komodo/testutils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-testutils.o -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-testutils.Tpo -c -o test-komodo/komodo_test-testutils.o `test -f 'test-komodo/testutils.cpp' || echo '$(srcdir)/'`test-komodo/testutils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-testutils.Tpo test-komodo/$(DEPDIR)/komodo_test-testutils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/testutils.cpp' object='test-komodo/komodo_test-testutils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-testutils.o `test -f 'test-komodo/testutils.cpp' || echo '$(srcdir)/'`test-komodo/testutils.cpp

test-komodo/komodo_test-testutils.obj: test-komodo/testutils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-testutils.obj -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-testutils.Tpo -c -o test-komodo/komodo_test-testutils.obj `if test -f 'test-komodo/testutils.cpp'; then $(CYGPATH_W) 'test-komodo/testutils.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/testutils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-testutils.Tpo test-komodo/$(DEPDIR)/komodo_test-testutils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/testutils.cpp' object='test-komodo/komodo_test-testutils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-testutils.obj `if test -f 'test-komodo/testutils.cpp'; then $(CYGPATH_W) 'test-komodo/testutils.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/testutils.cpp'; fi`

test-komodo/komodo_test-test_cryptoconditions.o: test-komodo/test_cryptoconditions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-test_cryptoconditions.o -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-test_cryptoconditions.Tpo -c -o test-komodo/komodo_test-test_cryptoconditions.o `test -f 'test-komodo/test_cryptoconditions.cpp' || echo '$(srcdir)/'`test-komodo/test_cryptoconditions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-test_cryptoconditions.Tpo test-komodo/$(DEPDIR)/komodo_test-test_cryptoconditions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/test_cryptoconditions.cpp' object='test-komodo/komodo_test-test_cryptoconditions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-test_cryptoconditions.o `test -f 'test-komodo/test_cryptoconditions.cpp' || echo '$(srcdir)/'`test-komodo/test_cryptoconditions.cpp

test-komodo/komodo_test-test_cryptoconditions.obj: test-komodo/test_cryptoconditions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-test_cryptoconditions.obj -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-test_cryptoconditions.Tpo -c -o test-komodo/komodo_test-test_cryptoconditions.obj `if test -f 'test-komodo/test_cryptoconditions.cpp'; then $(CYGPATH_W) 'test-komodo/test_cryptoconditions.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/test_cryptoconditions.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-test_cryptoconditions.Tpo test-komodo/$(DEPDIR)/komodo_test-test_cryptoconditions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/test_cryptoconditions.cpp' object='test-komodo/komodo_test-test_cryptoconditions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-test_cryptoconditions.obj `if test -f 'test-komodo/test_cryptoconditions.cpp'; then $(CYGPATH_W) 'test-komodo/test_cryptoconditions.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/test_cryptoconditions.cpp'; fi`

test-komodo/komodo_test-test_coinimport.o: test-komodo/test_coinimport.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-test_coinimport.o -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-test_coinimport.Tpo -c -o test-komodo/komodo_test-test_coinimport.o `test -f 'test-komodo/test_coinimport.cpp' || echo '$(srcdir)/'`test-komodo/test_coinimport.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-test_coinimport.Tpo test-komodo/$(DEPDIR)/komodo_test-test_coinimport.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/test_coinimport.cpp' object='test-komodo/komodo_test-test_coinimport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-test_coinimport.o `test -f 'test-komodo/test_coinimport.cpp' || echo '$(srcdir)/'`test-komodo/test_coinimport.cpp

test-komodo/komodo_test-test_coinimport.obj: test-komodo/test_coinimport.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-test_coinimport.obj -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-test_coinimport.Tpo -c -o test-komodo/komodo_test-test_coinimport.obj `if test -f 'test-komodo/test_coinimport.cpp'; then $(CYGPATH_W) 'test-komodo/test_coinimport.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/test_coinimport.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-test_coinimport.Tpo test-komodo/$(DEPDIR)/komodo_test-test_coinimport.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/test_coinimport.cpp' object='test-komodo/komodo_test-test_coinimport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-test_coinimport.obj `if test -f 'test-komodo/test_coinimport.cpp'; then $(CYGPATH_W) 'test-komodo/test_coinimport.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/test_coinimport.cpp'; fi`

test-komodo/komodo_test-test_eval_bet.o: test-komodo/test_eval_bet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-test_eval_bet.o -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-test_eval_bet.Tpo -c -o test-komodo/komodo_test-test_eval_bet.o `test -f 'test-komodo/test_eval_bet.cpp' || echo '$(srcdir)/'`test-komodo/test_eval_bet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-test_eval_bet.Tpo test-komodo/$(DEPDIR)/komodo_test-test_eval_bet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/test_eval_bet.cpp' object='test-komodo/komodo_test-test_eval_bet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-test_eval_bet.o `test -f 'test-komodo/test_eval_bet.cpp' || echo '$(srcdir)/'`test-komodo/test_eval_bet.cpp

test-komodo/komodo_test-test_eval_bet.obj: test-komodo/test_eval_bet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-test_eval_bet.obj -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-test_eval_bet.Tpo -c -o test-komodo/komodo_test-test_eval_bet.obj `if test -f 'test-komodo/test_eval_bet.cpp'; then $(CYGPATH_W) 'test-komodo/test_eval_bet.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/test_eval_bet.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-test_eval_bet.Tpo test-komodo/$(DEPDIR)/komodo_test-test_eval_bet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/test_eval_bet.cpp' object='test-komodo/komodo_test-test_eval_bet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-test_eval_bet.obj `if test -f 'test-komodo/test_eval_bet.cpp'; then $(CYGPATH_W) 'test-komodo/test_eval_bet.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/test_eval_bet.cpp'; fi`

test-komodo/komodo_test-test_eval_notarisation.o: test-komodo/test_eval_notarisation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-test_eval_notarisation.o -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-test_eval_notarisation.Tpo -c -o test-komodo/komodo_test-test_eval_notarisation.o `test -f 'test-komodo/test_eval_notarisation.cpp' || echo '$(srcdir)/'`test-komodo/test_eval_notarisation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-test_eval_notarisation.Tpo test-komodo/$(DEPDIR)/komodo_test-test_eval_notarisation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/test_eval_notarisation.cpp' object='test-komodo/komodo_test-test_eval_notarisation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-test_eval_notarisation.o `test -f 'test-komodo/test_eval_notarisation.cpp' || echo '$(srcdir)/'`test-komodo/test_eval_notarisation.cpp

test-komodo/komodo_test-test_eval_notarisation.obj: test-komodo/test_eval_notarisation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-test_eval_notarisation.obj -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-test_eval_notarisation.Tpo -c -o test-komodo/komodo_test-test_eval_notarisation.obj `if test -f 'test-komodo/test_eval_notarisation.cpp'; then $(CYGPATH_W) 'test-komodo/test_eval_notarisation.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/test_eval_notarisation.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-test_eval_notarisation.Tpo test-komodo/$(DEPDIR)/komodo_test-test_eval_notarisation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/test_eval_notarisation.cpp' object='test-komodo/komodo_test-test_eval_notarisation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-test_eval_notarisation.obj `if test -f 'test-komodo/test_eval_notarisation.cpp'; then $(CYGPATH_W) 'test-komodo/test_eval_notarisation.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/test_eval_notarisation.cpp'; fi`

test-komodo/komodo_test-test_parse_notarisation.o: test-komodo/test_parse_notarisation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-test_parse_notarisation.o -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-test_parse_notarisation.Tpo -c -o test-komodo/komodo_test-test_parse_notarisation.o `test -f 'test-komodo/test_parse_notarisation.cpp' || echo '$(srcdir)/'`test-komodo/test_parse_notarisation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-test_parse_notarisation.Tpo test-komodo/$(DEPDIR)/komodo_test-test_parse_notarisation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/test_parse_notarisation.cpp' object='test-komodo/komodo_test-test_parse_notarisation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-test_parse_notarisation.o `test -f 'test-komodo/test_parse_notarisation.cpp' || echo '$(srcdir)/'`test-komodo/test_parse_notarisation.cpp

test-komodo/komodo_test-test_parse_notarisation.obj: test-komodo/test_parse_notarisation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test-komodo/komodo_test-test_parse_notarisation.obj -MD -MP -MF test-komodo/$(DEPDIR)/komodo_test-test_parse_notarisation.Tpo -c -o test-komodo/komodo_test-test_parse_notarisation.obj `if test -f 'test-komodo/test_parse_notarisation.cpp'; then $(CYGPATH_W) 'test-komodo/test_parse_notarisation.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/test_parse_notarisation.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) test-komodo/$(DEPDIR)/komodo_test-test_parse_notarisation.Tpo test-komodo/$(DEPDIR)/komodo_test-test_parse_notarisation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-komodo/test_parse_notarisation.cpp' object='test-komodo/komodo_test-test_parse_notarisation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test-komodo/komodo_test-test_parse_notarisation.obj `if test -f 'test-komodo/test_parse_notarisation.cpp'; then $(CYGPATH_W) 'test-komodo/test_parse_notarisation.cpp'; else $(CYGPATH_W) '$(srcdir)/test-komodo/test_parse_notarisation.cpp'; fi`

komodo_tx-komodo-tx.o: komodo-tx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_tx_CPPFLAGS) $(CPPFLAGS) $(komodo_tx_CXXFLAGS) $(CXXFLAGS) -MT komodo_tx-komodo-tx.o -MD -MP -MF $(DEPDIR)/komodo_tx-komodo-tx.Tpo -c -o komodo_tx-komodo-tx.o `test -f 'komodo-tx.cpp' || echo '$(srcdir)/'`komodo-tx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/komodo_tx-komodo-tx.Tpo $(DEPDIR)/komodo_tx-komodo-tx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='komodo-tx.cpp' object='komodo_tx-komodo-tx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_tx_CPPFLAGS) $(CPPFLAGS) $(komodo_tx_CXXFLAGS) $(CXXFLAGS) -c -o komodo_tx-komodo-tx.o `test -f 'komodo-tx.cpp' || echo '$(srcdir)/'`komodo-tx.cpp

komodo_tx-komodo-tx.obj: komodo-tx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_tx_CPPFLAGS) $(CPPFLAGS) $(komodo_tx_CXXFLAGS) $(CXXFLAGS) -MT komodo_tx-komodo-tx.obj -MD -MP -MF $(DEPDIR)/komodo_tx-komodo-tx.Tpo -c -o komodo_tx-komodo-tx.obj `if test -f 'komodo-tx.cpp'; then $(CYGPATH_W) 'komodo-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/komodo-tx.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/komodo_tx-komodo-tx.Tpo $(DEPDIR)/komodo_tx-komodo-tx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='komodo-tx.cpp' object='komodo_tx-komodo-tx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodo_tx_CPPFLAGS) $(CPPFLAGS) $(komodo_tx_CXXFLAGS) $(CXXFLAGS) -c -o komodo_tx-komodo-tx.obj `if test -f 'komodo-tx.cpp'; then $(CYGPATH_W) 'komodo-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/komodo-tx.cpp'; fi`

komodod-bitcoind.o: bitcoind.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodod_CPPFLAGS) $(CPPFLAGS) $(komodod_CXXFLAGS) $(CXXFLAGS) -MT komodod-bitcoind.o -MD -MP -MF $(DEPDIR)/komodod-bitcoind.Tpo -c -o komodod-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/komodod-bitcoind.Tpo $(DEPDIR)/komodod-bitcoind.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitcoind.cpp' object='komodod-bitcoind.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodod_CPPFLAGS) $(CPPFLAGS) $(komodod_CXXFLAGS) $(CXXFLAGS) -c -o komodod-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp

komodod-bitcoind.obj: bitcoind.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodod_CPPFLAGS) $(CPPFLAGS) $(komodod_CXXFLAGS) $(CXXFLAGS) -MT komodod-bitcoind.obj -MD -MP -MF $(DEPDIR)/komodod-bitcoind.Tpo -c -o komodod-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/komodod-bitcoind.Tpo $(DEPDIR)/komodod-bitcoind.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitcoind.cpp' object='komodod-bitcoind.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(komodod_CPPFLAGS) $(CPPFLAGS) $(komodod_CXXFLAGS) $(CXXFLAGS) -c -o komodod-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`

wallet_utility-wallet-utility.o: wallet-utility.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wallet_utility_CPPFLAGS) $(CPPFLAGS) $(wallet_utility_CXXFLAGS) $(CXXFLAGS) -MT wallet_utility-wallet-utility.o -MD -MP -MF $(DEPDIR)/wallet_utility-wallet-utility.Tpo -c -o wallet_utility-wallet-utility.o `test -f 'wallet-utility.cpp' || echo '$(srcdir)/'`wallet-utility.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/wallet_utility-wallet-utility.Tpo $(DEPDIR)/wallet_utility-wallet-utility.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet-utility.cpp' object='wallet_utility-wallet-utility.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wallet_utility_CPPFLAGS) $(CPPFLAGS) $(wallet_utility_CXXFLAGS) $(CXXFLAGS) -c -o wallet_utility-wallet-utility.o `test -f 'wallet-utility.cpp' || echo '$(srcdir)/'`wallet-utility.cpp

wallet_utility-wallet-utility.obj: wallet-utility.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wallet_utility_CPPFLAGS) $(CPPFLAGS) $(wallet_utility_CXXFLAGS) $(CXXFLAGS) -MT wallet_utility-wallet-utility.obj -MD -MP -MF $(DEPDIR)/wallet_utility-wallet-utility.Tpo -c -o wallet_utility-wallet-utility.obj `if test -f 'wallet-utility.cpp'; then $(CYGPATH_W) 'wallet-utility.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet-utility.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/wallet_utility-wallet-utility.Tpo $(DEPDIR)/wallet_utility-wallet-utility.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wallet-utility.cpp' object='wallet_utility-wallet-utility.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wallet_utility_CPPFLAGS) $(CPPFLAGS) $(wallet_utility_CXXFLAGS) $(CXXFLAGS) -c -o wallet_utility-wallet-utility.obj `if test -f 'wallet-utility.cpp'; then $(CYGPATH_W) 'wallet-utility.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet-utility.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf compat/.libs compat/_libs
	-rm -rf crypto/.libs crypto/_libs
	-rm -rf primitives/.libs primitives/_libs
	-rm -rf script/.libs script/_libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
komodo-test.log: komodo-test$(EXEEXT)
	@p='komodo-test$(EXEEXT)'; \
	b='komodo-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f amqp/$(DEPDIR)/$(am__dirstamp)
	-rm -f amqp/$(am__dirstamp)
	-rm -f cc/$(DEPDIR)/$(am__dirstamp)
	-rm -f cc/$(am__dirstamp)
	-rm -f compat/$(DEPDIR)/$(am__dirstamp)
	-rm -f compat/$(am__dirstamp)
	-rm -f consensus/$(DEPDIR)/$(am__dirstamp)
	-rm -f consensus/$(am__dirstamp)
	-rm -f crypto/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto/$(am__dirstamp)
	-rm -f policy/$(DEPDIR)/$(am__dirstamp)
	-rm -f policy/$(am__dirstamp)
	-rm -f primitives/$(DEPDIR)/$(am__dirstamp)
	-rm -f primitives/$(am__dirstamp)
	-rm -f rpc/$(DEPDIR)/$(am__dirstamp)
	-rm -f rpc/$(am__dirstamp)
	-rm -f script/$(DEPDIR)/$(am__dirstamp)
	-rm -f script/$(am__dirstamp)
	-rm -f support/$(DEPDIR)/$(am__dirstamp)
	-rm -f support/$(am__dirstamp)
	-rm -f test-komodo/$(DEPDIR)/$(am__dirstamp)
	-rm -f test-komodo/$(am__dirstamp)
	-rm -f wallet/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/$(am__dirstamp)
	-rm -f zcash/$(DEPDIR)/$(am__dirstamp)
	-rm -f zcash/$(am__dirstamp)
	-rm -f zmq/$(DEPDIR)/$(am__dirstamp)
	-rm -f zmq/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) amqp/$(DEPDIR) cc/$(DEPDIR) compat/$(DEPDIR) consensus/$(DEPDIR) crypto/$(DEPDIR) policy/$(DEPDIR) primitives/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) support/$(DEPDIR) test-komodo/$(DEPDIR) wallet/$(DEPDIR) zcash/$(DEPDIR) zmq/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) amqp/$(DEPDIR) cc/$(DEPDIR) compat/$(DEPDIR) consensus/$(DEPDIR) crypto/$(DEPDIR) policy/$(DEPDIR) primitives/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) support/$(DEPDIR) test-komodo/$(DEPDIR) wallet/$(DEPDIR) zcash/$(DEPDIR) zmq/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-binPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race
@EMBEDDED_LEVELDB_TRUE@$(LIBLEVELDB): $(LIBMEMENV)

@EMBEDDED_LEVELDB_TRUE@$(LIBLEVELDB) $(LIBMEMENV):
@EMBEDDED_LEVELDB_TRUE@	@echo "Building LevelDB ..." && $(MAKE) -C $(@D) $(@F) CXX="$(CXX)" \
@EMBEDDED_LEVELDB_TRUE@	  CC="$(CC)" PLATFORM=$(TARGET_OS) AR="$(AR)" $(LEVELDB_TARGET_FLAGS) \
@EMBEDDED_LEVELDB_TRUE@          OPT="$(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) $(AM_CPPFLAGS) $(CPPFLAGS) -D__STDC_LIMIT_MACROS"

$(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F) OPTFLAGS="-O2 -march=x86-64 -g "

$(LIBSNARK): $(wildcard snark/src/*)
	$(AM_V_at) CC="$(CC)" CXX="$(CXX)" AR="$(AR)" CXXFLAGS="$(LIBSNARK_CXXFLAGS)" $(MAKE) $(AM_MAKEFLAGS) -C snark/ DEPINST="$(LIBSNARK_DEPINST)" $(LIBSNARK_CONFIG_FLAGS) OPTFLAGS="-O2 -march=x86-64"

libsnark-tests: $(wildcard snark/src/*)
	$(AM_V_at) CC="$(CC)" CXX="$(CXX)" AR="$(AR)" CXXFLAGS="$(LIBSNARK_CXXFLAGS)" $(MAKE) $(AM_MAKEFLAGS) -C snark/ check DEPINST="$(LIBSNARK_DEPINST)" $(LIBSNARK_CONFIG_FLAGS) OPTFLAGS="-O2 -march=x86-64"

$(LIBUNIVALUE): $(wildcard univalue/lib/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F) OPTFLAGS="-O2 -march=x86-64 -g "

$(LIBCRYPTOCONDITIONS): $(wildcard cryptoconditions/src/*) $(wildcard cryptoconditions/include/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F) OPTFLAGS="-O2 -march=x86-64 -g "

.PHONY: FORCE collate-libsnark check-symbols check-security

obj/build.h: FORCE
	@$(MKDIR_P) $(builddir)/obj
	@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \
	$(abs_top_srcdir)
libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h

clean-local:
	-$(MAKE) -C leveldb clean
	-$(MAKE) -C secp256k1 clean
	-$(MAKE) -C snark clean
	-$(MAKE) -C univalue clean
	rm -f leveldb/*/*.gcno leveldb/helpers/memenv/*.gcno
	-rm -f config.h

.rc.o:
	@test -f $(WINDRES)
	$(AM_V_GEN) $(WINDRES) -DWINDRES_PREPROC -i $< -o $@

.mm.o:
	$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	  $(CPPFLAGS) $(AM_CXXFLAGS) $(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) -c -o $@ $<

check-symbols: $(bin_PROGRAMS)
@GLIBC_BACK_COMPAT_TRUE@	@echo "Checking glibc back compat of [$(bin_PROGRAMS)]..."
@GLIBC_BACK_COMPAT_TRUE@	$(AM_V_at) READELF=$(READELF) CPPFILT=$(CPPFILT) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)

check-security: $(bin_PROGRAMS)
@HARDEN_TRUE@	@echo "Checking binary security of [$(bin_PROGRAMS)]..."
@HARDEN_TRUE@	$(AM_V_at) READELF=$(READELF) OBJDUMP=$(OBJDUMP) $(top_srcdir)/contrib/devtools/security-check.py $(bin_PROGRAMS)

%.pb.cc %.pb.h: %.proto
	@test -f $(PROTOC)
	$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)

#include Makefile.test.include
#include Makefile.gtest.include

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
